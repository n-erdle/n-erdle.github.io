{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/seedrandom/lib/alea.js","../../node_modules/seedrandom/lib/xor128.js","../../node_modules/seedrandom/lib/xorwow.js","../../node_modules/seedrandom/lib/xorshift7.js","../../node_modules/seedrandom/lib/xor4096.js","../../node_modules/seedrandom/lib/tychei.js","../../node_modules/seedrandom/seedrandom.js","../../node_modules/seedrandom/index.js","../../src/enums.ts","../../src/words_5.ts","../../src/utils.ts","../../node_modules/svelte/easing/index.mjs","../../node_modules/svelte/transition/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/stores.ts","../../src/components/GameIcon.svelte","../../src/components/Header.svelte","../../src/components/board/Tile.svelte","../../src/components/board/Row.svelte","../../src/components/board/Board.svelte","../../src/components/keyboard/Key.svelte","../../src/components/keyboard/Keyboard.svelte","../../src/components/Modal.svelte","../../src/components/widgets/Form.svelte","../../src/components/widgets/Separator.svelte","../../src/components/widgets/sharebuttons/ShareButton.svelte","../../src/components/widgets/sharebuttons/WhatsApp.svelte","../../src/components/widgets/sharebuttons/Twitter.svelte","../../src/components/widgets/Share.svelte","../../src/components/widgets/Tutorial.svelte","../../src/components/widgets/Timer.svelte","../../src/components/widgets/Toaster.svelte","../../src/components/widgets/stats/Distribution.svelte","../../src/components/settings/Switch.svelte","../../src/components/settings/Setting.svelte","../../src/components/settings/Settings.svelte","../../src/components/Game.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.4' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = String(data);\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (global, pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\n\nvar width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n} else {\n  // When included as a plain script, set up Math.seedrandom global.\n  math['seed' + rngname] = seedrandom;\n}\n\n\n// End anonymous scope, and pass initial values.\n})(\n  // global: `self` in browsers (including strict mode and web workers),\n  // otherwise `this` in Node and other environments\n  (typeof self !== 'undefined') ? self : this,\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n","export var GameMode;\n(function (GameMode) {\n    GameMode[GameMode[\"daily\"] = 0] = \"daily\";\n})(GameMode || (GameMode = {}));\n;\n","const words = {\n    \"words\": [\n        \"build\", \"usage\", \"pylon\"\n    ],\n    \"valid\": [\n        \"cigar\",\n        \"rebut\",\n        \"sissy\",\n        \"humph\",\n        \"awake\",\n        \"blush\",\n        \"focal\",\n        \"evade\",\n        \"naval\",\n        \"serve\",\n        \"heath\",\n        \"dwarf\",\n        \"model\",\n        \"karma\",\n        \"stink\",\n        \"grade\",\n        \"quiet\",\n        \"bench\",\n        \"abate\",\n        \"feign\",\n        \"major\",\n        \"death\",\n        \"fresh\",\n        \"crust\",\n        \"stool\",\n        \"colon\",\n        \"abase\",\n        \"marry\",\n        \"react\",\n        \"batty\",\n        \"pride\",\n        \"floss\",\n        \"helix\",\n        \"croak\",\n        \"staff\",\n        \"paper\",\n        \"unfed\",\n        \"whelp\",\n        \"trawl\",\n        \"outdo\",\n        \"adobe\",\n        \"crazy\",\n        \"sower\",\n        \"repay\",\n        \"digit\",\n        \"crate\",\n        \"cluck\",\n        \"spike\",\n        \"mimic\",\n        \"pound\",\n        \"maxim\",\n        \"linen\",\n        \"unmet\",\n        \"flesh\",\n        \"booby\",\n        \"forth\",\n        \"first\",\n        \"stand\",\n        \"belly\",\n        \"ivory\",\n        \"seedy\",\n        \"print\",\n        \"yearn\",\n        \"drain\",\n        \"bribe\",\n        \"stout\",\n        \"panel\",\n        \"crass\",\n        \"flume\",\n        \"offal\",\n        \"agree\",\n        \"error\",\n        \"swirl\",\n        \"argue\",\n        \"bleed\",\n        \"delta\",\n        \"flick\",\n        \"totem\",\n        \"wooer\",\n        \"front\",\n        \"shrub\",\n        \"parry\",\n        \"biome\",\n        \"lapel\",\n        \"start\",\n        \"greet\",\n        \"goner\",\n        \"golem\",\n        \"lusty\",\n        \"loopy\",\n        \"round\",\n        \"audit\",\n        \"lying\",\n        \"gamma\",\n        \"labor\",\n        \"islet\",\n        \"civic\",\n        \"forge\",\n        \"corny\",\n        \"moult\",\n        \"basic\",\n        \"salad\",\n        \"agate\",\n        \"spicy\",\n        \"spray\",\n        \"essay\",\n        \"fjord\",\n        \"spend\",\n        \"kebab\",\n        \"guild\",\n        \"aback\",\n        \"motor\",\n        \"alone\",\n        \"hatch\",\n        \"hyper\",\n        \"thumb\",\n        \"dowry\",\n        \"ought\",\n        \"belch\",\n        \"dutch\",\n        \"pilot\",\n        \"tweed\",\n        \"comet\",\n        \"jaunt\",\n        \"enema\",\n        \"steed\",\n        \"abyss\",\n        \"growl\",\n        \"fling\",\n        \"dozen\",\n        \"boozy\",\n        \"erode\",\n        \"world\",\n        \"gouge\",\n        \"click\",\n        \"briar\",\n        \"great\",\n        \"altar\",\n        \"pulpy\",\n        \"blurt\",\n        \"coast\",\n        \"duchy\",\n        \"groin\",\n        \"fixer\",\n        \"group\",\n        \"rogue\",\n        \"badly\",\n        \"smart\",\n        \"pithy\",\n        \"gaudy\",\n        \"chill\",\n        \"heron\",\n        \"vodka\",\n        \"finer\",\n        \"surer\",\n        \"radio\",\n        \"rouge\",\n        \"perch\",\n        \"retch\",\n        \"wrote\",\n        \"clock\",\n        \"tilde\",\n        \"store\",\n        \"prove\",\n        \"bring\",\n        \"solve\",\n        \"cheat\",\n        \"grime\",\n        \"exult\",\n        \"usher\",\n        \"epoch\",\n        \"triad\",\n        \"break\",\n        \"rhino\",\n        \"viral\",\n        \"conic\",\n        \"masse\",\n        \"sonic\",\n        \"vital\",\n        \"trace\",\n        \"using\",\n        \"peach\",\n        \"champ\",\n        \"baton\",\n        \"brake\",\n        \"pluck\",\n        \"craze\",\n        \"gripe\",\n        \"weary\",\n        \"picky\",\n        \"acute\",\n        \"ferry\",\n        \"aside\",\n        \"tapir\",\n        \"troll\",\n        \"unify\",\n        \"rebus\",\n        \"boost\",\n        \"truss\",\n        \"siege\",\n        \"tiger\",\n        \"banal\",\n        \"slump\",\n        \"crank\",\n        \"gorge\",\n        \"query\",\n        \"drink\",\n        \"favor\",\n        \"abbey\",\n        \"tangy\",\n        \"panic\",\n        \"solar\",\n        \"shire\",\n        \"proxy\",\n        \"point\",\n        \"robot\",\n        \"prick\",\n        \"wince\",\n        \"crimp\",\n        \"knoll\",\n        \"sugar\",\n        \"whack\",\n        \"mount\",\n        \"perky\",\n        \"could\",\n        \"wrung\",\n        \"light\",\n        \"those\",\n        \"moist\",\n        \"shard\",\n        \"pleat\",\n        \"aloft\",\n        \"skill\",\n        \"elder\",\n        \"frame\",\n        \"humor\",\n        \"pause\",\n        \"ulcer\",\n        \"ultra\",\n        \"robin\",\n        \"cynic\",\n        \"agora\",\n        \"aroma\",\n        \"caulk\",\n        \"shake\",\n        \"pupal\",\n        \"dodge\",\n        \"swill\",\n        \"tacit\",\n        \"other\",\n        \"thorn\",\n        \"trove\",\n        \"bloke\",\n        \"vivid\",\n        \"spill\",\n        \"chant\",\n        \"choke\",\n        \"rupee\",\n        \"nasty\",\n        \"mourn\",\n        \"ahead\",\n        \"brine\",\n        \"cloth\",\n        \"hoard\",\n        \"sweet\",\n        \"month\",\n        \"lapse\",\n        \"watch\",\n        \"today\",\n        \"focus\",\n        \"smelt\",\n        \"tease\",\n        \"cater\",\n        \"movie\",\n        \"lynch\",\n        \"saute\",\n        \"allow\",\n        \"renew\",\n        \"their\",\n        \"slosh\",\n        \"purge\",\n        \"chest\",\n        \"depot\",\n        \"epoxy\",\n        \"nymph\",\n        \"found\",\n        \"shall\",\n        \"harry\",\n        \"stove\",\n        \"lowly\",\n        \"snout\",\n        \"trope\",\n        \"fewer\",\n        \"shawl\",\n        \"natal\",\n        \"fibre\",\n        \"comma\",\n        \"foray\",\n        \"scare\",\n        \"stair\",\n        \"black\",\n        \"squad\",\n        \"royal\",\n        \"chunk\",\n        \"mince\",\n        \"slave\",\n        \"shame\",\n        \"cheek\",\n        \"ample\",\n        \"flair\",\n        \"foyer\",\n        \"cargo\",\n        \"oxide\",\n        \"plant\",\n        \"olive\",\n        \"inert\",\n        \"askew\",\n        \"heist\",\n        \"shown\",\n        \"zesty\",\n        \"hasty\",\n        \"trash\",\n        \"fella\",\n        \"larva\",\n        \"forgo\",\n        \"story\",\n        \"hairy\",\n        \"train\",\n        \"homer\",\n        \"badge\",\n        \"midst\",\n        \"canny\",\n        \"fetus\",\n        \"butch\",\n        \"farce\",\n        \"slung\",\n        \"tipsy\",\n        \"metal\",\n        \"yield\",\n        \"delve\",\n        \"being\",\n        \"scour\",\n        \"glass\",\n        \"gamer\",\n        \"scrap\",\n        \"money\",\n        \"hinge\",\n        \"album\",\n        \"vouch\",\n        \"asset\",\n        \"tiara\",\n        \"crept\",\n        \"bayou\",\n        \"atoll\",\n        \"manor\",\n        \"creak\",\n        \"showy\",\n        \"phase\",\n        \"froth\",\n        \"depth\",\n        \"gloom\",\n        \"flood\",\n        \"trait\",\n        \"girth\",\n        \"piety\",\n        \"payer\",\n        \"goose\",\n        \"float\",\n        \"donor\",\n        \"atone\",\n        \"primo\",\n        \"apron\",\n        \"blown\",\n        \"cacao\",\n        \"loser\",\n        \"input\",\n        \"gloat\",\n        \"awful\",\n        \"brink\",\n        \"smite\",\n        \"beady\",\n        \"rusty\",\n        \"retro\",\n        \"droll\",\n        \"gawky\",\n        \"hutch\",\n        \"pinto\",\n        \"gaily\",\n        \"egret\",\n        \"lilac\",\n        \"sever\",\n        \"field\",\n        \"fluff\",\n        \"hydro\",\n        \"flack\",\n        \"agape\",\n        \"wench\",\n        \"voice\",\n        \"stead\",\n        \"stalk\",\n        \"berth\",\n        \"madam\",\n        \"night\",\n        \"bland\",\n        \"liver\",\n        \"wedge\",\n        \"augur\",\n        \"roomy\",\n        \"wacky\",\n        \"flock\",\n        \"angry\",\n        \"bobby\",\n        \"trite\",\n        \"aphid\",\n        \"tryst\",\n        \"midge\",\n        \"power\",\n        \"elope\",\n        \"cinch\",\n        \"motto\",\n        \"stomp\",\n        \"upset\",\n        \"bluff\",\n        \"cramp\",\n        \"quart\",\n        \"coyly\",\n        \"youth\",\n        \"rhyme\",\n        \"buggy\",\n        \"alien\",\n        \"smear\",\n        \"unfit\",\n        \"patty\",\n        \"cling\",\n        \"glean\",\n        \"label\",\n        \"hunky\",\n        \"khaki\",\n        \"poker\",\n        \"gruel\",\n        \"twice\",\n        \"twang\",\n        \"shrug\",\n        \"treat\",\n        \"unlit\",\n        \"waste\",\n        \"merit\",\n        \"woven\",\n        \"octal\",\n        \"needy\",\n        \"clown\",\n        \"widow\",\n        \"irony\",\n        \"ruder\",\n        \"gauze\",\n        \"chief\",\n        \"onset\",\n        \"prize\",\n        \"fungi\",\n        \"charm\",\n        \"gully\",\n        \"inter\",\n        \"whoop\",\n        \"taunt\",\n        \"leery\",\n        \"class\",\n        \"theme\",\n        \"lofty\",\n        \"tibia\",\n        \"booze\",\n        \"alpha\",\n        \"thyme\",\n        \"eclat\",\n        \"doubt\",\n        \"parer\",\n        \"chute\",\n        \"stick\",\n        \"trice\",\n        \"alike\",\n        \"sooth\",\n        \"recap\",\n        \"saint\",\n        \"liege\",\n        \"glory\",\n        \"grate\",\n        \"admit\",\n        \"brisk\",\n        \"soggy\",\n        \"usurp\",\n        \"scald\",\n        \"scorn\",\n        \"leave\",\n        \"twine\",\n        \"sting\",\n        \"bough\",\n        \"marsh\",\n        \"sloth\",\n        \"dandy\",\n        \"vigor\",\n        \"howdy\",\n        \"enjoy\",\n        \"valid\",\n        \"ionic\",\n        \"equal\",\n        \"unset\",\n        \"floor\",\n        \"catch\",\n        \"spade\",\n        \"stein\",\n        \"exist\",\n        \"quirk\",\n        \"denim\",\n        \"grove\",\n        \"spiel\",\n        \"mummy\",\n        \"fault\",\n        \"foggy\",\n        \"flout\",\n        \"carry\",\n        \"sneak\",\n        \"libel\",\n        \"waltz\",\n        \"aptly\",\n        \"piney\",\n        \"inept\",\n        \"aloud\",\n        \"photo\",\n        \"dream\",\n        \"stale\",\n        \"vomit\",\n        \"ombre\",\n        \"fanny\",\n        \"unite\",\n        \"snarl\",\n        \"baker\",\n        \"there\",\n        \"glyph\",\n        \"pooch\",\n        \"hippy\",\n        \"spell\",\n        \"folly\",\n        \"louse\",\n        \"gulch\",\n        \"vault\",\n        \"godly\",\n        \"threw\",\n        \"fleet\",\n        \"grave\",\n        \"inane\",\n        \"shock\",\n        \"crave\",\n        \"spite\",\n        \"valve\",\n        \"skimp\",\n        \"claim\",\n        \"rainy\",\n        \"musty\",\n        \"pique\",\n        \"daddy\",\n        \"quasi\",\n        \"arise\",\n        \"aging\",\n        \"valet\",\n        \"opium\",\n        \"avert\",\n        \"stuck\",\n        \"recut\",\n        \"mulch\",\n        \"genre\",\n        \"plume\",\n        \"rifle\",\n        \"count\",\n        \"incur\",\n        \"total\",\n        \"wrest\",\n        \"mocha\",\n        \"deter\",\n        \"study\",\n        \"lover\",\n        \"safer\",\n        \"rivet\",\n        \"funny\",\n        \"smoke\",\n        \"mound\",\n        \"undue\",\n        \"sedan\",\n        \"pagan\",\n        \"swine\",\n        \"guile\",\n        \"gusty\",\n        \"equip\",\n        \"tough\",\n        \"canoe\",\n        \"chaos\",\n        \"covet\",\n        \"human\",\n        \"udder\",\n        \"lunch\",\n        \"blast\",\n        \"stray\",\n        \"manga\",\n        \"melee\",\n        \"lefty\",\n        \"quick\",\n        \"paste\",\n        \"given\",\n        \"octet\",\n        \"risen\",\n        \"groan\",\n        \"leaky\",\n        \"grind\",\n        \"carve\",\n        \"loose\",\n        \"sadly\",\n        \"spilt\",\n        \"apple\",\n        \"slack\",\n        \"honey\",\n        \"final\",\n        \"sheen\",\n        \"eerie\",\n        \"minty\",\n        \"slick\",\n        \"derby\",\n        \"wharf\",\n        \"spelt\",\n        \"coach\",\n        \"erupt\",\n        \"singe\",\n        \"price\",\n        \"spawn\",\n        \"fairy\",\n        \"jiffy\",\n        \"filmy\",\n        \"stack\",\n        \"chose\",\n        \"sleep\",\n        \"ardor\",\n        \"nanny\",\n        \"niece\",\n        \"woozy\",\n        \"handy\",\n        \"grace\",\n        \"ditto\",\n        \"stank\",\n        \"cream\",\n        \"usual\",\n        \"diode\",\n        \"valor\",\n        \"angle\",\n        \"ninja\",\n        \"muddy\",\n        \"chase\",\n        \"reply\",\n        \"prone\",\n        \"spoil\",\n        \"heart\",\n        \"shade\",\n        \"diner\",\n        \"arson\",\n        \"onion\",\n        \"sleet\",\n        \"dowel\",\n        \"couch\",\n        \"palsy\",\n        \"bowel\",\n        \"smile\",\n        \"evoke\",\n        \"creek\",\n        \"lance\",\n        \"eagle\",\n        \"idiot\",\n        \"siren\",\n        \"built\",\n        \"embed\",\n        \"award\",\n        \"dross\",\n        \"annul\",\n        \"goody\",\n        \"frown\",\n        \"patio\",\n        \"laden\",\n        \"humid\",\n        \"elite\",\n        \"lymph\",\n        \"edify\",\n        \"might\",\n        \"reset\",\n        \"visit\",\n        \"gusto\",\n        \"purse\",\n        \"vapor\",\n        \"crock\",\n        \"write\",\n        \"sunny\",\n        \"loath\",\n        \"chaff\",\n        \"slide\",\n        \"queer\",\n        \"venom\",\n        \"stamp\",\n        \"sorry\",\n        \"still\",\n        \"acorn\",\n        \"aping\",\n        \"pushy\",\n        \"tamer\",\n        \"hater\",\n        \"mania\",\n        \"awoke\",\n        \"brawn\",\n        \"swift\",\n        \"exile\",\n        \"birch\",\n        \"lucky\",\n        \"freer\",\n        \"risky\",\n        \"ghost\",\n        \"plier\",\n        \"lunar\",\n        \"winch\",\n        \"snare\",\n        \"nurse\",\n        \"house\",\n        \"borax\",\n        \"nicer\",\n        \"lurch\",\n        \"exalt\",\n        \"about\",\n        \"savvy\",\n        \"toxin\",\n        \"tunic\",\n        \"pried\",\n        \"inlay\",\n        \"chump\",\n        \"lanky\",\n        \"cress\",\n        \"eater\",\n        \"elude\",\n        \"cycle\",\n        \"kitty\",\n        \"boule\",\n        \"moron\",\n        \"tenet\",\n        \"place\",\n        \"lobby\",\n        \"plush\",\n        \"vigil\",\n        \"index\",\n        \"blink\",\n        \"clung\",\n        \"qualm\",\n        \"croup\",\n        \"clink\",\n        \"juicy\",\n        \"stage\",\n        \"decay\",\n        \"nerve\",\n        \"flier\",\n        \"shaft\",\n        \"crook\",\n        \"clean\",\n        \"china\",\n        \"ridge\",\n        \"vowel\",\n        \"gnome\",\n        \"snuck\",\n        \"icing\",\n        \"spiny\",\n        \"rigor\",\n        \"snail\",\n        \"flown\",\n        \"rabid\",\n        \"prose\",\n        \"thank\",\n        \"poppy\",\n        \"budge\",\n        \"fiber\",\n        \"moldy\",\n        \"dowdy\",\n        \"kneel\",\n        \"track\",\n        \"caddy\",\n        \"quell\",\n        \"dumpy\",\n        \"paler\",\n        \"swore\",\n        \"rebar\",\n        \"scuba\",\n        \"splat\",\n        \"flyer\",\n        \"horny\",\n        \"mason\",\n        \"doing\",\n        \"ozone\",\n        \"amply\",\n        \"molar\",\n        \"ovary\",\n        \"beset\",\n        \"queue\",\n        \"cliff\",\n        \"magic\",\n        \"truce\",\n        \"sport\",\n        \"fritz\",\n        \"edict\",\n        \"twirl\",\n        \"verse\",\n        \"llama\",\n        \"eaten\",\n        \"range\",\n        \"whisk\",\n        \"hovel\",\n        \"rehab\",\n        \"macaw\",\n        \"sigma\",\n        \"spout\",\n        \"verve\",\n        \"sushi\",\n        \"dying\",\n        \"fetid\",\n        \"brain\",\n        \"buddy\",\n        \"thump\",\n        \"scion\",\n        \"candy\",\n        \"chord\",\n        \"basin\",\n        \"march\",\n        \"crowd\",\n        \"arbor\",\n        \"gayly\",\n        \"musky\",\n        \"stain\",\n        \"dally\",\n        \"bless\",\n        \"bravo\",\n        \"stung\",\n        \"title\",\n        \"ruler\",\n        \"kiosk\",\n        \"blond\",\n        \"ennui\",\n        \"layer\",\n        \"fluid\",\n        \"tatty\",\n        \"score\",\n        \"cutie\",\n        \"zebra\",\n        \"barge\",\n        \"matey\",\n        \"bluer\",\n        \"aider\",\n        \"shook\",\n        \"river\",\n        \"privy\",\n        \"betel\",\n        \"frisk\",\n        \"bongo\",\n        \"begun\",\n        \"azure\",\n        \"weave\",\n        \"genie\",\n        \"sound\",\n        \"glove\",\n        \"braid\",\n        \"scope\",\n        \"wryly\",\n        \"rover\",\n        \"assay\",\n        \"ocean\",\n        \"bloom\",\n        \"irate\",\n        \"later\",\n        \"woken\",\n        \"silky\",\n        \"wreck\",\n        \"dwelt\",\n        \"slate\",\n        \"smack\",\n        \"solid\",\n        \"amaze\",\n        \"hazel\",\n        \"wrist\",\n        \"jolly\",\n        \"globe\",\n        \"flint\",\n        \"rouse\",\n        \"civil\",\n        \"vista\",\n        \"relax\",\n        \"cover\",\n        \"alive\",\n        \"beech\",\n        \"jetty\",\n        \"bliss\",\n        \"vocal\",\n        \"often\",\n        \"dolly\",\n        \"eight\",\n        \"joker\",\n        \"since\",\n        \"event\",\n        \"ensue\",\n        \"shunt\",\n        \"diver\",\n        \"poser\",\n        \"worst\",\n        \"sweep\",\n        \"alley\",\n        \"creed\",\n        \"anime\",\n        \"leafy\",\n        \"bosom\",\n        \"dunce\",\n        \"stare\",\n        \"pudgy\",\n        \"waive\",\n        \"choir\",\n        \"stood\",\n        \"spoke\",\n        \"outgo\",\n        \"delay\",\n        \"bilge\",\n        \"ideal\",\n        \"clasp\",\n        \"seize\",\n        \"hotly\",\n        \"laugh\",\n        \"sieve\",\n        \"block\",\n        \"meant\",\n        \"grape\",\n        \"noose\",\n        \"hardy\",\n        \"shied\",\n        \"drawl\",\n        \"daisy\",\n        \"putty\",\n        \"strut\",\n        \"burnt\",\n        \"tulip\",\n        \"crick\",\n        \"idyll\",\n        \"vixen\",\n        \"furor\",\n        \"geeky\",\n        \"cough\",\n        \"naive\",\n        \"shoal\",\n        \"stork\",\n        \"bathe\",\n        \"aunty\",\n        \"check\",\n        \"prime\",\n        \"brass\",\n        \"outer\",\n        \"furry\",\n        \"razor\",\n        \"elect\",\n        \"evict\",\n        \"imply\",\n        \"demur\",\n        \"quota\",\n        \"haven\",\n        \"cavil\",\n        \"swear\",\n        \"crump\",\n        \"dough\",\n        \"gavel\",\n        \"wagon\",\n        \"salon\",\n        \"nudge\",\n        \"harem\",\n        \"pitch\",\n        \"sworn\",\n        \"pupil\",\n        \"excel\",\n        \"stony\",\n        \"cabin\",\n        \"unzip\",\n        \"queen\",\n        \"trout\",\n        \"polyp\",\n        \"earth\",\n        \"storm\",\n        \"until\",\n        \"taper\",\n        \"enter\",\n        \"child\",\n        \"adopt\",\n        \"minor\",\n        \"fatty\",\n        \"husky\",\n        \"brave\",\n        \"filet\",\n        \"slime\",\n        \"glint\",\n        \"tread\",\n        \"steal\",\n        \"regal\",\n        \"guest\",\n        \"every\",\n        \"murky\",\n        \"share\",\n        \"spore\",\n        \"hoist\",\n        \"buxom\",\n        \"inner\",\n        \"otter\",\n        \"dimly\",\n        \"level\",\n        \"sumac\",\n        \"donut\",\n        \"stilt\",\n        \"arena\",\n        \"sheet\",\n        \"scrub\",\n        \"fancy\",\n        \"slimy\",\n        \"pearl\",\n        \"silly\",\n        \"porch\",\n        \"dingo\",\n        \"sepia\",\n        \"amble\",\n        \"shady\",\n        \"bread\",\n        \"friar\",\n        \"reign\",\n        \"dairy\",\n        \"quill\",\n        \"cross\",\n        \"brood\",\n        \"tuber\",\n        \"shear\",\n        \"posit\",\n        \"blank\",\n        \"villa\",\n        \"shank\",\n        \"piggy\",\n        \"freak\",\n        \"which\",\n        \"among\",\n        \"fecal\",\n        \"shell\",\n        \"would\",\n        \"algae\",\n        \"large\",\n        \"rabbi\",\n        \"agony\",\n        \"amuse\",\n        \"bushy\",\n        \"copse\",\n        \"swoon\",\n        \"knife\",\n        \"pouch\",\n        \"ascot\",\n        \"plane\",\n        \"crown\",\n        \"urban\",\n        \"snide\",\n        \"relay\",\n        \"abide\",\n        \"viola\",\n        \"rajah\",\n        \"straw\",\n        \"dilly\",\n        \"crash\",\n        \"amass\",\n        \"third\",\n        \"trick\",\n        \"tutor\",\n        \"woody\",\n        \"blurb\",\n        \"grief\",\n        \"disco\",\n        \"where\",\n        \"sassy\",\n        \"beach\",\n        \"sauna\",\n        \"comic\",\n        \"clued\",\n        \"creep\",\n        \"caste\",\n        \"graze\",\n        \"snuff\",\n        \"frock\",\n        \"gonad\",\n        \"drunk\",\n        \"prong\",\n        \"lurid\",\n        \"steel\",\n        \"halve\",\n        \"buyer\",\n        \"vinyl\",\n        \"utile\",\n        \"smell\",\n        \"adage\",\n        \"worry\",\n        \"tasty\",\n        \"local\",\n        \"trade\",\n        \"finch\",\n        \"ashen\",\n        \"modal\",\n        \"gaunt\",\n        \"clove\",\n        \"enact\",\n        \"adorn\",\n        \"roast\",\n        \"speck\",\n        \"sheik\",\n        \"missy\",\n        \"grunt\",\n        \"snoop\",\n        \"party\",\n        \"touch\",\n        \"mafia\",\n        \"emcee\",\n        \"array\",\n        \"south\",\n        \"vapid\",\n        \"jelly\",\n        \"skulk\",\n        \"angst\",\n        \"tubal\",\n        \"lower\",\n        \"crest\",\n        \"sweat\",\n        \"cyber\",\n        \"adore\",\n        \"tardy\",\n        \"swami\",\n        \"notch\",\n        \"groom\",\n        \"roach\",\n        \"hitch\",\n        \"young\",\n        \"align\",\n        \"ready\",\n        \"frond\",\n        \"strap\",\n        \"puree\",\n        \"realm\",\n        \"venue\",\n        \"swarm\",\n        \"offer\",\n        \"seven\",\n        \"dryer\",\n        \"diary\",\n        \"dryly\",\n        \"drank\",\n        \"acrid\",\n        \"heady\",\n        \"theta\",\n        \"junto\",\n        \"pixie\",\n        \"quoth\",\n        \"bonus\",\n        \"shalt\",\n        \"penne\",\n        \"amend\",\n        \"datum\",\n        \"build\",\n        \"piano\",\n        \"shelf\",\n        \"lodge\",\n        \"suing\",\n        \"rearm\",\n        \"coral\",\n        \"ramen\",\n        \"worth\",\n        \"psalm\",\n        \"infer\",\n        \"overt\",\n        \"mayor\",\n        \"ovoid\",\n        \"glide\",\n        \"usage\",\n        \"poise\",\n        \"randy\",\n        \"chuck\",\n        \"prank\",\n        \"fishy\",\n        \"tooth\",\n        \"ether\",\n        \"drove\",\n        \"idler\",\n        \"swath\",\n        \"stint\",\n        \"while\",\n        \"begat\",\n        \"apply\",\n        \"slang\",\n        \"tarot\",\n        \"radar\",\n        \"credo\",\n        \"aware\",\n        \"canon\",\n        \"shift\",\n        \"timer\",\n        \"bylaw\",\n        \"serum\",\n        \"three\",\n        \"steak\",\n        \"iliac\",\n        \"shirk\",\n        \"blunt\",\n        \"puppy\",\n        \"penal\",\n        \"joist\",\n        \"bunny\",\n        \"shape\",\n        \"beget\",\n        \"wheel\",\n        \"adept\",\n        \"stunt\",\n        \"stole\",\n        \"topaz\",\n        \"chore\",\n        \"fluke\",\n        \"afoot\",\n        \"bloat\",\n        \"bully\",\n        \"dense\",\n        \"caper\",\n        \"sneer\",\n        \"boxer\",\n        \"jumbo\",\n        \"lunge\",\n        \"space\",\n        \"avail\",\n        \"short\",\n        \"slurp\",\n        \"loyal\",\n        \"flirt\",\n        \"pizza\",\n        \"conch\",\n        \"tempo\",\n        \"droop\",\n        \"plate\",\n        \"bible\",\n        \"plunk\",\n        \"afoul\",\n        \"savoy\",\n        \"steep\",\n        \"agile\",\n        \"stake\",\n        \"dwell\",\n        \"knave\",\n        \"beard\",\n        \"arose\",\n        \"motif\",\n        \"smash\",\n        \"broil\",\n        \"glare\",\n        \"shove\",\n        \"baggy\",\n        \"mammy\",\n        \"swamp\",\n        \"along\",\n        \"rugby\",\n        \"wager\",\n        \"quack\",\n        \"squat\",\n        \"snaky\",\n        \"debit\",\n        \"mange\",\n        \"skate\",\n        \"ninth\",\n        \"joust\",\n        \"tramp\",\n        \"spurn\",\n        \"medal\",\n        \"micro\",\n        \"rebel\",\n        \"flank\",\n        \"learn\",\n        \"nadir\",\n        \"maple\",\n        \"comfy\",\n        \"remit\",\n        \"gruff\",\n        \"ester\",\n        \"least\",\n        \"mogul\",\n        \"fetch\",\n        \"cause\",\n        \"oaken\",\n        \"aglow\",\n        \"meaty\",\n        \"gaffe\",\n        \"shyly\",\n        \"racer\",\n        \"prowl\",\n        \"thief\",\n        \"stern\",\n        \"poesy\",\n        \"rocky\",\n        \"tweet\",\n        \"waist\",\n        \"spire\",\n        \"grope\",\n        \"havoc\",\n        \"patsy\",\n        \"truly\",\n        \"forty\",\n        \"deity\",\n        \"uncle\",\n        \"swish\",\n        \"giver\",\n        \"preen\",\n        \"bevel\",\n        \"lemur\",\n        \"draft\",\n        \"slope\",\n        \"annoy\",\n        \"lingo\",\n        \"bleak\",\n        \"ditty\",\n        \"curly\",\n        \"cedar\",\n        \"dirge\",\n        \"grown\",\n        \"horde\",\n        \"drool\",\n        \"shuck\",\n        \"crypt\",\n        \"cumin\",\n        \"stock\",\n        \"gravy\",\n        \"locus\",\n        \"wider\",\n        \"breed\",\n        \"quite\",\n        \"chafe\",\n        \"cache\",\n        \"blimp\",\n        \"deign\",\n        \"fiend\",\n        \"logic\",\n        \"cheap\",\n        \"elide\",\n        \"rigid\",\n        \"false\",\n        \"renal\",\n        \"pence\",\n        \"rowdy\",\n        \"shoot\",\n        \"blaze\",\n        \"envoy\",\n        \"posse\",\n        \"brief\",\n        \"never\",\n        \"abort\",\n        \"mouse\",\n        \"mucky\",\n        \"sulky\",\n        \"fiery\",\n        \"media\",\n        \"trunk\",\n        \"yeast\",\n        \"clear\",\n        \"skunk\",\n        \"scalp\",\n        \"bitty\",\n        \"cider\",\n        \"koala\",\n        \"duvet\",\n        \"segue\",\n        \"creme\",\n        \"super\",\n        \"grill\",\n        \"after\",\n        \"owner\",\n        \"ember\",\n        \"reach\",\n        \"nobly\",\n        \"empty\",\n        \"speed\",\n        \"gipsy\",\n        \"recur\",\n        \"smock\",\n        \"dread\",\n        \"merge\",\n        \"burst\",\n        \"kappa\",\n        \"amity\",\n        \"shaky\",\n        \"hover\",\n        \"carol\",\n        \"snort\",\n        \"synod\",\n        \"faint\",\n        \"haunt\",\n        \"flour\",\n        \"chair\",\n        \"detox\",\n        \"shrew\",\n        \"tense\",\n        \"plied\",\n        \"quark\",\n        \"burly\",\n        \"novel\",\n        \"waxen\",\n        \"stoic\",\n        \"jerky\",\n        \"blitz\",\n        \"beefy\",\n        \"lyric\",\n        \"hussy\",\n        \"towel\",\n        \"quilt\",\n        \"below\",\n        \"bingo\",\n        \"wispy\",\n        \"brash\",\n        \"scone\",\n        \"toast\",\n        \"easel\",\n        \"saucy\",\n        \"value\",\n        \"spice\",\n        \"honor\",\n        \"route\",\n        \"sharp\",\n        \"bawdy\",\n        \"radii\",\n        \"skull\",\n        \"phony\",\n        \"issue\",\n        \"lager\",\n        \"swell\",\n        \"urine\",\n        \"gassy\",\n        \"trial\",\n        \"flora\",\n        \"upper\",\n        \"latch\",\n        \"wight\",\n        \"brick\",\n        \"retry\",\n        \"holly\",\n        \"decal\",\n        \"grass\",\n        \"shack\",\n        \"dogma\",\n        \"mover\",\n        \"defer\",\n        \"sober\",\n        \"optic\",\n        \"crier\",\n        \"vying\",\n        \"nomad\",\n        \"flute\",\n        \"hippo\",\n        \"shark\",\n        \"drier\",\n        \"obese\",\n        \"bugle\",\n        \"tawny\",\n        \"chalk\",\n        \"feast\",\n        \"ruddy\",\n        \"pedal\",\n        \"scarf\",\n        \"cruel\",\n        \"bleat\",\n        \"tidal\",\n        \"slush\",\n        \"semen\",\n        \"windy\",\n        \"dusty\",\n        \"sally\",\n        \"igloo\",\n        \"nerdy\",\n        \"jewel\",\n        \"shone\",\n        \"whale\",\n        \"hymen\",\n        \"abuse\",\n        \"fugue\",\n        \"elbow\",\n        \"crumb\",\n        \"pansy\",\n        \"welsh\",\n        \"syrup\",\n        \"terse\",\n        \"suave\",\n        \"gamut\",\n        \"swung\",\n        \"drake\",\n        \"freed\",\n        \"afire\",\n        \"shirt\",\n        \"grout\",\n        \"oddly\",\n        \"tithe\",\n        \"plaid\",\n        \"dummy\",\n        \"broom\",\n        \"blind\",\n        \"torch\",\n        \"enemy\",\n        \"again\",\n        \"tying\",\n        \"pesky\",\n        \"alter\",\n        \"gazer\",\n        \"noble\",\n        \"ethos\",\n        \"bride\",\n        \"extol\",\n        \"decor\",\n        \"hobby\",\n        \"beast\",\n        \"idiom\",\n        \"utter\",\n        \"these\",\n        \"sixth\",\n        \"alarm\",\n        \"erase\",\n        \"elegy\",\n        \"spunk\",\n        \"piper\",\n        \"scaly\",\n        \"scold\",\n        \"hefty\",\n        \"chick\",\n        \"sooty\",\n        \"canal\",\n        \"whiny\",\n        \"slash\",\n        \"quake\",\n        \"joint\",\n        \"swept\",\n        \"prude\",\n        \"heavy\",\n        \"wield\",\n        \"femme\",\n        \"lasso\",\n        \"maize\",\n        \"shale\",\n        \"screw\",\n        \"spree\",\n        \"smoky\",\n        \"whiff\",\n        \"scent\",\n        \"glade\",\n        \"spent\",\n        \"prism\",\n        \"stoke\",\n        \"riper\",\n        \"orbit\",\n        \"cocoa\",\n        \"guilt\",\n        \"humus\",\n        \"shush\",\n        \"table\",\n        \"smirk\",\n        \"wrong\",\n        \"noisy\",\n        \"alert\",\n        \"shiny\",\n        \"elate\",\n        \"resin\",\n        \"whole\",\n        \"hunch\",\n        \"pixel\",\n        \"polar\",\n        \"hotel\",\n        \"sword\",\n        \"cleat\",\n        \"mango\",\n        \"rumba\",\n        \"puffy\",\n        \"filly\",\n        \"billy\",\n        \"leash\",\n        \"clout\",\n        \"dance\",\n        \"ovate\",\n        \"facet\",\n        \"chili\",\n        \"paint\",\n        \"liner\",\n        \"curio\",\n        \"salty\",\n        \"audio\",\n        \"snake\",\n        \"fable\",\n        \"cloak\",\n        \"navel\",\n        \"spurt\",\n        \"pesto\",\n        \"balmy\",\n        \"flash\",\n        \"unwed\",\n        \"early\",\n        \"churn\",\n        \"weedy\",\n        \"stump\",\n        \"lease\",\n        \"witty\",\n        \"wimpy\",\n        \"spoof\",\n        \"saner\",\n        \"blend\",\n        \"salsa\",\n        \"thick\",\n        \"warty\",\n        \"manic\",\n        \"blare\",\n        \"squib\",\n        \"spoon\",\n        \"probe\",\n        \"crepe\",\n        \"knack\",\n        \"force\",\n        \"debut\",\n        \"order\",\n        \"haste\",\n        \"teeth\",\n        \"agent\",\n        \"widen\",\n        \"icily\",\n        \"slice\",\n        \"ingot\",\n        \"clash\",\n        \"juror\",\n        \"blood\",\n        \"abode\",\n        \"throw\",\n        \"unity\",\n        \"pivot\",\n        \"slept\",\n        \"troop\",\n        \"spare\",\n        \"sewer\",\n        \"parse\",\n        \"morph\",\n        \"cacti\",\n        \"tacky\",\n        \"spool\",\n        \"demon\",\n        \"moody\",\n        \"annex\",\n        \"begin\",\n        \"fuzzy\",\n        \"patch\",\n        \"water\",\n        \"lumpy\",\n        \"admin\",\n        \"omega\",\n        \"limit\",\n        \"tabby\",\n        \"macho\",\n        \"aisle\",\n        \"skiff\",\n        \"basis\",\n        \"plank\",\n        \"verge\",\n        \"botch\",\n        \"crawl\",\n        \"lousy\",\n        \"slain\",\n        \"cubic\",\n        \"raise\",\n        \"wrack\",\n        \"guide\",\n        \"foist\",\n        \"cameo\",\n        \"under\",\n        \"actor\",\n        \"revue\",\n        \"fraud\",\n        \"harpy\",\n        \"scoop\",\n        \"climb\",\n        \"refer\",\n        \"olden\",\n        \"clerk\",\n        \"debar\",\n        \"tally\",\n        \"ethic\",\n        \"cairn\",\n        \"tulle\",\n        \"ghoul\",\n        \"hilly\",\n        \"crude\",\n        \"apart\",\n        \"scale\",\n        \"older\",\n        \"plain\",\n        \"sperm\",\n        \"briny\",\n        \"abbot\",\n        \"rerun\",\n        \"quest\",\n        \"crisp\",\n        \"bound\",\n        \"befit\",\n        \"drawn\",\n        \"suite\",\n        \"itchy\",\n        \"cheer\",\n        \"bagel\",\n        \"guess\",\n        \"broad\",\n        \"axiom\",\n        \"chard\",\n        \"caput\",\n        \"leant\",\n        \"harsh\",\n        \"curse\",\n        \"proud\",\n        \"swing\",\n        \"opine\",\n        \"taste\",\n        \"lupus\",\n        \"gumbo\",\n        \"miner\",\n        \"green\",\n        \"chasm\",\n        \"lipid\",\n        \"topic\",\n        \"armor\",\n        \"brush\",\n        \"crane\",\n        \"mural\",\n        \"abled\",\n        \"habit\",\n        \"bossy\",\n        \"maker\",\n        \"dusky\",\n        \"dizzy\",\n        \"lithe\",\n        \"brook\",\n        \"jazzy\",\n        \"fifty\",\n        \"sense\",\n        \"giant\",\n        \"surly\",\n        \"legal\",\n        \"fatal\",\n        \"flunk\",\n        \"began\",\n        \"prune\",\n        \"small\",\n        \"slant\",\n        \"scoff\",\n        \"torus\",\n        \"ninny\",\n        \"covey\",\n        \"viper\",\n        \"taken\",\n        \"moral\",\n        \"vogue\",\n        \"owing\",\n        \"token\",\n        \"entry\",\n        \"booth\",\n        \"voter\",\n        \"chide\",\n        \"elfin\",\n        \"ebony\",\n        \"neigh\",\n        \"minim\",\n        \"melon\",\n        \"kneed\",\n        \"decoy\",\n        \"voila\",\n        \"ankle\",\n        \"arrow\",\n        \"mushy\",\n        \"tribe\",\n        \"cease\",\n        \"eager\",\n        \"birth\",\n        \"graph\",\n        \"odder\",\n        \"terra\",\n        \"weird\",\n        \"tried\",\n        \"clack\",\n        \"color\",\n        \"rough\",\n        \"weigh\",\n        \"uncut\",\n        \"ladle\",\n        \"strip\",\n        \"craft\",\n        \"minus\",\n        \"dicey\",\n        \"titan\",\n        \"lucid\",\n        \"vicar\",\n        \"dress\",\n        \"ditch\",\n        \"gypsy\",\n        \"pasta\",\n        \"taffy\",\n        \"flame\",\n        \"swoop\",\n        \"aloof\",\n        \"sight\",\n        \"broke\",\n        \"teary\",\n        \"chart\",\n        \"sixty\",\n        \"wordy\",\n        \"sheer\",\n        \"leper\",\n        \"nosey\",\n        \"bulge\",\n        \"savor\",\n        \"clamp\",\n        \"funky\",\n        \"foamy\",\n        \"toxic\",\n        \"brand\",\n        \"plumb\",\n        \"dingy\",\n        \"butte\",\n        \"drill\",\n        \"tripe\",\n        \"bicep\",\n        \"tenor\",\n        \"krill\",\n        \"worse\",\n        \"drama\",\n        \"hyena\",\n        \"think\",\n        \"ratio\",\n        \"cobra\",\n        \"basil\",\n        \"scrum\",\n        \"bused\",\n        \"phone\",\n        \"court\",\n        \"camel\",\n        \"proof\",\n        \"heard\",\n        \"angel\",\n        \"petal\",\n        \"pouty\",\n        \"throb\",\n        \"maybe\",\n        \"fetal\",\n        \"sprig\",\n        \"spine\",\n        \"shout\",\n        \"cadet\",\n        \"macro\",\n        \"dodgy\",\n        \"satyr\",\n        \"rarer\",\n        \"binge\",\n        \"trend\",\n        \"nutty\",\n        \"leapt\",\n        \"amiss\",\n        \"split\",\n        \"myrrh\",\n        \"width\",\n        \"sonar\",\n        \"tower\",\n        \"baron\",\n        \"fever\",\n        \"waver\",\n        \"spark\",\n        \"belie\",\n        \"sloop\",\n        \"expel\",\n        \"smote\",\n        \"baler\",\n        \"above\",\n        \"north\",\n        \"wafer\",\n        \"scant\",\n        \"frill\",\n        \"awash\",\n        \"snack\",\n        \"scowl\",\n        \"frail\",\n        \"drift\",\n        \"limbo\",\n        \"fence\",\n        \"motel\",\n        \"ounce\",\n        \"wreak\",\n        \"revel\",\n        \"talon\",\n        \"prior\",\n        \"knelt\",\n        \"cello\",\n        \"flake\",\n        \"debug\",\n        \"anode\",\n        \"crime\",\n        \"salve\",\n        \"scout\",\n        \"imbue\",\n        \"pinky\",\n        \"stave\",\n        \"vague\",\n        \"chock\",\n        \"fight\",\n        \"video\",\n        \"stone\",\n        \"teach\",\n        \"cleft\",\n        \"frost\",\n        \"prawn\",\n        \"booty\",\n        \"twist\",\n        \"apnea\",\n        \"stiff\",\n        \"plaza\",\n        \"ledge\",\n        \"tweak\",\n        \"board\",\n        \"grant\",\n        \"medic\",\n        \"bacon\",\n        \"cable\",\n        \"brawl\",\n        \"slunk\",\n        \"raspy\",\n        \"forum\",\n        \"drone\",\n        \"women\",\n        \"mucus\",\n        \"boast\",\n        \"toddy\",\n        \"coven\",\n        \"tumor\",\n        \"truer\",\n        \"wrath\",\n        \"stall\",\n        \"steam\",\n        \"axial\",\n        \"purer\",\n        \"daily\",\n        \"trail\",\n        \"niche\",\n        \"mealy\",\n        \"juice\",\n        \"nylon\",\n        \"plump\",\n        \"merry\",\n        \"flail\",\n        \"papal\",\n        \"wheat\",\n        \"berry\",\n        \"cower\",\n        \"erect\",\n        \"brute\",\n        \"leggy\",\n        \"snipe\",\n        \"sinew\",\n        \"skier\",\n        \"penny\",\n        \"jumpy\",\n        \"rally\",\n        \"umbra\",\n        \"scary\",\n        \"modem\",\n        \"gross\",\n        \"avian\",\n        \"greed\",\n        \"satin\",\n        \"tonic\",\n        \"parka\",\n        \"sniff\",\n        \"livid\",\n        \"stark\",\n        \"trump\",\n        \"giddy\",\n        \"reuse\",\n        \"taboo\",\n        \"avoid\",\n        \"quote\",\n        \"devil\",\n        \"liken\",\n        \"gloss\",\n        \"gayer\",\n        \"beret\",\n        \"noise\",\n        \"gland\",\n        \"dealt\",\n        \"sling\",\n        \"rumor\",\n        \"opera\",\n        \"thigh\",\n        \"tonga\",\n        \"flare\",\n        \"wound\",\n        \"white\",\n        \"bulky\",\n        \"etude\",\n        \"horse\",\n        \"circa\",\n        \"paddy\",\n        \"inbox\",\n        \"fizzy\",\n        \"grain\",\n        \"exert\",\n        \"surge\",\n        \"gleam\",\n        \"belle\",\n        \"salvo\",\n        \"crush\",\n        \"fruit\",\n        \"sappy\",\n        \"taker\",\n        \"tract\",\n        \"ovine\",\n        \"spiky\",\n        \"frank\",\n        \"reedy\",\n        \"filth\",\n        \"spasm\",\n        \"heave\",\n        \"mambo\",\n        \"right\",\n        \"clank\",\n        \"trust\",\n        \"lumen\",\n        \"borne\",\n        \"spook\",\n        \"sauce\",\n        \"amber\",\n        \"lathe\",\n        \"carat\",\n        \"corer\",\n        \"dirty\",\n        \"slyly\",\n        \"affix\",\n        \"alloy\",\n        \"taint\",\n        \"sheep\",\n        \"kinky\",\n        \"wooly\",\n        \"mauve\",\n        \"flung\",\n        \"yacht\",\n        \"fried\",\n        \"quail\",\n        \"brunt\",\n        \"grimy\",\n        \"curvy\",\n        \"cagey\",\n        \"rinse\",\n        \"deuce\",\n        \"state\",\n        \"grasp\",\n        \"milky\",\n        \"bison\",\n        \"graft\",\n        \"sandy\",\n        \"baste\",\n        \"flask\",\n        \"hedge\",\n        \"girly\",\n        \"swash\",\n        \"boney\",\n        \"coupe\",\n        \"endow\",\n        \"abhor\",\n        \"welch\",\n        \"blade\",\n        \"tight\",\n        \"geese\",\n        \"miser\",\n        \"mirth\",\n        \"cloud\",\n        \"cabal\",\n        \"leech\",\n        \"close\",\n        \"tenth\",\n        \"pecan\",\n        \"droit\",\n        \"grail\",\n        \"clone\",\n        \"guise\",\n        \"ralph\",\n        \"tango\",\n        \"biddy\",\n        \"smith\",\n        \"mower\",\n        \"payee\",\n        \"serif\",\n        \"drape\",\n        \"fifth\",\n        \"spank\",\n        \"glaze\",\n        \"allot\",\n        \"truck\",\n        \"kayak\",\n        \"virus\",\n        \"testy\",\n        \"tepee\",\n        \"fully\",\n        \"zonal\",\n        \"metro\",\n        \"curry\",\n        \"grand\",\n        \"banjo\",\n        \"axion\",\n        \"bezel\",\n        \"occur\",\n        \"chain\",\n        \"nasal\",\n        \"gooey\",\n        \"filer\",\n        \"brace\",\n        \"allay\",\n        \"pubic\",\n        \"raven\",\n        \"plead\",\n        \"gnash\",\n        \"flaky\",\n        \"munch\",\n        \"dully\",\n        \"eking\",\n        \"thing\",\n        \"slink\",\n        \"hurry\",\n        \"theft\",\n        \"shorn\",\n        \"pygmy\",\n        \"ranch\",\n        \"wring\",\n        \"lemon\",\n        \"shore\",\n        \"mamma\",\n        \"froze\",\n        \"newer\",\n        \"style\",\n        \"moose\",\n        \"antic\",\n        \"drown\",\n        \"vegan\",\n        \"chess\",\n        \"guppy\",\n        \"union\",\n        \"lever\",\n        \"lorry\",\n        \"image\",\n        \"cabby\",\n        \"druid\",\n        \"exact\",\n        \"truth\",\n        \"dopey\",\n        \"spear\",\n        \"cried\",\n        \"chime\",\n        \"crony\",\n        \"stunk\",\n        \"timid\",\n        \"batch\",\n        \"gauge\",\n        \"rotor\",\n        \"crack\",\n        \"curve\",\n        \"latte\",\n        \"witch\",\n        \"bunch\",\n        \"repel\",\n        \"anvil\",\n        \"soapy\",\n        \"meter\",\n        \"broth\",\n        \"madly\",\n        \"dried\",\n        \"scene\",\n        \"known\",\n        \"magma\",\n        \"roost\",\n        \"woman\",\n        \"thong\",\n        \"punch\",\n        \"pasty\",\n        \"downy\",\n        \"knead\",\n        \"whirl\",\n        \"rapid\",\n        \"clang\",\n        \"anger\",\n        \"drive\",\n        \"goofy\",\n        \"email\",\n        \"music\",\n        \"stuff\",\n        \"bleep\",\n        \"rider\",\n        \"mecca\",\n        \"folio\",\n        \"setup\",\n        \"verso\",\n        \"quash\",\n        \"fauna\",\n        \"gummy\",\n        \"happy\",\n        \"newly\",\n        \"fussy\",\n        \"relic\",\n        \"guava\",\n        \"ratty\",\n        \"fudge\",\n        \"femur\",\n        \"chirp\",\n        \"forte\",\n        \"alibi\",\n        \"whine\",\n        \"petty\",\n        \"golly\",\n        \"plait\",\n        \"fleck\",\n        \"felon\",\n        \"gourd\",\n        \"brown\",\n        \"thrum\",\n        \"ficus\",\n        \"stash\",\n        \"decry\",\n        \"wiser\",\n        \"junta\",\n        \"visor\",\n        \"daunt\",\n        \"scree\",\n        \"impel\",\n        \"await\",\n        \"press\",\n        \"whose\",\n        \"turbo\",\n        \"stoop\",\n        \"speak\",\n        \"mangy\",\n        \"eying\",\n        \"inlet\",\n        \"crone\",\n        \"pulse\",\n        \"mossy\",\n        \"staid\",\n        \"hence\",\n        \"pinch\",\n        \"teddy\",\n        \"sully\",\n        \"snore\",\n        \"ripen\",\n        \"snowy\",\n        \"attic\",\n        \"going\",\n        \"leach\",\n        \"mouth\",\n        \"hound\",\n        \"clump\",\n        \"tonal\",\n        \"bigot\",\n        \"peril\",\n        \"piece\",\n        \"blame\",\n        \"haute\",\n        \"spied\",\n        \"undid\",\n        \"intro\",\n        \"basal\",\n        \"shine\",\n        \"gecko\",\n        \"rodeo\",\n        \"guard\",\n        \"steer\",\n        \"loamy\",\n        \"scamp\",\n        \"scram\",\n        \"manly\",\n        \"hello\",\n        \"vaunt\",\n        \"organ\",\n        \"feral\",\n        \"knock\",\n        \"extra\",\n        \"condo\",\n        \"adapt\",\n        \"willy\",\n        \"polka\",\n        \"rayon\",\n        \"skirt\",\n        \"faith\",\n        \"torso\",\n        \"match\",\n        \"mercy\",\n        \"tepid\",\n        \"sleek\",\n        \"riser\",\n        \"twixt\",\n        \"peace\",\n        \"flush\",\n        \"catty\",\n        \"login\",\n        \"eject\",\n        \"roger\",\n        \"rival\",\n        \"untie\",\n        \"refit\",\n        \"aorta\",\n        \"adult\",\n        \"judge\",\n        \"rower\",\n        \"artsy\",\n        \"rural\",\n        \"shave\",\n        \"aahed\",\n        \"aalii\",\n        \"aargh\",\n        \"aarti\",\n        \"abaca\",\n        \"abaci\",\n        \"abacs\",\n        \"abaft\",\n        \"abaka\",\n        \"abamp\",\n        \"aband\",\n        \"abash\",\n        \"abask\",\n        \"abaya\",\n        \"abbas\",\n        \"abbed\",\n        \"abbes\",\n        \"abcee\",\n        \"abeam\",\n        \"abear\",\n        \"abele\",\n        \"abers\",\n        \"abets\",\n        \"abies\",\n        \"abler\",\n        \"ables\",\n        \"ablet\",\n        \"ablow\",\n        \"abmho\",\n        \"abohm\",\n        \"aboil\",\n        \"aboma\",\n        \"aboon\",\n        \"abord\",\n        \"abore\",\n        \"abram\",\n        \"abray\",\n        \"abrim\",\n        \"abrin\",\n        \"abris\",\n        \"absey\",\n        \"absit\",\n        \"abuna\",\n        \"abune\",\n        \"abuts\",\n        \"abuzz\",\n        \"abyes\",\n        \"abysm\",\n        \"acais\",\n        \"acari\",\n        \"accas\",\n        \"accoy\",\n        \"acerb\",\n        \"acers\",\n        \"aceta\",\n        \"achar\",\n        \"ached\",\n        \"aches\",\n        \"achoo\",\n        \"acids\",\n        \"acidy\",\n        \"acing\",\n        \"acini\",\n        \"ackee\",\n        \"acker\",\n        \"acmes\",\n        \"acmic\",\n        \"acned\",\n        \"acnes\",\n        \"acock\",\n        \"acold\",\n        \"acred\",\n        \"acres\",\n        \"acros\",\n        \"acted\",\n        \"actin\",\n        \"acton\",\n        \"acyls\",\n        \"adaws\",\n        \"adays\",\n        \"adbot\",\n        \"addax\",\n        \"added\",\n        \"adder\",\n        \"addio\",\n        \"addle\",\n        \"adeem\",\n        \"adhan\",\n        \"adieu\",\n        \"adios\",\n        \"adits\",\n        \"adman\",\n        \"admen\",\n        \"admix\",\n        \"adobo\",\n        \"adown\",\n        \"adoze\",\n        \"adrad\",\n        \"adred\",\n        \"adsum\",\n        \"aduki\",\n        \"adunc\",\n        \"adust\",\n        \"advew\",\n        \"adyta\",\n        \"adzed\",\n        \"adzes\",\n        \"aecia\",\n        \"aedes\",\n        \"aegis\",\n        \"aeons\",\n        \"aerie\",\n        \"aeros\",\n        \"aesir\",\n        \"afald\",\n        \"afara\",\n        \"afars\",\n        \"afear\",\n        \"aflaj\",\n        \"afore\",\n        \"afrit\",\n        \"afros\",\n        \"agama\",\n        \"agami\",\n        \"agars\",\n        \"agast\",\n        \"agave\",\n        \"agaze\",\n        \"agene\",\n        \"agers\",\n        \"agger\",\n        \"aggie\",\n        \"aggri\",\n        \"aggro\",\n        \"aggry\",\n        \"aghas\",\n        \"agila\",\n        \"agios\",\n        \"agism\",\n        \"agist\",\n        \"agita\",\n        \"aglee\",\n        \"aglet\",\n        \"agley\",\n        \"agloo\",\n        \"aglus\",\n        \"agmas\",\n        \"agoge\",\n        \"agone\",\n        \"agons\",\n        \"agood\",\n        \"agria\",\n        \"agrin\",\n        \"agros\",\n        \"agued\",\n        \"agues\",\n        \"aguna\",\n        \"aguti\",\n        \"aheap\",\n        \"ahent\",\n        \"ahigh\",\n        \"ahind\",\n        \"ahing\",\n        \"ahint\",\n        \"ahold\",\n        \"ahull\",\n        \"ahuru\",\n        \"aidas\",\n        \"aided\",\n        \"aides\",\n        \"aidoi\",\n        \"aidos\",\n        \"aiery\",\n        \"aigas\",\n        \"aight\",\n        \"ailed\",\n        \"aimed\",\n        \"aimer\",\n        \"ainee\",\n        \"ainga\",\n        \"aioli\",\n        \"aired\",\n        \"airer\",\n        \"airns\",\n        \"airth\",\n        \"airts\",\n        \"aitch\",\n        \"aitus\",\n        \"aiver\",\n        \"aiyee\",\n        \"aizle\",\n        \"ajies\",\n        \"ajiva\",\n        \"ajuga\",\n        \"ajwan\",\n        \"akees\",\n        \"akela\",\n        \"akene\",\n        \"aking\",\n        \"akita\",\n        \"akkas\",\n        \"alaap\",\n        \"alack\",\n        \"alamo\",\n        \"aland\",\n        \"alane\",\n        \"alang\",\n        \"alans\",\n        \"alant\",\n        \"alapa\",\n        \"alaps\",\n        \"alary\",\n        \"alate\",\n        \"alays\",\n        \"albas\",\n        \"albee\",\n        \"alcid\",\n        \"alcos\",\n        \"aldea\",\n        \"alder\",\n        \"aldol\",\n        \"aleck\",\n        \"alecs\",\n        \"alefs\",\n        \"aleft\",\n        \"aleph\",\n        \"alews\",\n        \"aleye\",\n        \"alfas\",\n        \"algal\",\n        \"algas\",\n        \"algid\",\n        \"algin\",\n        \"algor\",\n        \"algum\",\n        \"alias\",\n        \"alifs\",\n        \"aline\",\n        \"alist\",\n        \"aliya\",\n        \"alkie\",\n        \"alkos\",\n        \"alkyd\",\n        \"alkyl\",\n        \"allee\",\n        \"allel\",\n        \"allis\",\n        \"allod\",\n        \"allyl\",\n        \"almah\",\n        \"almas\",\n        \"almeh\",\n        \"almes\",\n        \"almud\",\n        \"almug\",\n        \"alods\",\n        \"aloed\",\n        \"aloes\",\n        \"aloha\",\n        \"aloin\",\n        \"aloos\",\n        \"alowe\",\n        \"altho\",\n        \"altos\",\n        \"alula\",\n        \"alums\",\n        \"alure\",\n        \"alvar\",\n        \"alway\",\n        \"amahs\",\n        \"amain\",\n        \"amate\",\n        \"amaut\",\n        \"amban\",\n        \"ambit\",\n        \"ambos\",\n        \"ambry\",\n        \"ameba\",\n        \"ameer\",\n        \"amene\",\n        \"amens\",\n        \"ament\",\n        \"amias\",\n        \"amice\",\n        \"amici\",\n        \"amide\",\n        \"amido\",\n        \"amids\",\n        \"amies\",\n        \"amiga\",\n        \"amigo\",\n        \"amine\",\n        \"amino\",\n        \"amins\",\n        \"amirs\",\n        \"amlas\",\n        \"amman\",\n        \"ammon\",\n        \"ammos\",\n        \"amnia\",\n        \"amnic\",\n        \"amnio\",\n        \"amoks\",\n        \"amole\",\n        \"amort\",\n        \"amour\",\n        \"amove\",\n        \"amowt\",\n        \"amped\",\n        \"ampul\",\n        \"amrit\",\n        \"amuck\",\n        \"amyls\",\n        \"anana\",\n        \"anata\",\n        \"ancho\",\n        \"ancle\",\n        \"ancon\",\n        \"andro\",\n        \"anear\",\n        \"anele\",\n        \"anent\",\n        \"angas\",\n        \"anglo\",\n        \"anigh\",\n        \"anile\",\n        \"anils\",\n        \"anima\",\n        \"animi\",\n        \"anion\",\n        \"anise\",\n        \"anker\",\n        \"ankhs\",\n        \"ankus\",\n        \"anlas\",\n        \"annal\",\n        \"annas\",\n        \"annat\",\n        \"anoas\",\n        \"anole\",\n        \"anomy\",\n        \"ansae\",\n        \"antae\",\n        \"antar\",\n        \"antas\",\n        \"anted\",\n        \"antes\",\n        \"antis\",\n        \"antra\",\n        \"antre\",\n        \"antsy\",\n        \"anura\",\n        \"anyon\",\n        \"apace\",\n        \"apage\",\n        \"apaid\",\n        \"apayd\",\n        \"apays\",\n        \"apeak\",\n        \"apeek\",\n        \"apers\",\n        \"apert\",\n        \"apery\",\n        \"apgar\",\n        \"aphis\",\n        \"apian\",\n        \"apiol\",\n        \"apish\",\n        \"apism\",\n        \"apode\",\n        \"apods\",\n        \"apoop\",\n        \"aport\",\n        \"appal\",\n        \"appay\",\n        \"appel\",\n        \"appro\",\n        \"appui\",\n        \"appuy\",\n        \"apres\",\n        \"apses\",\n        \"apsis\",\n        \"apsos\",\n        \"apted\",\n        \"apter\",\n        \"aquae\",\n        \"aquas\",\n        \"araba\",\n        \"araks\",\n        \"arame\",\n        \"arars\",\n        \"arbas\",\n        \"arced\",\n        \"archi\",\n        \"arcos\",\n        \"arcus\",\n        \"ardeb\",\n        \"ardri\",\n        \"aread\",\n        \"areae\",\n        \"areal\",\n        \"arear\",\n        \"areas\",\n        \"areca\",\n        \"aredd\",\n        \"arede\",\n        \"arefy\",\n        \"areic\",\n        \"arene\",\n        \"arepa\",\n        \"arere\",\n        \"arete\",\n        \"arets\",\n        \"arett\",\n        \"argal\",\n        \"argan\",\n        \"argil\",\n        \"argle\",\n        \"argol\",\n        \"argon\",\n        \"argot\",\n        \"argus\",\n        \"arhat\",\n        \"arias\",\n        \"ariel\",\n        \"ariki\",\n        \"arils\",\n        \"ariot\",\n        \"arish\",\n        \"arked\",\n        \"arled\",\n        \"arles\",\n        \"armed\",\n        \"armer\",\n        \"armet\",\n        \"armil\",\n        \"arnas\",\n        \"arnut\",\n        \"aroba\",\n        \"aroha\",\n        \"aroid\",\n        \"arpas\",\n        \"arpen\",\n        \"arrah\",\n        \"arras\",\n        \"arret\",\n        \"arris\",\n        \"arroz\",\n        \"arsed\",\n        \"arses\",\n        \"arsey\",\n        \"arsis\",\n        \"artal\",\n        \"artel\",\n        \"artic\",\n        \"artis\",\n        \"aruhe\",\n        \"arums\",\n        \"arval\",\n        \"arvee\",\n        \"arvos\",\n        \"aryls\",\n        \"asana\",\n        \"ascon\",\n        \"ascus\",\n        \"asdic\",\n        \"ashed\",\n        \"ashes\",\n        \"ashet\",\n        \"asked\",\n        \"asker\",\n        \"askoi\",\n        \"askos\",\n        \"aspen\",\n        \"asper\",\n        \"aspic\",\n        \"aspie\",\n        \"aspis\",\n        \"aspro\",\n        \"assai\",\n        \"assam\",\n        \"asses\",\n        \"assez\",\n        \"assot\",\n        \"aster\",\n        \"astir\",\n        \"astun\",\n        \"asura\",\n        \"asway\",\n        \"aswim\",\n        \"asyla\",\n        \"ataps\",\n        \"ataxy\",\n        \"atigi\",\n        \"atilt\",\n        \"atimy\",\n        \"atlas\",\n        \"atman\",\n        \"atmas\",\n        \"atmos\",\n        \"atocs\",\n        \"atoke\",\n        \"atoks\",\n        \"atoms\",\n        \"atomy\",\n        \"atony\",\n        \"atopy\",\n        \"atria\",\n        \"atrip\",\n        \"attap\",\n        \"attar\",\n        \"atuas\",\n        \"audad\",\n        \"auger\",\n        \"aught\",\n        \"aulas\",\n        \"aulic\",\n        \"auloi\",\n        \"aulos\",\n        \"aumil\",\n        \"aunes\",\n        \"aunts\",\n        \"aurae\",\n        \"aural\",\n        \"aurar\",\n        \"auras\",\n        \"aurei\",\n        \"aures\",\n        \"auric\",\n        \"auris\",\n        \"aurum\",\n        \"autos\",\n        \"auxin\",\n        \"avale\",\n        \"avant\",\n        \"avast\",\n        \"avels\",\n        \"avens\",\n        \"avers\",\n        \"avgas\",\n        \"avine\",\n        \"avion\",\n        \"avise\",\n        \"aviso\",\n        \"avize\",\n        \"avows\",\n        \"avyze\",\n        \"awarn\",\n        \"awato\",\n        \"awave\",\n        \"aways\",\n        \"awdls\",\n        \"aweel\",\n        \"aweto\",\n        \"awing\",\n        \"awmry\",\n        \"awned\",\n        \"awner\",\n        \"awols\",\n        \"awork\",\n        \"axels\",\n        \"axile\",\n        \"axils\",\n        \"axing\",\n        \"axite\",\n        \"axled\",\n        \"axles\",\n        \"axman\",\n        \"axmen\",\n        \"axoid\",\n        \"axone\",\n        \"axons\",\n        \"ayahs\",\n        \"ayaya\",\n        \"ayelp\",\n        \"aygre\",\n        \"ayins\",\n        \"ayont\",\n        \"ayres\",\n        \"ayrie\",\n        \"azans\",\n        \"azide\",\n        \"azido\",\n        \"azine\",\n        \"azlon\",\n        \"azoic\",\n        \"azole\",\n        \"azons\",\n        \"azote\",\n        \"azoth\",\n        \"azuki\",\n        \"azurn\",\n        \"azury\",\n        \"azygy\",\n        \"azyme\",\n        \"azyms\",\n        \"baaed\",\n        \"baals\",\n        \"babas\",\n        \"babel\",\n        \"babes\",\n        \"babka\",\n        \"baboo\",\n        \"babul\",\n        \"babus\",\n        \"bacca\",\n        \"bacco\",\n        \"baccy\",\n        \"bacha\",\n        \"bachs\",\n        \"backs\",\n        \"baddy\",\n        \"baels\",\n        \"baffs\",\n        \"baffy\",\n        \"bafts\",\n        \"baghs\",\n        \"bagie\",\n        \"bahts\",\n        \"bahus\",\n        \"bahut\",\n        \"bails\",\n        \"bairn\",\n        \"baisa\",\n        \"baith\",\n        \"baits\",\n        \"baiza\",\n        \"baize\",\n        \"bajan\",\n        \"bajra\",\n        \"bajri\",\n        \"bajus\",\n        \"baked\",\n        \"baken\",\n        \"bakes\",\n        \"bakra\",\n        \"balas\",\n        \"balds\",\n        \"baldy\",\n        \"baled\",\n        \"bales\",\n        \"balks\",\n        \"balky\",\n        \"balls\",\n        \"bally\",\n        \"balms\",\n        \"baloo\",\n        \"balsa\",\n        \"balti\",\n        \"balun\",\n        \"balus\",\n        \"bambi\",\n        \"banak\",\n        \"banco\",\n        \"bancs\",\n        \"banda\",\n        \"bandh\",\n        \"bands\",\n        \"bandy\",\n        \"baned\",\n        \"banes\",\n        \"bangs\",\n        \"bania\",\n        \"banks\",\n        \"banns\",\n        \"bants\",\n        \"bantu\",\n        \"banty\",\n        \"banya\",\n        \"bapus\",\n        \"barbe\",\n        \"barbs\",\n        \"barby\",\n        \"barca\",\n        \"barde\",\n        \"bardo\",\n        \"bards\",\n        \"bardy\",\n        \"bared\",\n        \"barer\",\n        \"bares\",\n        \"barfi\",\n        \"barfs\",\n        \"baric\",\n        \"barks\",\n        \"barky\",\n        \"barms\",\n        \"barmy\",\n        \"barns\",\n        \"barny\",\n        \"barps\",\n        \"barra\",\n        \"barre\",\n        \"barro\",\n        \"barry\",\n        \"barye\",\n        \"basan\",\n        \"based\",\n        \"basen\",\n        \"baser\",\n        \"bases\",\n        \"basho\",\n        \"basij\",\n        \"basks\",\n        \"bason\",\n        \"basse\",\n        \"bassi\",\n        \"basso\",\n        \"bassy\",\n        \"basta\",\n        \"basti\",\n        \"basto\",\n        \"basts\",\n        \"bated\",\n        \"bates\",\n        \"baths\",\n        \"batik\",\n        \"batta\",\n        \"batts\",\n        \"battu\",\n        \"bauds\",\n        \"bauks\",\n        \"baulk\",\n        \"baurs\",\n        \"bavin\",\n        \"bawds\",\n        \"bawks\",\n        \"bawls\",\n        \"bawns\",\n        \"bawrs\",\n        \"bawty\",\n        \"bayed\",\n        \"bayer\",\n        \"bayes\",\n        \"bayle\",\n        \"bayts\",\n        \"bazar\",\n        \"bazoo\",\n        \"beads\",\n        \"beaks\",\n        \"beaky\",\n        \"beals\",\n        \"beams\",\n        \"beamy\",\n        \"beano\",\n        \"beans\",\n        \"beany\",\n        \"beare\",\n        \"bears\",\n        \"beath\",\n        \"beats\",\n        \"beaty\",\n        \"beaus\",\n        \"beaut\",\n        \"beaux\",\n        \"bebop\",\n        \"becap\",\n        \"becke\",\n        \"becks\",\n        \"bedad\",\n        \"bedel\",\n        \"bedes\",\n        \"bedew\",\n        \"bedim\",\n        \"bedye\",\n        \"beedi\",\n        \"beefs\",\n        \"beeps\",\n        \"beers\",\n        \"beery\",\n        \"beets\",\n        \"befog\",\n        \"begad\",\n        \"begar\",\n        \"begem\",\n        \"begot\",\n        \"begum\",\n        \"beige\",\n        \"beigy\",\n        \"beins\",\n        \"bekah\",\n        \"belah\",\n        \"belar\",\n        \"belay\",\n        \"belee\",\n        \"belga\",\n        \"bells\",\n        \"belon\",\n        \"belts\",\n        \"bemad\",\n        \"bemas\",\n        \"bemix\",\n        \"bemud\",\n        \"bends\",\n        \"bendy\",\n        \"benes\",\n        \"benet\",\n        \"benga\",\n        \"benis\",\n        \"benne\",\n        \"benni\",\n        \"benny\",\n        \"bento\",\n        \"bents\",\n        \"benty\",\n        \"bepat\",\n        \"beray\",\n        \"beres\",\n        \"bergs\",\n        \"berko\",\n        \"berks\",\n        \"berme\",\n        \"berms\",\n        \"berob\",\n        \"beryl\",\n        \"besat\",\n        \"besaw\",\n        \"besee\",\n        \"beses\",\n        \"besit\",\n        \"besom\",\n        \"besot\",\n        \"besti\",\n        \"bests\",\n        \"betas\",\n        \"beted\",\n        \"betes\",\n        \"beths\",\n        \"betid\",\n        \"beton\",\n        \"betta\",\n        \"betty\",\n        \"bever\",\n        \"bevor\",\n        \"bevue\",\n        \"bevvy\",\n        \"bewet\",\n        \"bewig\",\n        \"bezes\",\n        \"bezil\",\n        \"bezzy\",\n        \"bhais\",\n        \"bhaji\",\n        \"bhang\",\n        \"bhats\",\n        \"bhels\",\n        \"bhoot\",\n        \"bhuna\",\n        \"bhuts\",\n        \"biach\",\n        \"biali\",\n        \"bialy\",\n        \"bibbs\",\n        \"bibes\",\n        \"biccy\",\n        \"bices\",\n        \"bided\",\n        \"bider\",\n        \"bides\",\n        \"bidet\",\n        \"bidis\",\n        \"bidon\",\n        \"bield\",\n        \"biers\",\n        \"biffo\",\n        \"biffs\",\n        \"biffy\",\n        \"bifid\",\n        \"bigae\",\n        \"biggs\",\n        \"biggy\",\n        \"bigha\",\n        \"bight\",\n        \"bigly\",\n        \"bigos\",\n        \"bijou\",\n        \"biked\",\n        \"biker\",\n        \"bikes\",\n        \"bikie\",\n        \"bilbo\",\n        \"bilby\",\n        \"biled\",\n        \"biles\",\n        \"bilgy\",\n        \"bilks\",\n        \"bills\",\n        \"bimah\",\n        \"bimas\",\n        \"bimbo\",\n        \"binal\",\n        \"bindi\",\n        \"binds\",\n        \"biner\",\n        \"bines\",\n        \"bings\",\n        \"bingy\",\n        \"binit\",\n        \"binks\",\n        \"bints\",\n        \"biogs\",\n        \"biont\",\n        \"biota\",\n        \"biped\",\n        \"bipod\",\n        \"birds\",\n        \"birks\",\n        \"birle\",\n        \"birls\",\n        \"biros\",\n        \"birrs\",\n        \"birse\",\n        \"birsy\",\n        \"bises\",\n        \"bisks\",\n        \"bisom\",\n        \"bitch\",\n        \"biter\",\n        \"bites\",\n        \"bitos\",\n        \"bitou\",\n        \"bitsy\",\n        \"bitte\",\n        \"bitts\",\n        \"bivia\",\n        \"bivvy\",\n        \"bizes\",\n        \"bizzo\",\n        \"bizzy\",\n        \"blabs\",\n        \"blads\",\n        \"blady\",\n        \"blaer\",\n        \"blaes\",\n        \"blaff\",\n        \"blags\",\n        \"blahs\",\n        \"blain\",\n        \"blams\",\n        \"blart\",\n        \"blase\",\n        \"blash\",\n        \"blate\",\n        \"blats\",\n        \"blatt\",\n        \"blaud\",\n        \"blawn\",\n        \"blaws\",\n        \"blays\",\n        \"blear\",\n        \"blebs\",\n        \"blech\",\n        \"blees\",\n        \"blent\",\n        \"blert\",\n        \"blest\",\n        \"blets\",\n        \"bleys\",\n        \"blimy\",\n        \"bling\",\n        \"blini\",\n        \"blins\",\n        \"bliny\",\n        \"blips\",\n        \"blist\",\n        \"blite\",\n        \"blits\",\n        \"blive\",\n        \"blobs\",\n        \"blocs\",\n        \"blogs\",\n        \"blook\",\n        \"bloop\",\n        \"blore\",\n        \"blots\",\n        \"blows\",\n        \"blowy\",\n        \"blubs\",\n        \"blude\",\n        \"bluds\",\n        \"bludy\",\n        \"blued\",\n        \"blues\",\n        \"bluet\",\n        \"bluey\",\n        \"bluid\",\n        \"blume\",\n        \"blunk\",\n        \"blurs\",\n        \"blype\",\n        \"boabs\",\n        \"boaks\",\n        \"boars\",\n        \"boart\",\n        \"boats\",\n        \"bobac\",\n        \"bobak\",\n        \"bobas\",\n        \"bobol\",\n        \"bobos\",\n        \"bocca\",\n        \"bocce\",\n        \"bocci\",\n        \"boche\",\n        \"bocks\",\n        \"boded\",\n        \"bodes\",\n        \"bodge\",\n        \"bodhi\",\n        \"bodle\",\n        \"boeps\",\n        \"boets\",\n        \"boeuf\",\n        \"boffo\",\n        \"boffs\",\n        \"bogan\",\n        \"bogey\",\n        \"boggy\",\n        \"bogie\",\n        \"bogle\",\n        \"bogue\",\n        \"bogus\",\n        \"bohea\",\n        \"bohos\",\n        \"boils\",\n        \"boing\",\n        \"boink\",\n        \"boite\",\n        \"boked\",\n        \"bokeh\",\n        \"bokes\",\n        \"bokos\",\n        \"bolar\",\n        \"bolas\",\n        \"bolds\",\n        \"boles\",\n        \"bolix\",\n        \"bolls\",\n        \"bolos\",\n        \"bolts\",\n        \"bolus\",\n        \"bomas\",\n        \"bombe\",\n        \"bombo\",\n        \"bombs\",\n        \"bonce\",\n        \"bonds\",\n        \"boned\",\n        \"boner\",\n        \"bones\",\n        \"bongs\",\n        \"bonie\",\n        \"bonks\",\n        \"bonne\",\n        \"bonny\",\n        \"bonza\",\n        \"bonze\",\n        \"booai\",\n        \"booay\",\n        \"boobs\",\n        \"boody\",\n        \"booed\",\n        \"boofy\",\n        \"boogy\",\n        \"boohs\",\n        \"books\",\n        \"booky\",\n        \"bools\",\n        \"booms\",\n        \"boomy\",\n        \"boong\",\n        \"boons\",\n        \"boord\",\n        \"boors\",\n        \"boose\",\n        \"boots\",\n        \"boppy\",\n        \"borak\",\n        \"boral\",\n        \"boras\",\n        \"borde\",\n        \"bords\",\n        \"bored\",\n        \"boree\",\n        \"borel\",\n        \"borer\",\n        \"bores\",\n        \"borgo\",\n        \"boric\",\n        \"borks\",\n        \"borms\",\n        \"borna\",\n        \"boron\",\n        \"borts\",\n        \"borty\",\n        \"bortz\",\n        \"bosie\",\n        \"bosks\",\n        \"bosky\",\n        \"boson\",\n        \"bosun\",\n        \"botas\",\n        \"botel\",\n        \"botes\",\n        \"bothy\",\n        \"botte\",\n        \"botts\",\n        \"botty\",\n        \"bouge\",\n        \"bouks\",\n        \"boult\",\n        \"bouns\",\n        \"bourd\",\n        \"bourg\",\n        \"bourn\",\n        \"bouse\",\n        \"bousy\",\n        \"bouts\",\n        \"bovid\",\n        \"bowat\",\n        \"bowed\",\n        \"bower\",\n        \"bowes\",\n        \"bowet\",\n        \"bowie\",\n        \"bowls\",\n        \"bowne\",\n        \"bowrs\",\n        \"bowse\",\n        \"boxed\",\n        \"boxen\",\n        \"boxes\",\n        \"boxla\",\n        \"boxty\",\n        \"boyar\",\n        \"boyau\",\n        \"boyed\",\n        \"boyfs\",\n        \"boygs\",\n        \"boyla\",\n        \"boyos\",\n        \"boysy\",\n        \"bozos\",\n        \"braai\",\n        \"brach\",\n        \"brack\",\n        \"bract\",\n        \"brads\",\n        \"braes\",\n        \"brags\",\n        \"brail\",\n        \"braks\",\n        \"braky\",\n        \"brame\",\n        \"brane\",\n        \"brank\",\n        \"brans\",\n        \"brant\",\n        \"brast\",\n        \"brats\",\n        \"brava\",\n        \"bravi\",\n        \"braws\",\n        \"braxy\",\n        \"brays\",\n        \"braza\",\n        \"braze\",\n        \"bream\",\n        \"brede\",\n        \"breds\",\n        \"breem\",\n        \"breer\",\n        \"brees\",\n        \"breid\",\n        \"breis\",\n        \"breme\",\n        \"brens\",\n        \"brent\",\n        \"brere\",\n        \"brers\",\n        \"breve\",\n        \"brews\",\n        \"breys\",\n        \"brier\",\n        \"bries\",\n        \"brigs\",\n        \"briki\",\n        \"briks\",\n        \"brill\",\n        \"brims\",\n        \"brins\",\n        \"brios\",\n        \"brise\",\n        \"briss\",\n        \"brith\",\n        \"brits\",\n        \"britt\",\n        \"brize\",\n        \"broch\",\n        \"brock\",\n        \"brods\",\n        \"brogh\",\n        \"brogs\",\n        \"brome\",\n        \"bromo\",\n        \"bronc\",\n        \"brond\",\n        \"brool\",\n        \"broos\",\n        \"brose\",\n        \"brosy\",\n        \"brows\",\n        \"brugh\",\n        \"bruin\",\n        \"bruit\",\n        \"brule\",\n        \"brume\",\n        \"brung\",\n        \"brusk\",\n        \"brust\",\n        \"bruts\",\n        \"buats\",\n        \"buaze\",\n        \"bubal\",\n        \"bubas\",\n        \"bubba\",\n        \"bubbe\",\n        \"bubby\",\n        \"bubus\",\n        \"buchu\",\n        \"bucko\",\n        \"bucks\",\n        \"bucku\",\n        \"budas\",\n        \"budis\",\n        \"budos\",\n        \"buffa\",\n        \"buffe\",\n        \"buffi\",\n        \"buffo\",\n        \"buffs\",\n        \"buffy\",\n        \"bufos\",\n        \"bufty\",\n        \"buhls\",\n        \"buhrs\",\n        \"buiks\",\n        \"buist\",\n        \"bukes\",\n        \"bulbs\",\n        \"bulgy\",\n        \"bulks\",\n        \"bulla\",\n        \"bulls\",\n        \"bulse\",\n        \"bumbo\",\n        \"bumfs\",\n        \"bumph\",\n        \"bumps\",\n        \"bumpy\",\n        \"bunas\",\n        \"bunce\",\n        \"bunco\",\n        \"bunde\",\n        \"bundh\",\n        \"bunds\",\n        \"bundt\",\n        \"bundu\",\n        \"bundy\",\n        \"bungs\",\n        \"bungy\",\n        \"bunia\",\n        \"bunje\",\n        \"bunjy\",\n        \"bunko\",\n        \"bunks\",\n        \"bunns\",\n        \"bunts\",\n        \"bunty\",\n        \"bunya\",\n        \"buoys\",\n        \"buppy\",\n        \"buran\",\n        \"buras\",\n        \"burbs\",\n        \"burds\",\n        \"buret\",\n        \"burfi\",\n        \"burgh\",\n        \"burgs\",\n        \"burin\",\n        \"burka\",\n        \"burke\",\n        \"burks\",\n        \"burls\",\n        \"burns\",\n        \"buroo\",\n        \"burps\",\n        \"burqa\",\n        \"burro\",\n        \"burrs\",\n        \"burry\",\n        \"bursa\",\n        \"burse\",\n        \"busby\",\n        \"buses\",\n        \"busks\",\n        \"busky\",\n        \"bussu\",\n        \"busti\",\n        \"busts\",\n        \"busty\",\n        \"buteo\",\n        \"butes\",\n        \"butle\",\n        \"butoh\",\n        \"butts\",\n        \"butty\",\n        \"butut\",\n        \"butyl\",\n        \"buzzy\",\n        \"bwana\",\n        \"bwazi\",\n        \"byded\",\n        \"bydes\",\n        \"byked\",\n        \"bykes\",\n        \"byres\",\n        \"byrls\",\n        \"byssi\",\n        \"bytes\",\n        \"byway\",\n        \"caaed\",\n        \"cabas\",\n        \"caber\",\n        \"cabob\",\n        \"caboc\",\n        \"cabre\",\n        \"cacas\",\n        \"cacks\",\n        \"cacky\",\n        \"cadee\",\n        \"cades\",\n        \"cadge\",\n        \"cadgy\",\n        \"cadie\",\n        \"cadis\",\n        \"cadre\",\n        \"caeca\",\n        \"caese\",\n        \"cafes\",\n        \"caffs\",\n        \"caged\",\n        \"cager\",\n        \"cages\",\n        \"cagot\",\n        \"cahow\",\n        \"caids\",\n        \"cains\",\n        \"caird\",\n        \"cajon\",\n        \"cajun\",\n        \"caked\",\n        \"cakes\",\n        \"cakey\",\n        \"calfs\",\n        \"calid\",\n        \"calif\",\n        \"calix\",\n        \"calks\",\n        \"calla\",\n        \"calls\",\n        \"calms\",\n        \"calmy\",\n        \"calos\",\n        \"calpa\",\n        \"calps\",\n        \"calve\",\n        \"calyx\",\n        \"caman\",\n        \"camas\",\n        \"cames\",\n        \"camis\",\n        \"camos\",\n        \"campi\",\n        \"campo\",\n        \"camps\",\n        \"campy\",\n        \"camus\",\n        \"caned\",\n        \"caneh\",\n        \"caner\",\n        \"canes\",\n        \"cangs\",\n        \"canid\",\n        \"canna\",\n        \"canns\",\n        \"canso\",\n        \"canst\",\n        \"canto\",\n        \"cants\",\n        \"canty\",\n        \"capas\",\n        \"caped\",\n        \"capes\",\n        \"capex\",\n        \"caphs\",\n        \"capiz\",\n        \"caple\",\n        \"capon\",\n        \"capos\",\n        \"capot\",\n        \"capri\",\n        \"capul\",\n        \"carap\",\n        \"carbo\",\n        \"carbs\",\n        \"carby\",\n        \"cardi\",\n        \"cards\",\n        \"cardy\",\n        \"cared\",\n        \"carer\",\n        \"cares\",\n        \"caret\",\n        \"carex\",\n        \"carks\",\n        \"carle\",\n        \"carls\",\n        \"carns\",\n        \"carny\",\n        \"carob\",\n        \"carom\",\n        \"caron\",\n        \"carpi\",\n        \"carps\",\n        \"carrs\",\n        \"carse\",\n        \"carta\",\n        \"carte\",\n        \"carts\",\n        \"carvy\",\n        \"casas\",\n        \"casco\",\n        \"cased\",\n        \"cases\",\n        \"casks\",\n        \"casky\",\n        \"casts\",\n        \"casus\",\n        \"cates\",\n        \"cauda\",\n        \"cauks\",\n        \"cauld\",\n        \"cauls\",\n        \"caums\",\n        \"caups\",\n        \"cauri\",\n        \"causa\",\n        \"cavas\",\n        \"caved\",\n        \"cavel\",\n        \"caver\",\n        \"caves\",\n        \"cavie\",\n        \"cawed\",\n        \"cawks\",\n        \"caxon\",\n        \"ceaze\",\n        \"cebid\",\n        \"cecal\",\n        \"cecum\",\n        \"ceded\",\n        \"ceder\",\n        \"cedes\",\n        \"cedis\",\n        \"ceiba\",\n        \"ceili\",\n        \"ceils\",\n        \"celeb\",\n        \"cella\",\n        \"celli\",\n        \"cells\",\n        \"celom\",\n        \"celts\",\n        \"cense\",\n        \"cento\",\n        \"cents\",\n        \"centu\",\n        \"ceorl\",\n        \"cepes\",\n        \"cerci\",\n        \"cered\",\n        \"ceres\",\n        \"cerge\",\n        \"ceria\",\n        \"ceric\",\n        \"cerne\",\n        \"ceroc\",\n        \"ceros\",\n        \"certs\",\n        \"certy\",\n        \"cesse\",\n        \"cesta\",\n        \"cesti\",\n        \"cetes\",\n        \"cetyl\",\n        \"cezve\",\n        \"chace\",\n        \"chack\",\n        \"chaco\",\n        \"chado\",\n        \"chads\",\n        \"chaft\",\n        \"chais\",\n        \"chals\",\n        \"chams\",\n        \"chana\",\n        \"chang\",\n        \"chank\",\n        \"chape\",\n        \"chaps\",\n        \"chapt\",\n        \"chara\",\n        \"chare\",\n        \"chark\",\n        \"charr\",\n        \"chars\",\n        \"chary\",\n        \"chats\",\n        \"chave\",\n        \"chavs\",\n        \"chawk\",\n        \"chaws\",\n        \"chaya\",\n        \"chays\",\n        \"cheep\",\n        \"chefs\",\n        \"cheka\",\n        \"chela\",\n        \"chelp\",\n        \"chemo\",\n        \"chems\",\n        \"chere\",\n        \"chert\",\n        \"cheth\",\n        \"chevy\",\n        \"chews\",\n        \"chewy\",\n        \"chiao\",\n        \"chias\",\n        \"chibs\",\n        \"chica\",\n        \"chich\",\n        \"chico\",\n        \"chics\",\n        \"chiel\",\n        \"chiks\",\n        \"chile\",\n        \"chimb\",\n        \"chimo\",\n        \"chimp\",\n        \"chine\",\n        \"ching\",\n        \"chink\",\n        \"chino\",\n        \"chins\",\n        \"chips\",\n        \"chirk\",\n        \"chirl\",\n        \"chirm\",\n        \"chiro\",\n        \"chirr\",\n        \"chirt\",\n        \"chiru\",\n        \"chits\",\n        \"chive\",\n        \"chivs\",\n        \"chivy\",\n        \"chizz\",\n        \"choco\",\n        \"chocs\",\n        \"chode\",\n        \"chogs\",\n        \"choil\",\n        \"choko\",\n        \"choky\",\n        \"chola\",\n        \"choli\",\n        \"cholo\",\n        \"chomp\",\n        \"chons\",\n        \"choof\",\n        \"chook\",\n        \"choom\",\n        \"choon\",\n        \"chops\",\n        \"chota\",\n        \"chott\",\n        \"chout\",\n        \"choux\",\n        \"chowk\",\n        \"chows\",\n        \"chubs\",\n        \"chufa\",\n        \"chuff\",\n        \"chugs\",\n        \"chums\",\n        \"churl\",\n        \"churr\",\n        \"chuse\",\n        \"chuts\",\n        \"chyle\",\n        \"chyme\",\n        \"chynd\",\n        \"cibol\",\n        \"cided\",\n        \"cides\",\n        \"ciels\",\n        \"ciggy\",\n        \"cilia\",\n        \"cills\",\n        \"cimar\",\n        \"cimex\",\n        \"cinct\",\n        \"cines\",\n        \"cinqs\",\n        \"cions\",\n        \"cippi\",\n        \"circs\",\n        \"cires\",\n        \"cirls\",\n        \"cirri\",\n        \"cisco\",\n        \"cissy\",\n        \"cists\",\n        \"cital\",\n        \"cited\",\n        \"citer\",\n        \"cites\",\n        \"cives\",\n        \"civet\",\n        \"civie\",\n        \"civvy\",\n        \"clach\",\n        \"clade\",\n        \"clads\",\n        \"claes\",\n        \"clags\",\n        \"clame\",\n        \"clams\",\n        \"clans\",\n        \"claps\",\n        \"clapt\",\n        \"claro\",\n        \"clart\",\n        \"clary\",\n        \"clast\",\n        \"clats\",\n        \"claut\",\n        \"clave\",\n        \"clavi\",\n        \"claws\",\n        \"clays\",\n        \"cleck\",\n        \"cleek\",\n        \"cleep\",\n        \"clefs\",\n        \"clegs\",\n        \"cleik\",\n        \"clems\",\n        \"clepe\",\n        \"clept\",\n        \"cleve\",\n        \"clews\",\n        \"clied\",\n        \"clies\",\n        \"clift\",\n        \"clime\",\n        \"cline\",\n        \"clint\",\n        \"clipe\",\n        \"clips\",\n        \"clipt\",\n        \"clits\",\n        \"cloam\",\n        \"clods\",\n        \"cloff\",\n        \"clogs\",\n        \"cloke\",\n        \"clomb\",\n        \"clomp\",\n        \"clonk\",\n        \"clons\",\n        \"cloop\",\n        \"cloot\",\n        \"clops\",\n        \"clote\",\n        \"clots\",\n        \"clour\",\n        \"clous\",\n        \"clows\",\n        \"cloye\",\n        \"cloys\",\n        \"cloze\",\n        \"clubs\",\n        \"clues\",\n        \"cluey\",\n        \"clunk\",\n        \"clype\",\n        \"cnida\",\n        \"coact\",\n        \"coady\",\n        \"coala\",\n        \"coals\",\n        \"coaly\",\n        \"coapt\",\n        \"coarb\",\n        \"coate\",\n        \"coati\",\n        \"coats\",\n        \"cobbs\",\n        \"cobby\",\n        \"cobia\",\n        \"coble\",\n        \"cobza\",\n        \"cocas\",\n        \"cocci\",\n        \"cocco\",\n        \"cocks\",\n        \"cocky\",\n        \"cocos\",\n        \"codas\",\n        \"codec\",\n        \"coded\",\n        \"coden\",\n        \"coder\",\n        \"codes\",\n        \"codex\",\n        \"codon\",\n        \"coeds\",\n        \"coffs\",\n        \"cogie\",\n        \"cogon\",\n        \"cogue\",\n        \"cohab\",\n        \"cohen\",\n        \"cohoe\",\n        \"cohog\",\n        \"cohos\",\n        \"coifs\",\n        \"coign\",\n        \"coils\",\n        \"coins\",\n        \"coirs\",\n        \"coits\",\n        \"coked\",\n        \"cokes\",\n        \"colas\",\n        \"colby\",\n        \"colds\",\n        \"coled\",\n        \"coles\",\n        \"coley\",\n        \"colic\",\n        \"colin\",\n        \"colls\",\n        \"colly\",\n        \"colog\",\n        \"colts\",\n        \"colza\",\n        \"comae\",\n        \"comal\",\n        \"comas\",\n        \"combe\",\n        \"combi\",\n        \"combo\",\n        \"combs\",\n        \"comby\",\n        \"comer\",\n        \"comes\",\n        \"comix\",\n        \"commo\",\n        \"comms\",\n        \"commy\",\n        \"compo\",\n        \"comps\",\n        \"compt\",\n        \"comte\",\n        \"comus\",\n        \"coned\",\n        \"cones\",\n        \"coney\",\n        \"confs\",\n        \"conga\",\n        \"conge\",\n        \"congo\",\n        \"conia\",\n        \"conin\",\n        \"conks\",\n        \"conky\",\n        \"conne\",\n        \"conns\",\n        \"conte\",\n        \"conto\",\n        \"conus\",\n        \"convo\",\n        \"cooch\",\n        \"cooed\",\n        \"cooee\",\n        \"cooer\",\n        \"cooey\",\n        \"coofs\",\n        \"cooks\",\n        \"cooky\",\n        \"cools\",\n        \"cooly\",\n        \"coomb\",\n        \"cooms\",\n        \"coomy\",\n        \"coons\",\n        \"coops\",\n        \"coopt\",\n        \"coost\",\n        \"coots\",\n        \"cooze\",\n        \"copal\",\n        \"copay\",\n        \"coped\",\n        \"copen\",\n        \"coper\",\n        \"copes\",\n        \"coppy\",\n        \"copra\",\n        \"copsy\",\n        \"coqui\",\n        \"coram\",\n        \"corbe\",\n        \"corby\",\n        \"cords\",\n        \"cored\",\n        \"cores\",\n        \"corey\",\n        \"corgi\",\n        \"coria\",\n        \"corks\",\n        \"corky\",\n        \"corms\",\n        \"corni\",\n        \"corno\",\n        \"corns\",\n        \"cornu\",\n        \"corps\",\n        \"corse\",\n        \"corso\",\n        \"cosec\",\n        \"cosed\",\n        \"coses\",\n        \"coset\",\n        \"cosey\",\n        \"cosie\",\n        \"costa\",\n        \"coste\",\n        \"costs\",\n        \"cotan\",\n        \"coted\",\n        \"cotes\",\n        \"coths\",\n        \"cotta\",\n        \"cotts\",\n        \"coude\",\n        \"coups\",\n        \"courb\",\n        \"courd\",\n        \"coure\",\n        \"cours\",\n        \"couta\",\n        \"couth\",\n        \"coved\",\n        \"coves\",\n        \"covin\",\n        \"cowal\",\n        \"cowan\",\n        \"cowed\",\n        \"cowks\",\n        \"cowls\",\n        \"cowps\",\n        \"cowry\",\n        \"coxae\",\n        \"coxal\",\n        \"coxed\",\n        \"coxes\",\n        \"coxib\",\n        \"coyau\",\n        \"coyed\",\n        \"coyer\",\n        \"coypu\",\n        \"cozed\",\n        \"cozen\",\n        \"cozes\",\n        \"cozey\",\n        \"cozie\",\n        \"craal\",\n        \"crabs\",\n        \"crags\",\n        \"craic\",\n        \"craig\",\n        \"crake\",\n        \"crame\",\n        \"crams\",\n        \"crans\",\n        \"crape\",\n        \"craps\",\n        \"crapy\",\n        \"crare\",\n        \"craws\",\n        \"crays\",\n        \"creds\",\n        \"creel\",\n        \"crees\",\n        \"crems\",\n        \"crena\",\n        \"creps\",\n        \"crepy\",\n        \"crewe\",\n        \"crews\",\n        \"crias\",\n        \"cribs\",\n        \"cries\",\n        \"crims\",\n        \"crine\",\n        \"crios\",\n        \"cripe\",\n        \"crips\",\n        \"crise\",\n        \"crith\",\n        \"crits\",\n        \"croci\",\n        \"crocs\",\n        \"croft\",\n        \"crogs\",\n        \"cromb\",\n        \"crome\",\n        \"cronk\",\n        \"crons\",\n        \"crool\",\n        \"croon\",\n        \"crops\",\n        \"crore\",\n        \"crost\",\n        \"crout\",\n        \"crows\",\n        \"croze\",\n        \"cruck\",\n        \"crudo\",\n        \"cruds\",\n        \"crudy\",\n        \"crues\",\n        \"cruet\",\n        \"cruft\",\n        \"crunk\",\n        \"cruor\",\n        \"crura\",\n        \"cruse\",\n        \"crusy\",\n        \"cruve\",\n        \"crwth\",\n        \"cryer\",\n        \"ctene\",\n        \"cubby\",\n        \"cubeb\",\n        \"cubed\",\n        \"cuber\",\n        \"cubes\",\n        \"cubit\",\n        \"cuddy\",\n        \"cuffo\",\n        \"cuffs\",\n        \"cuifs\",\n        \"cuing\",\n        \"cuish\",\n        \"cuits\",\n        \"cukes\",\n        \"culch\",\n        \"culet\",\n        \"culex\",\n        \"culls\",\n        \"cully\",\n        \"culms\",\n        \"culpa\",\n        \"culti\",\n        \"cults\",\n        \"culty\",\n        \"cumec\",\n        \"cundy\",\n        \"cunei\",\n        \"cunit\",\n        \"cunts\",\n        \"cupel\",\n        \"cupid\",\n        \"cuppa\",\n        \"cuppy\",\n        \"curat\",\n        \"curbs\",\n        \"curch\",\n        \"curds\",\n        \"curdy\",\n        \"cured\",\n        \"curer\",\n        \"cures\",\n        \"curet\",\n        \"curfs\",\n        \"curia\",\n        \"curie\",\n        \"curli\",\n        \"curls\",\n        \"curns\",\n        \"curny\",\n        \"currs\",\n        \"cursi\",\n        \"curst\",\n        \"cusec\",\n        \"cushy\",\n        \"cusks\",\n        \"cusps\",\n        \"cuspy\",\n        \"cusso\",\n        \"cusum\",\n        \"cutch\",\n        \"cuter\",\n        \"cutes\",\n        \"cutey\",\n        \"cutin\",\n        \"cutis\",\n        \"cutto\",\n        \"cutty\",\n        \"cutup\",\n        \"cuvee\",\n        \"cuzes\",\n        \"cwtch\",\n        \"cyano\",\n        \"cyans\",\n        \"cycad\",\n        \"cycas\",\n        \"cyclo\",\n        \"cyder\",\n        \"cylix\",\n        \"cymae\",\n        \"cymar\",\n        \"cymas\",\n        \"cymes\",\n        \"cymol\",\n        \"cysts\",\n        \"cytes\",\n        \"cyton\",\n        \"czars\",\n        \"daals\",\n        \"dabba\",\n        \"daces\",\n        \"dacha\",\n        \"dacks\",\n        \"dadah\",\n        \"dadas\",\n        \"dados\",\n        \"daffs\",\n        \"daffy\",\n        \"dagga\",\n        \"daggy\",\n        \"dagos\",\n        \"dahls\",\n        \"daiko\",\n        \"daine\",\n        \"daint\",\n        \"daker\",\n        \"daled\",\n        \"dales\",\n        \"dalis\",\n        \"dalle\",\n        \"dalts\",\n        \"daman\",\n        \"damar\",\n        \"dames\",\n        \"damme\",\n        \"damns\",\n        \"damps\",\n        \"dampy\",\n        \"dancy\",\n        \"dangs\",\n        \"danio\",\n        \"danks\",\n        \"danny\",\n        \"dants\",\n        \"daraf\",\n        \"darbs\",\n        \"darcy\",\n        \"dared\",\n        \"darer\",\n        \"dares\",\n        \"darga\",\n        \"dargs\",\n        \"daric\",\n        \"daris\",\n        \"darks\",\n        \"darky\",\n        \"darns\",\n        \"darre\",\n        \"darts\",\n        \"darzi\",\n        \"dashi\",\n        \"dashy\",\n        \"datal\",\n        \"dated\",\n        \"dater\",\n        \"dates\",\n        \"datos\",\n        \"datto\",\n        \"daube\",\n        \"daubs\",\n        \"dauby\",\n        \"dauds\",\n        \"dault\",\n        \"daurs\",\n        \"dauts\",\n        \"daven\",\n        \"davit\",\n        \"dawah\",\n        \"dawds\",\n        \"dawed\",\n        \"dawen\",\n        \"dawks\",\n        \"dawns\",\n        \"dawts\",\n        \"dayan\",\n        \"daych\",\n        \"daynt\",\n        \"dazed\",\n        \"dazer\",\n        \"dazes\",\n        \"deads\",\n        \"deair\",\n        \"deals\",\n        \"deans\",\n        \"deare\",\n        \"dearn\",\n        \"dears\",\n        \"deary\",\n        \"deash\",\n        \"deave\",\n        \"deaws\",\n        \"deawy\",\n        \"debag\",\n        \"debby\",\n        \"debel\",\n        \"debes\",\n        \"debts\",\n        \"debud\",\n        \"debur\",\n        \"debus\",\n        \"debye\",\n        \"decad\",\n        \"decaf\",\n        \"decan\",\n        \"decko\",\n        \"decks\",\n        \"decos\",\n        \"dedal\",\n        \"deeds\",\n        \"deedy\",\n        \"deely\",\n        \"deems\",\n        \"deens\",\n        \"deeps\",\n        \"deere\",\n        \"deers\",\n        \"deets\",\n        \"deeve\",\n        \"deevs\",\n        \"defat\",\n        \"deffo\",\n        \"defis\",\n        \"defog\",\n        \"degas\",\n        \"degum\",\n        \"degus\",\n        \"deice\",\n        \"deids\",\n        \"deify\",\n        \"deils\",\n        \"deism\",\n        \"deist\",\n        \"deked\",\n        \"dekes\",\n        \"dekko\",\n        \"deled\",\n        \"deles\",\n        \"delfs\",\n        \"delft\",\n        \"delis\",\n        \"dells\",\n        \"delly\",\n        \"delos\",\n        \"delph\",\n        \"delts\",\n        \"deman\",\n        \"demes\",\n        \"demic\",\n        \"demit\",\n        \"demob\",\n        \"demoi\",\n        \"demos\",\n        \"dempt\",\n        \"denar\",\n        \"denay\",\n        \"dench\",\n        \"denes\",\n        \"denet\",\n        \"denis\",\n        \"dents\",\n        \"deoxy\",\n        \"derat\",\n        \"deray\",\n        \"dered\",\n        \"deres\",\n        \"derig\",\n        \"derma\",\n        \"derms\",\n        \"derns\",\n        \"derny\",\n        \"deros\",\n        \"derro\",\n        \"derry\",\n        \"derth\",\n        \"dervs\",\n        \"desex\",\n        \"deshi\",\n        \"desis\",\n        \"desks\",\n        \"desse\",\n        \"devas\",\n        \"devel\",\n        \"devis\",\n        \"devon\",\n        \"devos\",\n        \"devot\",\n        \"dewan\",\n        \"dewar\",\n        \"dewax\",\n        \"dewed\",\n        \"dexes\",\n        \"dexie\",\n        \"dhaba\",\n        \"dhaks\",\n        \"dhals\",\n        \"dhikr\",\n        \"dhobi\",\n        \"dhole\",\n        \"dholl\",\n        \"dhols\",\n        \"dhoti\",\n        \"dhows\",\n        \"dhuti\",\n        \"diact\",\n        \"dials\",\n        \"diane\",\n        \"diazo\",\n        \"dibbs\",\n        \"diced\",\n        \"dicer\",\n        \"dices\",\n        \"dicht\",\n        \"dicks\",\n        \"dicky\",\n        \"dicot\",\n        \"dicta\",\n        \"dicts\",\n        \"dicty\",\n        \"diddy\",\n        \"didie\",\n        \"didos\",\n        \"didst\",\n        \"diebs\",\n        \"diels\",\n        \"diene\",\n        \"diets\",\n        \"diffs\",\n        \"dight\",\n        \"dikas\",\n        \"diked\",\n        \"diker\",\n        \"dikes\",\n        \"dikey\",\n        \"dildo\",\n        \"dilli\",\n        \"dills\",\n        \"dimbo\",\n        \"dimer\",\n        \"dimes\",\n        \"dimps\",\n        \"dinar\",\n        \"dined\",\n        \"dines\",\n        \"dinge\",\n        \"dings\",\n        \"dinic\",\n        \"dinks\",\n        \"dinky\",\n        \"dinna\",\n        \"dinos\",\n        \"dints\",\n        \"diols\",\n        \"diota\",\n        \"dippy\",\n        \"dipso\",\n        \"diram\",\n        \"direr\",\n        \"dirke\",\n        \"dirks\",\n        \"dirls\",\n        \"dirts\",\n        \"disas\",\n        \"disci\",\n        \"discs\",\n        \"dishy\",\n        \"disks\",\n        \"disme\",\n        \"dital\",\n        \"ditas\",\n        \"dited\",\n        \"dites\",\n        \"ditsy\",\n        \"ditts\",\n        \"ditzy\",\n        \"divan\",\n        \"divas\",\n        \"dived\",\n        \"dives\",\n        \"divis\",\n        \"divna\",\n        \"divos\",\n        \"divot\",\n        \"divvy\",\n        \"diwan\",\n        \"dixie\",\n        \"dixit\",\n        \"diyas\",\n        \"dizen\",\n        \"djinn\",\n        \"djins\",\n        \"doabs\",\n        \"doats\",\n        \"dobby\",\n        \"dobes\",\n        \"dobie\",\n        \"dobla\",\n        \"dobra\",\n        \"dobro\",\n        \"docht\",\n        \"docks\",\n        \"docos\",\n        \"docus\",\n        \"doddy\",\n        \"dodos\",\n        \"doeks\",\n        \"doers\",\n        \"doest\",\n        \"doeth\",\n        \"doffs\",\n        \"dogan\",\n        \"doges\",\n        \"dogey\",\n        \"doggo\",\n        \"doggy\",\n        \"dogie\",\n        \"dohyo\",\n        \"doilt\",\n        \"doily\",\n        \"doits\",\n        \"dojos\",\n        \"dolce\",\n        \"dolci\",\n        \"doled\",\n        \"doles\",\n        \"dolia\",\n        \"dolls\",\n        \"dolma\",\n        \"dolor\",\n        \"dolos\",\n        \"dolts\",\n        \"domal\",\n        \"domed\",\n        \"domes\",\n        \"domic\",\n        \"donah\",\n        \"donas\",\n        \"donee\",\n        \"doner\",\n        \"donga\",\n        \"dongs\",\n        \"donko\",\n        \"donna\",\n        \"donne\",\n        \"donny\",\n        \"donsy\",\n        \"doobs\",\n        \"dooce\",\n        \"doody\",\n        \"dooks\",\n        \"doole\",\n        \"dools\",\n        \"dooly\",\n        \"dooms\",\n        \"doomy\",\n        \"doona\",\n        \"doorn\",\n        \"doors\",\n        \"doozy\",\n        \"dopas\",\n        \"doped\",\n        \"doper\",\n        \"dopes\",\n        \"dorad\",\n        \"dorba\",\n        \"dorbs\",\n        \"doree\",\n        \"dores\",\n        \"doric\",\n        \"doris\",\n        \"dorks\",\n        \"dorky\",\n        \"dorms\",\n        \"dormy\",\n        \"dorps\",\n        \"dorrs\",\n        \"dorsa\",\n        \"dorse\",\n        \"dorts\",\n        \"dorty\",\n        \"dosai\",\n        \"dosas\",\n        \"dosed\",\n        \"doseh\",\n        \"doser\",\n        \"doses\",\n        \"dosha\",\n        \"dotal\",\n        \"doted\",\n        \"doter\",\n        \"dotes\",\n        \"dotty\",\n        \"douar\",\n        \"douce\",\n        \"doucs\",\n        \"douks\",\n        \"doula\",\n        \"douma\",\n        \"doums\",\n        \"doups\",\n        \"doura\",\n        \"douse\",\n        \"douts\",\n        \"doved\",\n        \"doven\",\n        \"dover\",\n        \"doves\",\n        \"dovie\",\n        \"dowar\",\n        \"dowds\",\n        \"dowed\",\n        \"dower\",\n        \"dowie\",\n        \"dowle\",\n        \"dowls\",\n        \"dowly\",\n        \"downa\",\n        \"downs\",\n        \"dowps\",\n        \"dowse\",\n        \"dowts\",\n        \"doxed\",\n        \"doxes\",\n        \"doxie\",\n        \"doyen\",\n        \"doyly\",\n        \"dozed\",\n        \"dozer\",\n        \"dozes\",\n        \"drabs\",\n        \"drack\",\n        \"draco\",\n        \"draff\",\n        \"drags\",\n        \"drail\",\n        \"drams\",\n        \"drant\",\n        \"draps\",\n        \"drats\",\n        \"drave\",\n        \"draws\",\n        \"drays\",\n        \"drear\",\n        \"dreck\",\n        \"dreed\",\n        \"dreer\",\n        \"drees\",\n        \"dregs\",\n        \"dreks\",\n        \"drent\",\n        \"drere\",\n        \"drest\",\n        \"dreys\",\n        \"dribs\",\n        \"drice\",\n        \"dries\",\n        \"drily\",\n        \"drips\",\n        \"dript\",\n        \"droid\",\n        \"droil\",\n        \"droke\",\n        \"drole\",\n        \"drome\",\n        \"drony\",\n        \"droob\",\n        \"droog\",\n        \"drook\",\n        \"drops\",\n        \"dropt\",\n        \"drouk\",\n        \"drows\",\n        \"drubs\",\n        \"drugs\",\n        \"drums\",\n        \"drupe\",\n        \"druse\",\n        \"drusy\",\n        \"druxy\",\n        \"dryad\",\n        \"dryas\",\n        \"dsobo\",\n        \"dsomo\",\n        \"duads\",\n        \"duals\",\n        \"duans\",\n        \"duars\",\n        \"dubbo\",\n        \"ducal\",\n        \"ducat\",\n        \"duces\",\n        \"ducks\",\n        \"ducky\",\n        \"ducts\",\n        \"duddy\",\n        \"duded\",\n        \"dudes\",\n        \"duels\",\n        \"duets\",\n        \"duett\",\n        \"duffs\",\n        \"dufus\",\n        \"duing\",\n        \"duits\",\n        \"dukas\",\n        \"duked\",\n        \"dukes\",\n        \"dukka\",\n        \"dulce\",\n        \"dules\",\n        \"dulia\",\n        \"dulls\",\n        \"dulse\",\n        \"dumas\",\n        \"dumbo\",\n        \"dumbs\",\n        \"dumka\",\n        \"dumky\",\n        \"dumps\",\n        \"dunam\",\n        \"dunch\",\n        \"dunes\",\n        \"dungs\",\n        \"dungy\",\n        \"dunks\",\n        \"dunno\",\n        \"dunny\",\n        \"dunsh\",\n        \"dunts\",\n        \"duomi\",\n        \"duomo\",\n        \"duped\",\n        \"duper\",\n        \"dupes\",\n        \"duple\",\n        \"duply\",\n        \"duppy\",\n        \"dural\",\n        \"duras\",\n        \"dured\",\n        \"dures\",\n        \"durgy\",\n        \"durns\",\n        \"duroc\",\n        \"duros\",\n        \"duroy\",\n        \"durra\",\n        \"durrs\",\n        \"durry\",\n        \"durst\",\n        \"durum\",\n        \"durzi\",\n        \"dusks\",\n        \"dusts\",\n        \"duxes\",\n        \"dwaal\",\n        \"dwale\",\n        \"dwalm\",\n        \"dwams\",\n        \"dwang\",\n        \"dwaum\",\n        \"dweeb\",\n        \"dwile\",\n        \"dwine\",\n        \"dyads\",\n        \"dyers\",\n        \"dyked\",\n        \"dykes\",\n        \"dykey\",\n        \"dykon\",\n        \"dynel\",\n        \"dynes\",\n        \"dzhos\",\n        \"eagre\",\n        \"ealed\",\n        \"eales\",\n        \"eaned\",\n        \"eards\",\n        \"eared\",\n        \"earls\",\n        \"earns\",\n        \"earnt\",\n        \"earst\",\n        \"eased\",\n        \"easer\",\n        \"eases\",\n        \"easle\",\n        \"easts\",\n        \"eathe\",\n        \"eaved\",\n        \"eaves\",\n        \"ebbed\",\n        \"ebbet\",\n        \"ebons\",\n        \"ebook\",\n        \"ecads\",\n        \"eched\",\n        \"eches\",\n        \"echos\",\n        \"ecrus\",\n        \"edema\",\n        \"edged\",\n        \"edger\",\n        \"edges\",\n        \"edile\",\n        \"edits\",\n        \"educe\",\n        \"educt\",\n        \"eejit\",\n        \"eensy\",\n        \"eeven\",\n        \"eevns\",\n        \"effed\",\n        \"egads\",\n        \"egers\",\n        \"egest\",\n        \"eggar\",\n        \"egged\",\n        \"egger\",\n        \"egmas\",\n        \"ehing\",\n        \"eider\",\n        \"eidos\",\n        \"eigne\",\n        \"eiked\",\n        \"eikon\",\n        \"eilds\",\n        \"eisel\",\n        \"ejido\",\n        \"ekkas\",\n        \"elain\",\n        \"eland\",\n        \"elans\",\n        \"elchi\",\n        \"eldin\",\n        \"elemi\",\n        \"elfed\",\n        \"eliad\",\n        \"elint\",\n        \"elmen\",\n        \"eloge\",\n        \"elogy\",\n        \"eloin\",\n        \"elops\",\n        \"elpee\",\n        \"elsin\",\n        \"elute\",\n        \"elvan\",\n        \"elven\",\n        \"elver\",\n        \"elves\",\n        \"emacs\",\n        \"embar\",\n        \"embay\",\n        \"embog\",\n        \"embow\",\n        \"embox\",\n        \"embus\",\n        \"emeer\",\n        \"emend\",\n        \"emerg\",\n        \"emery\",\n        \"emeus\",\n        \"emics\",\n        \"emirs\",\n        \"emits\",\n        \"emmas\",\n        \"emmer\",\n        \"emmet\",\n        \"emmew\",\n        \"emmys\",\n        \"emoji\",\n        \"emong\",\n        \"emote\",\n        \"emove\",\n        \"empts\",\n        \"emule\",\n        \"emure\",\n        \"emyde\",\n        \"emyds\",\n        \"enarm\",\n        \"enate\",\n        \"ended\",\n        \"ender\",\n        \"endew\",\n        \"endue\",\n        \"enews\",\n        \"enfix\",\n        \"eniac\",\n        \"enlit\",\n        \"enmew\",\n        \"ennog\",\n        \"enoki\",\n        \"enols\",\n        \"enorm\",\n        \"enows\",\n        \"enrol\",\n        \"ensew\",\n        \"ensky\",\n        \"entia\",\n        \"enure\",\n        \"enurn\",\n        \"envoi\",\n        \"enzym\",\n        \"eorls\",\n        \"eosin\",\n        \"epact\",\n        \"epees\",\n        \"ephah\",\n        \"ephas\",\n        \"ephod\",\n        \"ephor\",\n        \"epics\",\n        \"epode\",\n        \"epopt\",\n        \"epris\",\n        \"eques\",\n        \"equid\",\n        \"erbia\",\n        \"erevs\",\n        \"ergon\",\n        \"ergos\",\n        \"ergot\",\n        \"erhus\",\n        \"erica\",\n        \"erick\",\n        \"erics\",\n        \"ering\",\n        \"erned\",\n        \"ernes\",\n        \"erose\",\n        \"erred\",\n        \"erses\",\n        \"eruct\",\n        \"erugo\",\n        \"eruvs\",\n        \"erven\",\n        \"ervil\",\n        \"escar\",\n        \"escot\",\n        \"esile\",\n        \"eskar\",\n        \"esker\",\n        \"esnes\",\n        \"esses\",\n        \"estoc\",\n        \"estop\",\n        \"estro\",\n        \"etage\",\n        \"etape\",\n        \"etats\",\n        \"etens\",\n        \"ethal\",\n        \"ethne\",\n        \"ethyl\",\n        \"etics\",\n        \"etnas\",\n        \"ettin\",\n        \"ettle\",\n        \"etuis\",\n        \"etwee\",\n        \"etyma\",\n        \"eughs\",\n        \"euked\",\n        \"eupad\",\n        \"euros\",\n        \"eusol\",\n        \"evens\",\n        \"evert\",\n        \"evets\",\n        \"evhoe\",\n        \"evils\",\n        \"evite\",\n        \"evohe\",\n        \"ewers\",\n        \"ewest\",\n        \"ewhow\",\n        \"ewked\",\n        \"exams\",\n        \"exeat\",\n        \"execs\",\n        \"exeem\",\n        \"exeme\",\n        \"exfil\",\n        \"exies\",\n        \"exine\",\n        \"exing\",\n        \"exits\",\n        \"exode\",\n        \"exome\",\n        \"exons\",\n        \"expat\",\n        \"expos\",\n        \"exude\",\n        \"exuls\",\n        \"exurb\",\n        \"eyass\",\n        \"eyers\",\n        \"eyots\",\n        \"eyras\",\n        \"eyres\",\n        \"eyrie\",\n        \"eyrir\",\n        \"ezine\",\n        \"fabby\",\n        \"faced\",\n        \"facer\",\n        \"faces\",\n        \"facia\",\n        \"facta\",\n        \"facts\",\n        \"faddy\",\n        \"faded\",\n        \"fader\",\n        \"fades\",\n        \"fadge\",\n        \"fados\",\n        \"faena\",\n        \"faery\",\n        \"faffs\",\n        \"faffy\",\n        \"faggy\",\n        \"fagin\",\n        \"fagot\",\n        \"faiks\",\n        \"fails\",\n        \"faine\",\n        \"fains\",\n        \"fairs\",\n        \"faked\",\n        \"faker\",\n        \"fakes\",\n        \"fakey\",\n        \"fakie\",\n        \"fakir\",\n        \"falaj\",\n        \"falls\",\n        \"famed\",\n        \"fames\",\n        \"fanal\",\n        \"fands\",\n        \"fanes\",\n        \"fanga\",\n        \"fango\",\n        \"fangs\",\n        \"fanks\",\n        \"fanon\",\n        \"fanos\",\n        \"fanum\",\n        \"faqir\",\n        \"farad\",\n        \"farci\",\n        \"farcy\",\n        \"fards\",\n        \"fared\",\n        \"farer\",\n        \"fares\",\n        \"farle\",\n        \"farls\",\n        \"farms\",\n        \"faros\",\n        \"farro\",\n        \"farse\",\n        \"farts\",\n        \"fasci\",\n        \"fasti\",\n        \"fasts\",\n        \"fated\",\n        \"fates\",\n        \"fatly\",\n        \"fatso\",\n        \"fatwa\",\n        \"faugh\",\n        \"fauld\",\n        \"fauns\",\n        \"faurd\",\n        \"fauts\",\n        \"fauve\",\n        \"favas\",\n        \"favel\",\n        \"faver\",\n        \"faves\",\n        \"favus\",\n        \"fawns\",\n        \"fawny\",\n        \"faxed\",\n        \"faxes\",\n        \"fayed\",\n        \"fayer\",\n        \"fayne\",\n        \"fayre\",\n        \"fazed\",\n        \"fazes\",\n        \"feals\",\n        \"feare\",\n        \"fears\",\n        \"feart\",\n        \"fease\",\n        \"feats\",\n        \"feaze\",\n        \"feces\",\n        \"fecht\",\n        \"fecit\",\n        \"fecks\",\n        \"fedex\",\n        \"feebs\",\n        \"feeds\",\n        \"feels\",\n        \"feens\",\n        \"feers\",\n        \"feese\",\n        \"feeze\",\n        \"fehme\",\n        \"feint\",\n        \"feist\",\n        \"felch\",\n        \"felid\",\n        \"fells\",\n        \"felly\",\n        \"felts\",\n        \"felty\",\n        \"femal\",\n        \"femes\",\n        \"femmy\",\n        \"fends\",\n        \"fendy\",\n        \"fenis\",\n        \"fenks\",\n        \"fenny\",\n        \"fents\",\n        \"feods\",\n        \"feoff\",\n        \"ferer\",\n        \"feres\",\n        \"feria\",\n        \"ferly\",\n        \"fermi\",\n        \"ferms\",\n        \"ferns\",\n        \"ferny\",\n        \"fesse\",\n        \"festa\",\n        \"fests\",\n        \"festy\",\n        \"fetas\",\n        \"feted\",\n        \"fetes\",\n        \"fetor\",\n        \"fetta\",\n        \"fetts\",\n        \"fetwa\",\n        \"feuar\",\n        \"feuds\",\n        \"feued\",\n        \"feyed\",\n        \"feyer\",\n        \"feyly\",\n        \"fezes\",\n        \"fezzy\",\n        \"fiars\",\n        \"fiats\",\n        \"fibro\",\n        \"fices\",\n        \"fiche\",\n        \"fichu\",\n        \"ficin\",\n        \"ficos\",\n        \"fides\",\n        \"fidge\",\n        \"fidos\",\n        \"fiefs\",\n        \"fient\",\n        \"fiere\",\n        \"fiers\",\n        \"fiest\",\n        \"fifed\",\n        \"fifer\",\n        \"fifes\",\n        \"fifis\",\n        \"figgy\",\n        \"figos\",\n        \"fiked\",\n        \"fikes\",\n        \"filar\",\n        \"filch\",\n        \"filed\",\n        \"files\",\n        \"filii\",\n        \"filks\",\n        \"fille\",\n        \"fillo\",\n        \"fills\",\n        \"filmi\",\n        \"films\",\n        \"filos\",\n        \"filum\",\n        \"finca\",\n        \"finds\",\n        \"fined\",\n        \"fines\",\n        \"finis\",\n        \"finks\",\n        \"finny\",\n        \"finos\",\n        \"fiord\",\n        \"fiqhs\",\n        \"fique\",\n        \"fired\",\n        \"firer\",\n        \"fires\",\n        \"firie\",\n        \"firks\",\n        \"firms\",\n        \"firns\",\n        \"firry\",\n        \"firth\",\n        \"fiscs\",\n        \"fisks\",\n        \"fists\",\n        \"fisty\",\n        \"fitch\",\n        \"fitly\",\n        \"fitna\",\n        \"fitte\",\n        \"fitts\",\n        \"fiver\",\n        \"fives\",\n        \"fixed\",\n        \"fixes\",\n        \"fixit\",\n        \"fjeld\",\n        \"flabs\",\n        \"flaff\",\n        \"flags\",\n        \"flaks\",\n        \"flamm\",\n        \"flams\",\n        \"flamy\",\n        \"flane\",\n        \"flans\",\n        \"flaps\",\n        \"flary\",\n        \"flats\",\n        \"flava\",\n        \"flawn\",\n        \"flaws\",\n        \"flawy\",\n        \"flaxy\",\n        \"flays\",\n        \"fleam\",\n        \"fleas\",\n        \"fleek\",\n        \"fleer\",\n        \"flees\",\n        \"flegs\",\n        \"fleme\",\n        \"fleur\",\n        \"flews\",\n        \"flexi\",\n        \"flexo\",\n        \"fleys\",\n        \"flics\",\n        \"flied\",\n        \"flies\",\n        \"flimp\",\n        \"flims\",\n        \"flips\",\n        \"flirs\",\n        \"flisk\",\n        \"flite\",\n        \"flits\",\n        \"flitt\",\n        \"flobs\",\n        \"flocs\",\n        \"floes\",\n        \"flogs\",\n        \"flong\",\n        \"flops\",\n        \"flors\",\n        \"flory\",\n        \"flosh\",\n        \"flota\",\n        \"flote\",\n        \"flows\",\n        \"flubs\",\n        \"flued\",\n        \"flues\",\n        \"fluey\",\n        \"fluky\",\n        \"flump\",\n        \"fluor\",\n        \"flurr\",\n        \"fluty\",\n        \"fluyt\",\n        \"flyby\",\n        \"flype\",\n        \"flyte\",\n        \"foals\",\n        \"foams\",\n        \"foehn\",\n        \"fogey\",\n        \"fogie\",\n        \"fogle\",\n        \"fogou\",\n        \"fohns\",\n        \"foids\",\n        \"foils\",\n        \"foins\",\n        \"folds\",\n        \"foley\",\n        \"folia\",\n        \"folic\",\n        \"folie\",\n        \"folks\",\n        \"folky\",\n        \"fomes\",\n        \"fonda\",\n        \"fonds\",\n        \"fondu\",\n        \"fones\",\n        \"fonly\",\n        \"fonts\",\n        \"foods\",\n        \"foody\",\n        \"fools\",\n        \"foots\",\n        \"footy\",\n        \"foram\",\n        \"forbs\",\n        \"forby\",\n        \"fordo\",\n        \"fords\",\n        \"forel\",\n        \"fores\",\n        \"forex\",\n        \"forks\",\n        \"forky\",\n        \"forme\",\n        \"forms\",\n        \"forts\",\n        \"forza\",\n        \"forze\",\n        \"fossa\",\n        \"fosse\",\n        \"fouat\",\n        \"fouds\",\n        \"fouer\",\n        \"fouet\",\n        \"foule\",\n        \"fouls\",\n        \"fount\",\n        \"fours\",\n        \"fouth\",\n        \"fovea\",\n        \"fowls\",\n        \"fowth\",\n        \"foxed\",\n        \"foxes\",\n        \"foxie\",\n        \"foyle\",\n        \"foyne\",\n        \"frabs\",\n        \"frack\",\n        \"fract\",\n        \"frags\",\n        \"fraim\",\n        \"franc\",\n        \"frape\",\n        \"fraps\",\n        \"frass\",\n        \"frate\",\n        \"frati\",\n        \"frats\",\n        \"fraus\",\n        \"frays\",\n        \"frees\",\n        \"freet\",\n        \"freit\",\n        \"fremd\",\n        \"frena\",\n        \"freon\",\n        \"frere\",\n        \"frets\",\n        \"fribs\",\n        \"frier\",\n        \"fries\",\n        \"frigs\",\n        \"frise\",\n        \"frist\",\n        \"frith\",\n        \"frits\",\n        \"fritt\",\n        \"frize\",\n        \"frizz\",\n        \"froes\",\n        \"frogs\",\n        \"frons\",\n        \"frore\",\n        \"frorn\",\n        \"frory\",\n        \"frosh\",\n        \"frows\",\n        \"frowy\",\n        \"frugs\",\n        \"frump\",\n        \"frush\",\n        \"frust\",\n        \"fryer\",\n        \"fubar\",\n        \"fubby\",\n        \"fubsy\",\n        \"fucks\",\n        \"fucus\",\n        \"fuddy\",\n        \"fudgy\",\n        \"fuels\",\n        \"fuero\",\n        \"fuffs\",\n        \"fuffy\",\n        \"fugal\",\n        \"fuggy\",\n        \"fugie\",\n        \"fugio\",\n        \"fugle\",\n        \"fugly\",\n        \"fugus\",\n        \"fujis\",\n        \"fulls\",\n        \"fumed\",\n        \"fumer\",\n        \"fumes\",\n        \"fumet\",\n        \"fundi\",\n        \"funds\",\n        \"fundy\",\n        \"fungo\",\n        \"fungs\",\n        \"funks\",\n        \"fural\",\n        \"furan\",\n        \"furca\",\n        \"furls\",\n        \"furol\",\n        \"furrs\",\n        \"furth\",\n        \"furze\",\n        \"furzy\",\n        \"fused\",\n        \"fusee\",\n        \"fusel\",\n        \"fuses\",\n        \"fusil\",\n        \"fusks\",\n        \"fusts\",\n        \"fusty\",\n        \"futon\",\n        \"fuzed\",\n        \"fuzee\",\n        \"fuzes\",\n        \"fuzil\",\n        \"fyces\",\n        \"fyked\",\n        \"fykes\",\n        \"fyles\",\n        \"fyrds\",\n        \"fytte\",\n        \"gabba\",\n        \"gabby\",\n        \"gable\",\n        \"gaddi\",\n        \"gades\",\n        \"gadge\",\n        \"gadid\",\n        \"gadis\",\n        \"gadje\",\n        \"gadjo\",\n        \"gadso\",\n        \"gaffs\",\n        \"gaged\",\n        \"gager\",\n        \"gages\",\n        \"gaids\",\n        \"gains\",\n        \"gairs\",\n        \"gaita\",\n        \"gaits\",\n        \"gaitt\",\n        \"gajos\",\n        \"galah\",\n        \"galas\",\n        \"galax\",\n        \"galea\",\n        \"galed\",\n        \"gales\",\n        \"galls\",\n        \"gally\",\n        \"galop\",\n        \"galut\",\n        \"galvo\",\n        \"gamas\",\n        \"gamay\",\n        \"gamba\",\n        \"gambe\",\n        \"gambo\",\n        \"gambs\",\n        \"gamed\",\n        \"games\",\n        \"gamey\",\n        \"gamic\",\n        \"gamin\",\n        \"gamme\",\n        \"gammy\",\n        \"gamps\",\n        \"ganch\",\n        \"gandy\",\n        \"ganef\",\n        \"ganev\",\n        \"gangs\",\n        \"ganja\",\n        \"ganof\",\n        \"gants\",\n        \"gaols\",\n        \"gaped\",\n        \"gaper\",\n        \"gapes\",\n        \"gapos\",\n        \"gappy\",\n        \"garbe\",\n        \"garbo\",\n        \"garbs\",\n        \"garda\",\n        \"gares\",\n        \"garis\",\n        \"garms\",\n        \"garni\",\n        \"garre\",\n        \"garth\",\n        \"garum\",\n        \"gases\",\n        \"gasps\",\n        \"gaspy\",\n        \"gasts\",\n        \"gatch\",\n        \"gated\",\n        \"gater\",\n        \"gates\",\n        \"gaths\",\n        \"gator\",\n        \"gauch\",\n        \"gaucy\",\n        \"gauds\",\n        \"gauje\",\n        \"gault\",\n        \"gaums\",\n        \"gaumy\",\n        \"gaups\",\n        \"gaurs\",\n        \"gauss\",\n        \"gauzy\",\n        \"gavot\",\n        \"gawcy\",\n        \"gawds\",\n        \"gawks\",\n        \"gawps\",\n        \"gawsy\",\n        \"gayal\",\n        \"gazal\",\n        \"gazar\",\n        \"gazed\",\n        \"gazes\",\n        \"gazon\",\n        \"gazoo\",\n        \"geals\",\n        \"geans\",\n        \"geare\",\n        \"gears\",\n        \"geats\",\n        \"gebur\",\n        \"gecks\",\n        \"geeks\",\n        \"geeps\",\n        \"geest\",\n        \"geist\",\n        \"geits\",\n        \"gelds\",\n        \"gelee\",\n        \"gelid\",\n        \"gelly\",\n        \"gelts\",\n        \"gemel\",\n        \"gemma\",\n        \"gemmy\",\n        \"gemot\",\n        \"genal\",\n        \"genas\",\n        \"genes\",\n        \"genet\",\n        \"genic\",\n        \"genii\",\n        \"genip\",\n        \"genny\",\n        \"genoa\",\n        \"genom\",\n        \"genro\",\n        \"gents\",\n        \"genty\",\n        \"genua\",\n        \"genus\",\n        \"geode\",\n        \"geoid\",\n        \"gerah\",\n        \"gerbe\",\n        \"geres\",\n        \"gerle\",\n        \"germs\",\n        \"germy\",\n        \"gerne\",\n        \"gesse\",\n        \"gesso\",\n        \"geste\",\n        \"gests\",\n        \"getas\",\n        \"getup\",\n        \"geums\",\n        \"geyan\",\n        \"geyer\",\n        \"ghast\",\n        \"ghats\",\n        \"ghaut\",\n        \"ghazi\",\n        \"ghees\",\n        \"ghest\",\n        \"ghyll\",\n        \"gibed\",\n        \"gibel\",\n        \"giber\",\n        \"gibes\",\n        \"gibli\",\n        \"gibus\",\n        \"gifts\",\n        \"gigas\",\n        \"gighe\",\n        \"gigot\",\n        \"gigue\",\n        \"gilas\",\n        \"gilds\",\n        \"gilet\",\n        \"gills\",\n        \"gilly\",\n        \"gilpy\",\n        \"gilts\",\n        \"gimel\",\n        \"gimme\",\n        \"gimps\",\n        \"gimpy\",\n        \"ginch\",\n        \"ginge\",\n        \"gings\",\n        \"ginks\",\n        \"ginny\",\n        \"ginzo\",\n        \"gipon\",\n        \"gippo\",\n        \"gippy\",\n        \"girds\",\n        \"girls\",\n        \"girns\",\n        \"giron\",\n        \"giros\",\n        \"girrs\",\n        \"girsh\",\n        \"girts\",\n        \"gismo\",\n        \"gisms\",\n        \"gists\",\n        \"gitch\",\n        \"gites\",\n        \"giust\",\n        \"gived\",\n        \"gives\",\n        \"gizmo\",\n        \"glace\",\n        \"glads\",\n        \"glady\",\n        \"glaik\",\n        \"glair\",\n        \"glams\",\n        \"glans\",\n        \"glary\",\n        \"glaum\",\n        \"glaur\",\n        \"glazy\",\n        \"gleba\",\n        \"glebe\",\n        \"gleby\",\n        \"glede\",\n        \"gleds\",\n        \"gleed\",\n        \"gleek\",\n        \"glees\",\n        \"gleet\",\n        \"gleis\",\n        \"glens\",\n        \"glent\",\n        \"gleys\",\n        \"glial\",\n        \"glias\",\n        \"glibs\",\n        \"gliff\",\n        \"glift\",\n        \"glike\",\n        \"glime\",\n        \"glims\",\n        \"glisk\",\n        \"glits\",\n        \"glitz\",\n        \"gloam\",\n        \"globi\",\n        \"globs\",\n        \"globy\",\n        \"glode\",\n        \"glogg\",\n        \"gloms\",\n        \"gloop\",\n        \"glops\",\n        \"glost\",\n        \"glout\",\n        \"glows\",\n        \"gloze\",\n        \"glued\",\n        \"gluer\",\n        \"glues\",\n        \"gluey\",\n        \"glugs\",\n        \"glume\",\n        \"glums\",\n        \"gluon\",\n        \"glute\",\n        \"gluts\",\n        \"gnarl\",\n        \"gnarr\",\n        \"gnars\",\n        \"gnats\",\n        \"gnawn\",\n        \"gnaws\",\n        \"gnows\",\n        \"goads\",\n        \"goafs\",\n        \"goals\",\n        \"goary\",\n        \"goats\",\n        \"goaty\",\n        \"goban\",\n        \"gobar\",\n        \"gobbi\",\n        \"gobbo\",\n        \"gobby\",\n        \"gobis\",\n        \"gobos\",\n        \"godet\",\n        \"godso\",\n        \"goels\",\n        \"goers\",\n        \"goest\",\n        \"goeth\",\n        \"goety\",\n        \"gofer\",\n        \"goffs\",\n        \"gogga\",\n        \"gogos\",\n        \"goier\",\n        \"gojis\",\n        \"golds\",\n        \"goldy\",\n        \"goles\",\n        \"golfs\",\n        \"golpe\",\n        \"golps\",\n        \"gombo\",\n        \"gomer\",\n        \"gompa\",\n        \"gonch\",\n        \"gonef\",\n        \"gongs\",\n        \"gonia\",\n        \"gonif\",\n        \"gonks\",\n        \"gonna\",\n        \"gonof\",\n        \"gonys\",\n        \"gonzo\",\n        \"gooby\",\n        \"goods\",\n        \"goofs\",\n        \"googs\",\n        \"gooks\",\n        \"gooky\",\n        \"goold\",\n        \"gools\",\n        \"gooly\",\n        \"goons\",\n        \"goony\",\n        \"goops\",\n        \"goopy\",\n        \"goors\",\n        \"goory\",\n        \"goosy\",\n        \"gopak\",\n        \"gopik\",\n        \"goral\",\n        \"goras\",\n        \"gored\",\n        \"gores\",\n        \"goris\",\n        \"gorms\",\n        \"gormy\",\n        \"gorps\",\n        \"gorse\",\n        \"gorsy\",\n        \"gosht\",\n        \"gosse\",\n        \"gotch\",\n        \"goths\",\n        \"gothy\",\n        \"gotta\",\n        \"gouch\",\n        \"gouks\",\n        \"goura\",\n        \"gouts\",\n        \"gouty\",\n        \"gowan\",\n        \"gowds\",\n        \"gowfs\",\n        \"gowks\",\n        \"gowls\",\n        \"gowns\",\n        \"goxes\",\n        \"goyim\",\n        \"goyle\",\n        \"graal\",\n        \"grabs\",\n        \"grads\",\n        \"graff\",\n        \"graip\",\n        \"grama\",\n        \"grame\",\n        \"gramp\",\n        \"grams\",\n        \"grana\",\n        \"grans\",\n        \"grapy\",\n        \"gravs\",\n        \"grays\",\n        \"grebe\",\n        \"grebo\",\n        \"grece\",\n        \"greek\",\n        \"grees\",\n        \"grege\",\n        \"grego\",\n        \"grein\",\n        \"grens\",\n        \"grese\",\n        \"greve\",\n        \"grews\",\n        \"greys\",\n        \"grice\",\n        \"gride\",\n        \"grids\",\n        \"griff\",\n        \"grift\",\n        \"grigs\",\n        \"grike\",\n        \"grins\",\n        \"griot\",\n        \"grips\",\n        \"gript\",\n        \"gripy\",\n        \"grise\",\n        \"grist\",\n        \"grisy\",\n        \"grith\",\n        \"grits\",\n        \"grize\",\n        \"groat\",\n        \"grody\",\n        \"grogs\",\n        \"groks\",\n        \"groma\",\n        \"grone\",\n        \"groof\",\n        \"grosz\",\n        \"grots\",\n        \"grouf\",\n        \"grovy\",\n        \"grows\",\n        \"grrls\",\n        \"grrrl\",\n        \"grubs\",\n        \"grued\",\n        \"grues\",\n        \"grufe\",\n        \"grume\",\n        \"grump\",\n        \"grund\",\n        \"gryce\",\n        \"gryde\",\n        \"gryke\",\n        \"grype\",\n        \"grypt\",\n        \"guaco\",\n        \"guana\",\n        \"guano\",\n        \"guans\",\n        \"guars\",\n        \"gucks\",\n        \"gucky\",\n        \"gudes\",\n        \"guffs\",\n        \"gugas\",\n        \"guids\",\n        \"guimp\",\n        \"guiro\",\n        \"gulag\",\n        \"gular\",\n        \"gulas\",\n        \"gules\",\n        \"gulet\",\n        \"gulfs\",\n        \"gulfy\",\n        \"gulls\",\n        \"gulph\",\n        \"gulps\",\n        \"gulpy\",\n        \"gumma\",\n        \"gummi\",\n        \"gumps\",\n        \"gundy\",\n        \"gunge\",\n        \"gungy\",\n        \"gunks\",\n        \"gunky\",\n        \"gunny\",\n        \"guqin\",\n        \"gurdy\",\n        \"gurge\",\n        \"gurls\",\n        \"gurly\",\n        \"gurns\",\n        \"gurry\",\n        \"gursh\",\n        \"gurus\",\n        \"gushy\",\n        \"gusla\",\n        \"gusle\",\n        \"gusli\",\n        \"gussy\",\n        \"gusts\",\n        \"gutsy\",\n        \"gutta\",\n        \"gutty\",\n        \"guyed\",\n        \"guyle\",\n        \"guyot\",\n        \"guyse\",\n        \"gwine\",\n        \"gyals\",\n        \"gyans\",\n        \"gybed\",\n        \"gybes\",\n        \"gyeld\",\n        \"gymps\",\n        \"gynae\",\n        \"gynie\",\n        \"gynny\",\n        \"gynos\",\n        \"gyoza\",\n        \"gypos\",\n        \"gyppo\",\n        \"gyppy\",\n        \"gyral\",\n        \"gyred\",\n        \"gyres\",\n        \"gyron\",\n        \"gyros\",\n        \"gyrus\",\n        \"gytes\",\n        \"gyved\",\n        \"gyves\",\n        \"haafs\",\n        \"haars\",\n        \"hable\",\n        \"habus\",\n        \"hacek\",\n        \"hacks\",\n        \"hadal\",\n        \"haded\",\n        \"hades\",\n        \"hadji\",\n        \"hadst\",\n        \"haems\",\n        \"haets\",\n        \"haffs\",\n        \"hafiz\",\n        \"hafts\",\n        \"haggs\",\n        \"hahas\",\n        \"haick\",\n        \"haika\",\n        \"haiks\",\n        \"haiku\",\n        \"hails\",\n        \"haily\",\n        \"hains\",\n        \"haint\",\n        \"hairs\",\n        \"haith\",\n        \"hajes\",\n        \"hajis\",\n        \"hajji\",\n        \"hakam\",\n        \"hakas\",\n        \"hakea\",\n        \"hakes\",\n        \"hakim\",\n        \"hakus\",\n        \"halal\",\n        \"haled\",\n        \"haler\",\n        \"hales\",\n        \"halfa\",\n        \"halfs\",\n        \"halid\",\n        \"hallo\",\n        \"halls\",\n        \"halma\",\n        \"halms\",\n        \"halon\",\n        \"halos\",\n        \"halse\",\n        \"halts\",\n        \"halva\",\n        \"halwa\",\n        \"hamal\",\n        \"hamba\",\n        \"hamed\",\n        \"hames\",\n        \"hammy\",\n        \"hamza\",\n        \"hanap\",\n        \"hance\",\n        \"hanch\",\n        \"hands\",\n        \"hangi\",\n        \"hangs\",\n        \"hanks\",\n        \"hanky\",\n        \"hansa\",\n        \"hanse\",\n        \"hants\",\n        \"haole\",\n        \"haoma\",\n        \"hapax\",\n        \"haply\",\n        \"happi\",\n        \"hapus\",\n        \"haram\",\n        \"hards\",\n        \"hared\",\n        \"hares\",\n        \"harim\",\n        \"harks\",\n        \"harls\",\n        \"harms\",\n        \"harns\",\n        \"haros\",\n        \"harps\",\n        \"harts\",\n        \"hashy\",\n        \"hasks\",\n        \"hasps\",\n        \"hasta\",\n        \"hated\",\n        \"hates\",\n        \"hatha\",\n        \"hauds\",\n        \"haufs\",\n        \"haugh\",\n        \"hauld\",\n        \"haulm\",\n        \"hauls\",\n        \"hault\",\n        \"hauns\",\n        \"hause\",\n        \"haver\",\n        \"haves\",\n        \"hawed\",\n        \"hawks\",\n        \"hawms\",\n        \"hawse\",\n        \"hayed\",\n        \"hayer\",\n        \"hayey\",\n        \"hayle\",\n        \"hazan\",\n        \"hazed\",\n        \"hazer\",\n        \"hazes\",\n        \"heads\",\n        \"heald\",\n        \"heals\",\n        \"heame\",\n        \"heaps\",\n        \"heapy\",\n        \"heare\",\n        \"hears\",\n        \"heast\",\n        \"heats\",\n        \"heben\",\n        \"hebes\",\n        \"hecht\",\n        \"hecks\",\n        \"heder\",\n        \"hedgy\",\n        \"heeds\",\n        \"heedy\",\n        \"heels\",\n        \"heeze\",\n        \"hefte\",\n        \"hefts\",\n        \"heids\",\n        \"heigh\",\n        \"heils\",\n        \"heirs\",\n        \"hejab\",\n        \"hejra\",\n        \"heled\",\n        \"heles\",\n        \"helio\",\n        \"hells\",\n        \"helms\",\n        \"helos\",\n        \"helot\",\n        \"helps\",\n        \"helve\",\n        \"hemal\",\n        \"hemes\",\n        \"hemic\",\n        \"hemin\",\n        \"hemps\",\n        \"hempy\",\n        \"hench\",\n        \"hends\",\n        \"henge\",\n        \"henna\",\n        \"henny\",\n        \"henry\",\n        \"hents\",\n        \"hepar\",\n        \"herbs\",\n        \"herby\",\n        \"herds\",\n        \"heres\",\n        \"herls\",\n        \"herma\",\n        \"herms\",\n        \"herns\",\n        \"heros\",\n        \"herry\",\n        \"herse\",\n        \"hertz\",\n        \"herye\",\n        \"hesps\",\n        \"hests\",\n        \"hetes\",\n        \"heths\",\n        \"heuch\",\n        \"heugh\",\n        \"hevea\",\n        \"hewed\",\n        \"hewer\",\n        \"hewgh\",\n        \"hexad\",\n        \"hexed\",\n        \"hexer\",\n        \"hexes\",\n        \"hexyl\",\n        \"heyed\",\n        \"hiant\",\n        \"hicks\",\n        \"hided\",\n        \"hider\",\n        \"hides\",\n        \"hiems\",\n        \"highs\",\n        \"hight\",\n        \"hijab\",\n        \"hijra\",\n        \"hiked\",\n        \"hiker\",\n        \"hikes\",\n        \"hikoi\",\n        \"hilar\",\n        \"hilch\",\n        \"hillo\",\n        \"hills\",\n        \"hilts\",\n        \"hilum\",\n        \"hilus\",\n        \"himbo\",\n        \"hinau\",\n        \"hinds\",\n        \"hings\",\n        \"hinky\",\n        \"hinny\",\n        \"hints\",\n        \"hiois\",\n        \"hiply\",\n        \"hired\",\n        \"hiree\",\n        \"hirer\",\n        \"hires\",\n        \"hissy\",\n        \"hists\",\n        \"hithe\",\n        \"hived\",\n        \"hiver\",\n        \"hives\",\n        \"hizen\",\n        \"hoaed\",\n        \"hoagy\",\n        \"hoars\",\n        \"hoary\",\n        \"hoast\",\n        \"hobos\",\n        \"hocks\",\n        \"hocus\",\n        \"hodad\",\n        \"hodja\",\n        \"hoers\",\n        \"hogan\",\n        \"hogen\",\n        \"hoggs\",\n        \"hoghs\",\n        \"hohed\",\n        \"hoick\",\n        \"hoied\",\n        \"hoiks\",\n        \"hoing\",\n        \"hoise\",\n        \"hokas\",\n        \"hoked\",\n        \"hokes\",\n        \"hokey\",\n        \"hokis\",\n        \"hokku\",\n        \"hokum\",\n        \"holds\",\n        \"holed\",\n        \"holes\",\n        \"holey\",\n        \"holks\",\n        \"holla\",\n        \"hollo\",\n        \"holme\",\n        \"holms\",\n        \"holon\",\n        \"holos\",\n        \"holts\",\n        \"homas\",\n        \"homed\",\n        \"homes\",\n        \"homey\",\n        \"homie\",\n        \"homme\",\n        \"homos\",\n        \"honan\",\n        \"honda\",\n        \"honds\",\n        \"honed\",\n        \"honer\",\n        \"hones\",\n        \"hongi\",\n        \"hongs\",\n        \"honks\",\n        \"honky\",\n        \"hooch\",\n        \"hoods\",\n        \"hoody\",\n        \"hooey\",\n        \"hoofs\",\n        \"hooka\",\n        \"hooks\",\n        \"hooky\",\n        \"hooly\",\n        \"hoons\",\n        \"hoops\",\n        \"hoord\",\n        \"hoors\",\n        \"hoosh\",\n        \"hoots\",\n        \"hooty\",\n        \"hoove\",\n        \"hopak\",\n        \"hoped\",\n        \"hoper\",\n        \"hopes\",\n        \"hoppy\",\n        \"horah\",\n        \"horal\",\n        \"horas\",\n        \"horis\",\n        \"horks\",\n        \"horme\",\n        \"horns\",\n        \"horst\",\n        \"horsy\",\n        \"hosed\",\n        \"hosel\",\n        \"hosen\",\n        \"hoser\",\n        \"hoses\",\n        \"hosey\",\n        \"hosta\",\n        \"hosts\",\n        \"hotch\",\n        \"hoten\",\n        \"hotty\",\n        \"houff\",\n        \"houfs\",\n        \"hough\",\n        \"houri\",\n        \"hours\",\n        \"houts\",\n        \"hovea\",\n        \"hoved\",\n        \"hoven\",\n        \"hoves\",\n        \"howbe\",\n        \"howes\",\n        \"howff\",\n        \"howfs\",\n        \"howks\",\n        \"howls\",\n        \"howre\",\n        \"howso\",\n        \"hoxed\",\n        \"hoxes\",\n        \"hoyas\",\n        \"hoyed\",\n        \"hoyle\",\n        \"hubby\",\n        \"hucks\",\n        \"hudna\",\n        \"hudud\",\n        \"huers\",\n        \"huffs\",\n        \"huffy\",\n        \"huger\",\n        \"huggy\",\n        \"huhus\",\n        \"huias\",\n        \"hulas\",\n        \"hules\",\n        \"hulks\",\n        \"hulky\",\n        \"hullo\",\n        \"hulls\",\n        \"hully\",\n        \"humas\",\n        \"humfs\",\n        \"humic\",\n        \"humps\",\n        \"humpy\",\n        \"hunks\",\n        \"hunts\",\n        \"hurds\",\n        \"hurls\",\n        \"hurly\",\n        \"hurra\",\n        \"hurst\",\n        \"hurts\",\n        \"hushy\",\n        \"husks\",\n        \"husos\",\n        \"hutia\",\n        \"huzza\",\n        \"huzzy\",\n        \"hwyls\",\n        \"hydra\",\n        \"hyens\",\n        \"hygge\",\n        \"hying\",\n        \"hykes\",\n        \"hylas\",\n        \"hyleg\",\n        \"hyles\",\n        \"hylic\",\n        \"hymns\",\n        \"hynde\",\n        \"hyoid\",\n        \"hyped\",\n        \"hypes\",\n        \"hypha\",\n        \"hyphy\",\n        \"hypos\",\n        \"hyrax\",\n        \"hyson\",\n        \"hythe\",\n        \"iambi\",\n        \"iambs\",\n        \"ibrik\",\n        \"icers\",\n        \"iched\",\n        \"iches\",\n        \"ichor\",\n        \"icier\",\n        \"icker\",\n        \"ickle\",\n        \"icons\",\n        \"ictal\",\n        \"ictic\",\n        \"ictus\",\n        \"idant\",\n        \"ideas\",\n        \"idees\",\n        \"ident\",\n        \"idled\",\n        \"idles\",\n        \"idola\",\n        \"idols\",\n        \"idyls\",\n        \"iftar\",\n        \"igapo\",\n        \"igged\",\n        \"iglus\",\n        \"ihram\",\n        \"ikans\",\n        \"ikats\",\n        \"ikons\",\n        \"ileac\",\n        \"ileal\",\n        \"ileum\",\n        \"ileus\",\n        \"iliad\",\n        \"ilial\",\n        \"ilium\",\n        \"iller\",\n        \"illth\",\n        \"imago\",\n        \"imams\",\n        \"imari\",\n        \"imaum\",\n        \"imbar\",\n        \"imbed\",\n        \"imide\",\n        \"imido\",\n        \"imids\",\n        \"imine\",\n        \"imino\",\n        \"immew\",\n        \"immit\",\n        \"immix\",\n        \"imped\",\n        \"impis\",\n        \"impot\",\n        \"impro\",\n        \"imshi\",\n        \"imshy\",\n        \"inapt\",\n        \"inarm\",\n        \"inbye\",\n        \"incel\",\n        \"incle\",\n        \"incog\",\n        \"incus\",\n        \"incut\",\n        \"indew\",\n        \"india\",\n        \"indie\",\n        \"indol\",\n        \"indow\",\n        \"indri\",\n        \"indue\",\n        \"inerm\",\n        \"infix\",\n        \"infos\",\n        \"infra\",\n        \"ingan\",\n        \"ingle\",\n        \"inion\",\n        \"inked\",\n        \"inker\",\n        \"inkle\",\n        \"inned\",\n        \"innit\",\n        \"inorb\",\n        \"inrun\",\n        \"inset\",\n        \"inspo\",\n        \"intel\",\n        \"intil\",\n        \"intis\",\n        \"intra\",\n        \"inula\",\n        \"inure\",\n        \"inurn\",\n        \"inust\",\n        \"invar\",\n        \"inwit\",\n        \"iodic\",\n        \"iodid\",\n        \"iodin\",\n        \"iotas\",\n        \"ippon\",\n        \"irade\",\n        \"irids\",\n        \"iring\",\n        \"irked\",\n        \"iroko\",\n        \"irone\",\n        \"irons\",\n        \"isbas\",\n        \"ishes\",\n        \"isled\",\n        \"isles\",\n        \"isnae\",\n        \"issei\",\n        \"istle\",\n        \"items\",\n        \"ither\",\n        \"ivied\",\n        \"ivies\",\n        \"ixias\",\n        \"ixnay\",\n        \"ixora\",\n        \"ixtle\",\n        \"izard\",\n        \"izars\",\n        \"izzat\",\n        \"jaaps\",\n        \"jabot\",\n        \"jacal\",\n        \"jacks\",\n        \"jacky\",\n        \"jaded\",\n        \"jades\",\n        \"jafas\",\n        \"jaffa\",\n        \"jagas\",\n        \"jager\",\n        \"jaggs\",\n        \"jaggy\",\n        \"jagir\",\n        \"jagra\",\n        \"jails\",\n        \"jaker\",\n        \"jakes\",\n        \"jakey\",\n        \"jalap\",\n        \"jalop\",\n        \"jambe\",\n        \"jambo\",\n        \"jambs\",\n        \"jambu\",\n        \"james\",\n        \"jammy\",\n        \"jamon\",\n        \"janes\",\n        \"janns\",\n        \"janny\",\n        \"janty\",\n        \"japan\",\n        \"japed\",\n        \"japer\",\n        \"japes\",\n        \"jarks\",\n        \"jarls\",\n        \"jarps\",\n        \"jarta\",\n        \"jarul\",\n        \"jasey\",\n        \"jaspe\",\n        \"jasps\",\n        \"jatos\",\n        \"jauks\",\n        \"jaups\",\n        \"javas\",\n        \"javel\",\n        \"jawan\",\n        \"jawed\",\n        \"jaxie\",\n        \"jeans\",\n        \"jeats\",\n        \"jebel\",\n        \"jedis\",\n        \"jeels\",\n        \"jeely\",\n        \"jeeps\",\n        \"jeers\",\n        \"jeeze\",\n        \"jefes\",\n        \"jeffs\",\n        \"jehad\",\n        \"jehus\",\n        \"jelab\",\n        \"jello\",\n        \"jells\",\n        \"jembe\",\n        \"jemmy\",\n        \"jenny\",\n        \"jeons\",\n        \"jerid\",\n        \"jerks\",\n        \"jerry\",\n        \"jesse\",\n        \"jests\",\n        \"jesus\",\n        \"jetes\",\n        \"jeton\",\n        \"jeune\",\n        \"jewed\",\n        \"jewie\",\n        \"jhala\",\n        \"jiaos\",\n        \"jibba\",\n        \"jibbs\",\n        \"jibed\",\n        \"jiber\",\n        \"jibes\",\n        \"jiffs\",\n        \"jiggy\",\n        \"jigot\",\n        \"jihad\",\n        \"jills\",\n        \"jilts\",\n        \"jimmy\",\n        \"jimpy\",\n        \"jingo\",\n        \"jinks\",\n        \"jinne\",\n        \"jinni\",\n        \"jinns\",\n        \"jirds\",\n        \"jirga\",\n        \"jirre\",\n        \"jisms\",\n        \"jived\",\n        \"jiver\",\n        \"jives\",\n        \"jivey\",\n        \"jnana\",\n        \"jobed\",\n        \"jobes\",\n        \"jocko\",\n        \"jocks\",\n        \"jocky\",\n        \"jocos\",\n        \"jodel\",\n        \"joeys\",\n        \"johns\",\n        \"joins\",\n        \"joked\",\n        \"jokes\",\n        \"jokey\",\n        \"jokol\",\n        \"joled\",\n        \"joles\",\n        \"jolls\",\n        \"jolts\",\n        \"jolty\",\n        \"jomon\",\n        \"jomos\",\n        \"jones\",\n        \"jongs\",\n        \"jonty\",\n        \"jooks\",\n        \"joram\",\n        \"jorum\",\n        \"jotas\",\n        \"jotty\",\n        \"jotun\",\n        \"joual\",\n        \"jougs\",\n        \"jouks\",\n        \"joule\",\n        \"jours\",\n        \"jowar\",\n        \"jowed\",\n        \"jowls\",\n        \"jowly\",\n        \"joyed\",\n        \"jubas\",\n        \"jubes\",\n        \"jucos\",\n        \"judas\",\n        \"judgy\",\n        \"judos\",\n        \"jugal\",\n        \"jugum\",\n        \"jujus\",\n        \"juked\",\n        \"jukes\",\n        \"jukus\",\n        \"julep\",\n        \"jumar\",\n        \"jumby\",\n        \"jumps\",\n        \"junco\",\n        \"junks\",\n        \"junky\",\n        \"jupes\",\n        \"jupon\",\n        \"jural\",\n        \"jurat\",\n        \"jurel\",\n        \"jures\",\n        \"justs\",\n        \"jutes\",\n        \"jutty\",\n        \"juves\",\n        \"juvie\",\n        \"kaama\",\n        \"kabab\",\n        \"kabar\",\n        \"kabob\",\n        \"kacha\",\n        \"kacks\",\n        \"kadai\",\n        \"kades\",\n        \"kadis\",\n        \"kafir\",\n        \"kagos\",\n        \"kagus\",\n        \"kahal\",\n        \"kaiak\",\n        \"kaids\",\n        \"kaies\",\n        \"kaifs\",\n        \"kaika\",\n        \"kaiks\",\n        \"kails\",\n        \"kaims\",\n        \"kaing\",\n        \"kains\",\n        \"kakas\",\n        \"kakis\",\n        \"kalam\",\n        \"kales\",\n        \"kalif\",\n        \"kalis\",\n        \"kalpa\",\n        \"kamas\",\n        \"kames\",\n        \"kamik\",\n        \"kamis\",\n        \"kamme\",\n        \"kanae\",\n        \"kanas\",\n        \"kandy\",\n        \"kaneh\",\n        \"kanes\",\n        \"kanga\",\n        \"kangs\",\n        \"kanji\",\n        \"kants\",\n        \"kanzu\",\n        \"kaons\",\n        \"kapas\",\n        \"kaphs\",\n        \"kapok\",\n        \"kapow\",\n        \"kapus\",\n        \"kaput\",\n        \"karas\",\n        \"karat\",\n        \"karks\",\n        \"karns\",\n        \"karoo\",\n        \"karos\",\n        \"karri\",\n        \"karst\",\n        \"karsy\",\n        \"karts\",\n        \"karzy\",\n        \"kasha\",\n        \"kasme\",\n        \"katal\",\n        \"katas\",\n        \"katis\",\n        \"katti\",\n        \"kaugh\",\n        \"kauri\",\n        \"kauru\",\n        \"kaury\",\n        \"kaval\",\n        \"kavas\",\n        \"kawas\",\n        \"kawau\",\n        \"kawed\",\n        \"kayle\",\n        \"kayos\",\n        \"kazis\",\n        \"kazoo\",\n        \"kbars\",\n        \"kebar\",\n        \"kebob\",\n        \"kecks\",\n        \"kedge\",\n        \"kedgy\",\n        \"keech\",\n        \"keefs\",\n        \"keeks\",\n        \"keels\",\n        \"keema\",\n        \"keeno\",\n        \"keens\",\n        \"keeps\",\n        \"keets\",\n        \"keeve\",\n        \"kefir\",\n        \"kehua\",\n        \"keirs\",\n        \"kelep\",\n        \"kelim\",\n        \"kells\",\n        \"kelly\",\n        \"kelps\",\n        \"kelpy\",\n        \"kelts\",\n        \"kelty\",\n        \"kembo\",\n        \"kembs\",\n        \"kemps\",\n        \"kempt\",\n        \"kempy\",\n        \"kenaf\",\n        \"kench\",\n        \"kendo\",\n        \"kenos\",\n        \"kente\",\n        \"kents\",\n        \"kepis\",\n        \"kerbs\",\n        \"kerel\",\n        \"kerfs\",\n        \"kerky\",\n        \"kerma\",\n        \"kerne\",\n        \"kerns\",\n        \"keros\",\n        \"kerry\",\n        \"kerve\",\n        \"kesar\",\n        \"kests\",\n        \"ketas\",\n        \"ketch\",\n        \"ketes\",\n        \"ketol\",\n        \"kevel\",\n        \"kevil\",\n        \"kexes\",\n        \"keyed\",\n        \"keyer\",\n        \"khadi\",\n        \"khafs\",\n        \"khans\",\n        \"khaph\",\n        \"khats\",\n        \"khaya\",\n        \"khazi\",\n        \"kheda\",\n        \"kheth\",\n        \"khets\",\n        \"khoja\",\n        \"khors\",\n        \"khoum\",\n        \"khuds\",\n        \"kiaat\",\n        \"kiack\",\n        \"kiang\",\n        \"kibbe\",\n        \"kibbi\",\n        \"kibei\",\n        \"kibes\",\n        \"kibla\",\n        \"kicks\",\n        \"kicky\",\n        \"kiddo\",\n        \"kiddy\",\n        \"kidel\",\n        \"kidge\",\n        \"kiefs\",\n        \"kiers\",\n        \"kieve\",\n        \"kievs\",\n        \"kight\",\n        \"kikes\",\n        \"kikoi\",\n        \"kiley\",\n        \"kilim\",\n        \"kills\",\n        \"kilns\",\n        \"kilos\",\n        \"kilps\",\n        \"kilts\",\n        \"kilty\",\n        \"kimbo\",\n        \"kinas\",\n        \"kinda\",\n        \"kinds\",\n        \"kindy\",\n        \"kines\",\n        \"kings\",\n        \"kinin\",\n        \"kinks\",\n        \"kinos\",\n        \"kiore\",\n        \"kipes\",\n        \"kippa\",\n        \"kipps\",\n        \"kirby\",\n        \"kirks\",\n        \"kirns\",\n        \"kirri\",\n        \"kisan\",\n        \"kissy\",\n        \"kists\",\n        \"kited\",\n        \"kiter\",\n        \"kites\",\n        \"kithe\",\n        \"kiths\",\n        \"kitul\",\n        \"kivas\",\n        \"kiwis\",\n        \"klang\",\n        \"klaps\",\n        \"klett\",\n        \"klick\",\n        \"klieg\",\n        \"kliks\",\n        \"klong\",\n        \"kloof\",\n        \"kluge\",\n        \"klutz\",\n        \"knags\",\n        \"knaps\",\n        \"knarl\",\n        \"knars\",\n        \"knaur\",\n        \"knawe\",\n        \"knees\",\n        \"knell\",\n        \"knish\",\n        \"knits\",\n        \"knive\",\n        \"knobs\",\n        \"knops\",\n        \"knosp\",\n        \"knots\",\n        \"knout\",\n        \"knowe\",\n        \"knows\",\n        \"knubs\",\n        \"knurl\",\n        \"knurr\",\n        \"knurs\",\n        \"knuts\",\n        \"koans\",\n        \"koaps\",\n        \"koban\",\n        \"kobos\",\n        \"koels\",\n        \"koffs\",\n        \"kofta\",\n        \"kogal\",\n        \"kohas\",\n        \"kohen\",\n        \"kohls\",\n        \"koine\",\n        \"kojis\",\n        \"kokam\",\n        \"kokas\",\n        \"koker\",\n        \"kokra\",\n        \"kokum\",\n        \"kolas\",\n        \"kolos\",\n        \"kombu\",\n        \"konbu\",\n        \"kondo\",\n        \"konks\",\n        \"kooks\",\n        \"kooky\",\n        \"koori\",\n        \"kopek\",\n        \"kophs\",\n        \"kopje\",\n        \"koppa\",\n        \"korai\",\n        \"koras\",\n        \"korat\",\n        \"kores\",\n        \"korma\",\n        \"koros\",\n        \"korun\",\n        \"korus\",\n        \"koses\",\n        \"kotch\",\n        \"kotos\",\n        \"kotow\",\n        \"koura\",\n        \"kraal\",\n        \"krabs\",\n        \"kraft\",\n        \"krais\",\n        \"krait\",\n        \"krang\",\n        \"krans\",\n        \"kranz\",\n        \"kraut\",\n        \"krays\",\n        \"kreep\",\n        \"kreng\",\n        \"krewe\",\n        \"krona\",\n        \"krone\",\n        \"kroon\",\n        \"krubi\",\n        \"krunk\",\n        \"ksars\",\n        \"kubie\",\n        \"kudos\",\n        \"kudus\",\n        \"kudzu\",\n        \"kufis\",\n        \"kugel\",\n        \"kuias\",\n        \"kukri\",\n        \"kukus\",\n        \"kulak\",\n        \"kulan\",\n        \"kulas\",\n        \"kulfi\",\n        \"kumis\",\n        \"kumys\",\n        \"kuris\",\n        \"kurre\",\n        \"kurta\",\n        \"kurus\",\n        \"kusso\",\n        \"kutas\",\n        \"kutch\",\n        \"kutis\",\n        \"kutus\",\n        \"kuzus\",\n        \"kvass\",\n        \"kvell\",\n        \"kwela\",\n        \"kyack\",\n        \"kyaks\",\n        \"kyang\",\n        \"kyars\",\n        \"kyats\",\n        \"kybos\",\n        \"kydst\",\n        \"kyles\",\n        \"kylie\",\n        \"kylin\",\n        \"kylix\",\n        \"kyloe\",\n        \"kynde\",\n        \"kynds\",\n        \"kypes\",\n        \"kyrie\",\n        \"kytes\",\n        \"kythe\",\n        \"laari\",\n        \"labda\",\n        \"labia\",\n        \"labis\",\n        \"labra\",\n        \"laced\",\n        \"lacer\",\n        \"laces\",\n        \"lacet\",\n        \"lacey\",\n        \"lacks\",\n        \"laddy\",\n        \"laded\",\n        \"lader\",\n        \"lades\",\n        \"laers\",\n        \"laevo\",\n        \"lagan\",\n        \"lahal\",\n        \"lahar\",\n        \"laich\",\n        \"laics\",\n        \"laids\",\n        \"laigh\",\n        \"laika\",\n        \"laiks\",\n        \"laird\",\n        \"lairs\",\n        \"lairy\",\n        \"laith\",\n        \"laity\",\n        \"laked\",\n        \"laker\",\n        \"lakes\",\n        \"lakhs\",\n        \"lakin\",\n        \"laksa\",\n        \"laldy\",\n        \"lalls\",\n        \"lamas\",\n        \"lambs\",\n        \"lamby\",\n        \"lamed\",\n        \"lamer\",\n        \"lames\",\n        \"lamia\",\n        \"lammy\",\n        \"lamps\",\n        \"lanai\",\n        \"lanas\",\n        \"lanch\",\n        \"lande\",\n        \"lands\",\n        \"lanes\",\n        \"lanks\",\n        \"lants\",\n        \"lapin\",\n        \"lapis\",\n        \"lapje\",\n        \"larch\",\n        \"lards\",\n        \"lardy\",\n        \"laree\",\n        \"lares\",\n        \"largo\",\n        \"laris\",\n        \"larks\",\n        \"larky\",\n        \"larns\",\n        \"larnt\",\n        \"larum\",\n        \"lased\",\n        \"laser\",\n        \"lases\",\n        \"lassi\",\n        \"lassu\",\n        \"lassy\",\n        \"lasts\",\n        \"latah\",\n        \"lated\",\n        \"laten\",\n        \"latex\",\n        \"lathi\",\n        \"laths\",\n        \"lathy\",\n        \"latke\",\n        \"latus\",\n        \"lauan\",\n        \"lauch\",\n        \"lauds\",\n        \"laufs\",\n        \"laund\",\n        \"laura\",\n        \"laval\",\n        \"lavas\",\n        \"laved\",\n        \"laver\",\n        \"laves\",\n        \"lavra\",\n        \"lavvy\",\n        \"lawed\",\n        \"lawer\",\n        \"lawin\",\n        \"lawks\",\n        \"lawns\",\n        \"lawny\",\n        \"laxed\",\n        \"laxer\",\n        \"laxes\",\n        \"laxly\",\n        \"layed\",\n        \"layin\",\n        \"layup\",\n        \"lazar\",\n        \"lazed\",\n        \"lazes\",\n        \"lazos\",\n        \"lazzi\",\n        \"lazzo\",\n        \"leads\",\n        \"leady\",\n        \"leafs\",\n        \"leaks\",\n        \"leams\",\n        \"leans\",\n        \"leany\",\n        \"leaps\",\n        \"leare\",\n        \"lears\",\n        \"leary\",\n        \"leats\",\n        \"leavy\",\n        \"leaze\",\n        \"leben\",\n        \"leccy\",\n        \"ledes\",\n        \"ledgy\",\n        \"ledum\",\n        \"leear\",\n        \"leeks\",\n        \"leeps\",\n        \"leers\",\n        \"leese\",\n        \"leets\",\n        \"leeze\",\n        \"lefte\",\n        \"lefts\",\n        \"leger\",\n        \"leges\",\n        \"legge\",\n        \"leggo\",\n        \"legit\",\n        \"lehrs\",\n        \"lehua\",\n        \"leirs\",\n        \"leish\",\n        \"leman\",\n        \"lemed\",\n        \"lemel\",\n        \"lemes\",\n        \"lemma\",\n        \"lemme\",\n        \"lends\",\n        \"lenes\",\n        \"lengs\",\n        \"lenis\",\n        \"lenos\",\n        \"lense\",\n        \"lenti\",\n        \"lento\",\n        \"leone\",\n        \"lepid\",\n        \"lepra\",\n        \"lepta\",\n        \"lered\",\n        \"leres\",\n        \"lerps\",\n        \"lesbo\",\n        \"leses\",\n        \"lests\",\n        \"letch\",\n        \"lethe\",\n        \"letup\",\n        \"leuch\",\n        \"leuco\",\n        \"leuds\",\n        \"leugh\",\n        \"levas\",\n        \"levee\",\n        \"leves\",\n        \"levin\",\n        \"levis\",\n        \"lewis\",\n        \"lexes\",\n        \"lexis\",\n        \"lezes\",\n        \"lezza\",\n        \"lezzy\",\n        \"liana\",\n        \"liane\",\n        \"liang\",\n        \"liard\",\n        \"liars\",\n        \"liart\",\n        \"liber\",\n        \"libra\",\n        \"libri\",\n        \"lichi\",\n        \"licht\",\n        \"licit\",\n        \"licks\",\n        \"lidar\",\n        \"lidos\",\n        \"liefs\",\n        \"liens\",\n        \"liers\",\n        \"lieus\",\n        \"lieve\",\n        \"lifer\",\n        \"lifes\",\n        \"lifts\",\n        \"ligan\",\n        \"liger\",\n        \"ligge\",\n        \"ligne\",\n        \"liked\",\n        \"liker\",\n        \"likes\",\n        \"likin\",\n        \"lills\",\n        \"lilos\",\n        \"lilts\",\n        \"liman\",\n        \"limas\",\n        \"limax\",\n        \"limba\",\n        \"limbi\",\n        \"limbs\",\n        \"limby\",\n        \"limed\",\n        \"limen\",\n        \"limes\",\n        \"limey\",\n        \"limma\",\n        \"limns\",\n        \"limos\",\n        \"limpa\",\n        \"limps\",\n        \"linac\",\n        \"linch\",\n        \"linds\",\n        \"lindy\",\n        \"lined\",\n        \"lines\",\n        \"liney\",\n        \"linga\",\n        \"lings\",\n        \"lingy\",\n        \"linin\",\n        \"links\",\n        \"linky\",\n        \"linns\",\n        \"linny\",\n        \"linos\",\n        \"lints\",\n        \"linty\",\n        \"linum\",\n        \"linux\",\n        \"lions\",\n        \"lipas\",\n        \"lipes\",\n        \"lipin\",\n        \"lipos\",\n        \"lippy\",\n        \"liras\",\n        \"lirks\",\n        \"lirot\",\n        \"lisks\",\n        \"lisle\",\n        \"lisps\",\n        \"lists\",\n        \"litai\",\n        \"litas\",\n        \"lited\",\n        \"liter\",\n        \"lites\",\n        \"litho\",\n        \"liths\",\n        \"litre\",\n        \"lived\",\n        \"liven\",\n        \"lives\",\n        \"livor\",\n        \"livre\",\n        \"llano\",\n        \"loach\",\n        \"loads\",\n        \"loafs\",\n        \"loams\",\n        \"loans\",\n        \"loast\",\n        \"loave\",\n        \"lobar\",\n        \"lobed\",\n        \"lobes\",\n        \"lobos\",\n        \"lobus\",\n        \"loche\",\n        \"lochs\",\n        \"locie\",\n        \"locis\",\n        \"locks\",\n        \"locos\",\n        \"locum\",\n        \"loden\",\n        \"lodes\",\n        \"loess\",\n        \"lofts\",\n        \"logan\",\n        \"loges\",\n        \"loggy\",\n        \"logia\",\n        \"logie\",\n        \"logoi\",\n        \"logon\",\n        \"logos\",\n        \"lohan\",\n        \"loids\",\n        \"loins\",\n        \"loipe\",\n        \"loirs\",\n        \"lokes\",\n        \"lolls\",\n        \"lolly\",\n        \"lolog\",\n        \"lomas\",\n        \"lomed\",\n        \"lomes\",\n        \"loner\",\n        \"longa\",\n        \"longe\",\n        \"longs\",\n        \"looby\",\n        \"looed\",\n        \"looey\",\n        \"loofa\",\n        \"loofs\",\n        \"looie\",\n        \"looks\",\n        \"looky\",\n        \"looms\",\n        \"loons\",\n        \"loony\",\n        \"loops\",\n        \"loord\",\n        \"loots\",\n        \"loped\",\n        \"loper\",\n        \"lopes\",\n        \"loppy\",\n        \"loral\",\n        \"loran\",\n        \"lords\",\n        \"lordy\",\n        \"lorel\",\n        \"lores\",\n        \"loric\",\n        \"loris\",\n        \"losed\",\n        \"losel\",\n        \"losen\",\n        \"loses\",\n        \"lossy\",\n        \"lotah\",\n        \"lotas\",\n        \"lotes\",\n        \"lotic\",\n        \"lotos\",\n        \"lotsa\",\n        \"lotta\",\n        \"lotte\",\n        \"lotto\",\n        \"lotus\",\n        \"loued\",\n        \"lough\",\n        \"louie\",\n        \"louis\",\n        \"louma\",\n        \"lound\",\n        \"louns\",\n        \"loupe\",\n        \"loups\",\n        \"loure\",\n        \"lours\",\n        \"loury\",\n        \"louts\",\n        \"lovat\",\n        \"loved\",\n        \"loves\",\n        \"lovey\",\n        \"lovie\",\n        \"lowan\",\n        \"lowed\",\n        \"lowes\",\n        \"lownd\",\n        \"lowne\",\n        \"lowns\",\n        \"lowps\",\n        \"lowry\",\n        \"lowse\",\n        \"lowts\",\n        \"loxed\",\n        \"loxes\",\n        \"lozen\",\n        \"luach\",\n        \"luaus\",\n        \"lubed\",\n        \"lubes\",\n        \"lubra\",\n        \"luces\",\n        \"lucks\",\n        \"lucre\",\n        \"ludes\",\n        \"ludic\",\n        \"ludos\",\n        \"luffa\",\n        \"luffs\",\n        \"luged\",\n        \"luger\",\n        \"luges\",\n        \"lulls\",\n        \"lulus\",\n        \"lumas\",\n        \"lumbi\",\n        \"lumme\",\n        \"lummy\",\n        \"lumps\",\n        \"lunas\",\n        \"lunes\",\n        \"lunet\",\n        \"lungi\",\n        \"lungs\",\n        \"lunks\",\n        \"lunts\",\n        \"lupin\",\n        \"lured\",\n        \"lurer\",\n        \"lures\",\n        \"lurex\",\n        \"lurgi\",\n        \"lurgy\",\n        \"lurks\",\n        \"lurry\",\n        \"lurve\",\n        \"luser\",\n        \"lushy\",\n        \"lusks\",\n        \"lusts\",\n        \"lusus\",\n        \"lutea\",\n        \"luted\",\n        \"luter\",\n        \"lutes\",\n        \"luvvy\",\n        \"luxed\",\n        \"luxer\",\n        \"luxes\",\n        \"lweis\",\n        \"lyams\",\n        \"lyard\",\n        \"lyart\",\n        \"lyase\",\n        \"lycea\",\n        \"lycee\",\n        \"lycra\",\n        \"lymes\",\n        \"lynes\",\n        \"lyres\",\n        \"lysed\",\n        \"lyses\",\n        \"lysin\",\n        \"lysis\",\n        \"lysol\",\n        \"lyssa\",\n        \"lyted\",\n        \"lytes\",\n        \"lythe\",\n        \"lytic\",\n        \"lytta\",\n        \"maaed\",\n        \"maare\",\n        \"maars\",\n        \"mabes\",\n        \"macas\",\n        \"maced\",\n        \"macer\",\n        \"maces\",\n        \"mache\",\n        \"machi\",\n        \"machs\",\n        \"macks\",\n        \"macle\",\n        \"macon\",\n        \"madge\",\n        \"madid\",\n        \"madre\",\n        \"maerl\",\n        \"mafic\",\n        \"mages\",\n        \"maggs\",\n        \"magot\",\n        \"magus\",\n        \"mahoe\",\n        \"mahua\",\n        \"mahwa\",\n        \"maids\",\n        \"maiko\",\n        \"maiks\",\n        \"maile\",\n        \"maill\",\n        \"mails\",\n        \"maims\",\n        \"mains\",\n        \"maire\",\n        \"mairs\",\n        \"maise\",\n        \"maist\",\n        \"makar\",\n        \"makes\",\n        \"makis\",\n        \"makos\",\n        \"malam\",\n        \"malar\",\n        \"malas\",\n        \"malax\",\n        \"males\",\n        \"malic\",\n        \"malik\",\n        \"malis\",\n        \"malls\",\n        \"malms\",\n        \"malmy\",\n        \"malts\",\n        \"malty\",\n        \"malus\",\n        \"malva\",\n        \"malwa\",\n        \"mamas\",\n        \"mamba\",\n        \"mamee\",\n        \"mamey\",\n        \"mamie\",\n        \"manas\",\n        \"manat\",\n        \"mandi\",\n        \"maneb\",\n        \"maned\",\n        \"maneh\",\n        \"manes\",\n        \"manet\",\n        \"mangs\",\n        \"manis\",\n        \"manky\",\n        \"manna\",\n        \"manos\",\n        \"manse\",\n        \"manta\",\n        \"manto\",\n        \"manty\",\n        \"manul\",\n        \"manus\",\n        \"mapau\",\n        \"maqui\",\n        \"marae\",\n        \"marah\",\n        \"maras\",\n        \"marcs\",\n        \"mardy\",\n        \"mares\",\n        \"marge\",\n        \"margs\",\n        \"maria\",\n        \"marid\",\n        \"marka\",\n        \"marks\",\n        \"marle\",\n        \"marls\",\n        \"marly\",\n        \"marms\",\n        \"maron\",\n        \"maror\",\n        \"marra\",\n        \"marri\",\n        \"marse\",\n        \"marts\",\n        \"marvy\",\n        \"masas\",\n        \"mased\",\n        \"maser\",\n        \"mases\",\n        \"mashy\",\n        \"masks\",\n        \"massa\",\n        \"massy\",\n        \"masts\",\n        \"masty\",\n        \"masus\",\n        \"matai\",\n        \"mated\",\n        \"mater\",\n        \"mates\",\n        \"maths\",\n        \"matin\",\n        \"matlo\",\n        \"matte\",\n        \"matts\",\n        \"matza\",\n        \"matzo\",\n        \"mauby\",\n        \"mauds\",\n        \"mauls\",\n        \"maund\",\n        \"mauri\",\n        \"mausy\",\n        \"mauts\",\n        \"mauzy\",\n        \"maven\",\n        \"mavie\",\n        \"mavin\",\n        \"mavis\",\n        \"mawed\",\n        \"mawks\",\n        \"mawky\",\n        \"mawns\",\n        \"mawrs\",\n        \"maxed\",\n        \"maxes\",\n        \"maxis\",\n        \"mayan\",\n        \"mayas\",\n        \"mayed\",\n        \"mayos\",\n        \"mayst\",\n        \"mazed\",\n        \"mazer\",\n        \"mazes\",\n        \"mazey\",\n        \"mazut\",\n        \"mbira\",\n        \"meads\",\n        \"meals\",\n        \"meane\",\n        \"means\",\n        \"meany\",\n        \"meare\",\n        \"mease\",\n        \"meath\",\n        \"meats\",\n        \"mebos\",\n        \"mechs\",\n        \"mecks\",\n        \"medii\",\n        \"medle\",\n        \"meeds\",\n        \"meers\",\n        \"meets\",\n        \"meffs\",\n        \"meins\",\n        \"meint\",\n        \"meiny\",\n        \"meith\",\n        \"mekka\",\n        \"melas\",\n        \"melba\",\n        \"melds\",\n        \"melic\",\n        \"melik\",\n        \"mells\",\n        \"melts\",\n        \"melty\",\n        \"memes\",\n        \"memos\",\n        \"menad\",\n        \"mends\",\n        \"mened\",\n        \"menes\",\n        \"menge\",\n        \"mengs\",\n        \"mensa\",\n        \"mense\",\n        \"mensh\",\n        \"menta\",\n        \"mento\",\n        \"menus\",\n        \"meous\",\n        \"meows\",\n        \"merch\",\n        \"mercs\",\n        \"merde\",\n        \"mered\",\n        \"merel\",\n        \"merer\",\n        \"meres\",\n        \"meril\",\n        \"meris\",\n        \"merks\",\n        \"merle\",\n        \"merls\",\n        \"merse\",\n        \"mesal\",\n        \"mesas\",\n        \"mesel\",\n        \"meses\",\n        \"meshy\",\n        \"mesic\",\n        \"mesne\",\n        \"meson\",\n        \"messy\",\n        \"mesto\",\n        \"meted\",\n        \"metes\",\n        \"metho\",\n        \"meths\",\n        \"metic\",\n        \"metif\",\n        \"metis\",\n        \"metol\",\n        \"metre\",\n        \"meuse\",\n        \"meved\",\n        \"meves\",\n        \"mewed\",\n        \"mewls\",\n        \"meynt\",\n        \"mezes\",\n        \"mezze\",\n        \"mezzo\",\n        \"mhorr\",\n        \"miaou\",\n        \"miaow\",\n        \"miasm\",\n        \"miaul\",\n        \"micas\",\n        \"miche\",\n        \"micht\",\n        \"micks\",\n        \"micky\",\n        \"micos\",\n        \"micra\",\n        \"middy\",\n        \"midgy\",\n        \"midis\",\n        \"miens\",\n        \"mieve\",\n        \"miffs\",\n        \"miffy\",\n        \"mifty\",\n        \"miggs\",\n        \"mihas\",\n        \"mihis\",\n        \"miked\",\n        \"mikes\",\n        \"mikra\",\n        \"mikva\",\n        \"milch\",\n        \"milds\",\n        \"miler\",\n        \"miles\",\n        \"milfs\",\n        \"milia\",\n        \"milko\",\n        \"milks\",\n        \"mille\",\n        \"mills\",\n        \"milor\",\n        \"milos\",\n        \"milpa\",\n        \"milts\",\n        \"milty\",\n        \"miltz\",\n        \"mimed\",\n        \"mimeo\",\n        \"mimer\",\n        \"mimes\",\n        \"mimsy\",\n        \"minae\",\n        \"minar\",\n        \"minas\",\n        \"mincy\",\n        \"minds\",\n        \"mined\",\n        \"mines\",\n        \"minge\",\n        \"mings\",\n        \"mingy\",\n        \"minis\",\n        \"minke\",\n        \"minks\",\n        \"minny\",\n        \"minos\",\n        \"mints\",\n        \"mired\",\n        \"mires\",\n        \"mirex\",\n        \"mirid\",\n        \"mirin\",\n        \"mirks\",\n        \"mirky\",\n        \"mirly\",\n        \"miros\",\n        \"mirvs\",\n        \"mirza\",\n        \"misch\",\n        \"misdo\",\n        \"mises\",\n        \"misgo\",\n        \"misos\",\n        \"missa\",\n        \"mists\",\n        \"misty\",\n        \"mitch\",\n        \"miter\",\n        \"mites\",\n        \"mitis\",\n        \"mitre\",\n        \"mitts\",\n        \"mixed\",\n        \"mixen\",\n        \"mixer\",\n        \"mixes\",\n        \"mixte\",\n        \"mixup\",\n        \"mizen\",\n        \"mizzy\",\n        \"mneme\",\n        \"moans\",\n        \"moats\",\n        \"mobby\",\n        \"mobes\",\n        \"mobey\",\n        \"mobie\",\n        \"moble\",\n        \"mochi\",\n        \"mochs\",\n        \"mochy\",\n        \"mocks\",\n        \"moder\",\n        \"modes\",\n        \"modge\",\n        \"modii\",\n        \"modus\",\n        \"moers\",\n        \"mofos\",\n        \"moggy\",\n        \"mohel\",\n        \"mohos\",\n        \"mohrs\",\n        \"mohua\",\n        \"mohur\",\n        \"moile\",\n        \"moils\",\n        \"moira\",\n        \"moire\",\n        \"moits\",\n        \"mojos\",\n        \"mokes\",\n        \"mokis\",\n        \"mokos\",\n        \"molal\",\n        \"molas\",\n        \"molds\",\n        \"moled\",\n        \"moles\",\n        \"molla\",\n        \"molls\",\n        \"molly\",\n        \"molto\",\n        \"molts\",\n        \"molys\",\n        \"momes\",\n        \"momma\",\n        \"mommy\",\n        \"momus\",\n        \"monad\",\n        \"monal\",\n        \"monas\",\n        \"monde\",\n        \"mondo\",\n        \"moner\",\n        \"mongo\",\n        \"mongs\",\n        \"monic\",\n        \"monie\",\n        \"monks\",\n        \"monos\",\n        \"monte\",\n        \"monty\",\n        \"moobs\",\n        \"mooch\",\n        \"moods\",\n        \"mooed\",\n        \"mooks\",\n        \"moola\",\n        \"mooli\",\n        \"mools\",\n        \"mooly\",\n        \"moong\",\n        \"moons\",\n        \"moony\",\n        \"moops\",\n        \"moors\",\n        \"moory\",\n        \"moots\",\n        \"moove\",\n        \"moped\",\n        \"moper\",\n        \"mopes\",\n        \"mopey\",\n        \"moppy\",\n        \"mopsy\",\n        \"mopus\",\n        \"morae\",\n        \"moras\",\n        \"morat\",\n        \"moray\",\n        \"morel\",\n        \"mores\",\n        \"moria\",\n        \"morne\",\n        \"morns\",\n        \"morra\",\n        \"morro\",\n        \"morse\",\n        \"morts\",\n        \"mosed\",\n        \"moses\",\n        \"mosey\",\n        \"mosks\",\n        \"mosso\",\n        \"moste\",\n        \"mosts\",\n        \"moted\",\n        \"moten\",\n        \"motes\",\n        \"motet\",\n        \"motey\",\n        \"moths\",\n        \"mothy\",\n        \"motis\",\n        \"motte\",\n        \"motts\",\n        \"motty\",\n        \"motus\",\n        \"motza\",\n        \"mouch\",\n        \"moues\",\n        \"mould\",\n        \"mouls\",\n        \"moups\",\n        \"moust\",\n        \"mousy\",\n        \"moved\",\n        \"moves\",\n        \"mowas\",\n        \"mowed\",\n        \"mowra\",\n        \"moxas\",\n        \"moxie\",\n        \"moyas\",\n        \"moyle\",\n        \"moyls\",\n        \"mozed\",\n        \"mozes\",\n        \"mozos\",\n        \"mpret\",\n        \"mucho\",\n        \"mucic\",\n        \"mucid\",\n        \"mucin\",\n        \"mucks\",\n        \"mucor\",\n        \"mucro\",\n        \"mudge\",\n        \"mudir\",\n        \"mudra\",\n        \"muffs\",\n        \"mufti\",\n        \"mugga\",\n        \"muggs\",\n        \"muggy\",\n        \"muhly\",\n        \"muids\",\n        \"muils\",\n        \"muirs\",\n        \"muist\",\n        \"mujik\",\n        \"mulct\",\n        \"muled\",\n        \"mules\",\n        \"muley\",\n        \"mulga\",\n        \"mulie\",\n        \"mulla\",\n        \"mulls\",\n        \"mulse\",\n        \"mulsh\",\n        \"mumms\",\n        \"mumps\",\n        \"mumsy\",\n        \"mumus\",\n        \"munga\",\n        \"munge\",\n        \"mungo\",\n        \"mungs\",\n        \"munis\",\n        \"munts\",\n        \"muntu\",\n        \"muons\",\n        \"muras\",\n        \"mured\",\n        \"mures\",\n        \"murex\",\n        \"murid\",\n        \"murks\",\n        \"murls\",\n        \"murly\",\n        \"murra\",\n        \"murre\",\n        \"murri\",\n        \"murrs\",\n        \"murry\",\n        \"murti\",\n        \"murva\",\n        \"musar\",\n        \"musca\",\n        \"mused\",\n        \"muser\",\n        \"muses\",\n        \"muset\",\n        \"musha\",\n        \"musit\",\n        \"musks\",\n        \"musos\",\n        \"musse\",\n        \"mussy\",\n        \"musth\",\n        \"musts\",\n        \"mutch\",\n        \"muted\",\n        \"muter\",\n        \"mutes\",\n        \"mutha\",\n        \"mutis\",\n        \"muton\",\n        \"mutts\",\n        \"muxed\",\n        \"muxes\",\n        \"muzak\",\n        \"muzzy\",\n        \"mvule\",\n        \"myall\",\n        \"mylar\",\n        \"mynah\",\n        \"mynas\",\n        \"myoid\",\n        \"myoma\",\n        \"myope\",\n        \"myops\",\n        \"myopy\",\n        \"mysid\",\n        \"mythi\",\n        \"myths\",\n        \"mythy\",\n        \"myxos\",\n        \"mzees\",\n        \"naams\",\n        \"naans\",\n        \"nabes\",\n        \"nabis\",\n        \"nabks\",\n        \"nabla\",\n        \"nabob\",\n        \"nache\",\n        \"nacho\",\n        \"nacre\",\n        \"nadas\",\n        \"naeve\",\n        \"naevi\",\n        \"naffs\",\n        \"nagas\",\n        \"naggy\",\n        \"nagor\",\n        \"nahal\",\n        \"naiad\",\n        \"naifs\",\n        \"naiks\",\n        \"nails\",\n        \"naira\",\n        \"nairu\",\n        \"naked\",\n        \"naker\",\n        \"nakfa\",\n        \"nalas\",\n        \"naled\",\n        \"nalla\",\n        \"named\",\n        \"namer\",\n        \"names\",\n        \"namma\",\n        \"namus\",\n        \"nanas\",\n        \"nance\",\n        \"nancy\",\n        \"nandu\",\n        \"nanna\",\n        \"nanos\",\n        \"nanua\",\n        \"napas\",\n        \"naped\",\n        \"napes\",\n        \"napoo\",\n        \"nappa\",\n        \"nappe\",\n        \"nappy\",\n        \"naras\",\n        \"narco\",\n        \"narcs\",\n        \"nards\",\n        \"nares\",\n        \"naric\",\n        \"naris\",\n        \"narks\",\n        \"narky\",\n        \"narre\",\n        \"nashi\",\n        \"natch\",\n        \"nates\",\n        \"natis\",\n        \"natty\",\n        \"nauch\",\n        \"naunt\",\n        \"navar\",\n        \"naves\",\n        \"navew\",\n        \"navvy\",\n        \"nawab\",\n        \"nazes\",\n        \"nazir\",\n        \"nazis\",\n        \"nduja\",\n        \"neafe\",\n        \"neals\",\n        \"neaps\",\n        \"nears\",\n        \"neath\",\n        \"neats\",\n        \"nebek\",\n        \"nebel\",\n        \"necks\",\n        \"neddy\",\n        \"needs\",\n        \"neeld\",\n        \"neele\",\n        \"neemb\",\n        \"neems\",\n        \"neeps\",\n        \"neese\",\n        \"neeze\",\n        \"negro\",\n        \"negus\",\n        \"neifs\",\n        \"neist\",\n        \"neive\",\n        \"nelis\",\n        \"nelly\",\n        \"nemas\",\n        \"nemns\",\n        \"nempt\",\n        \"nenes\",\n        \"neons\",\n        \"neper\",\n        \"nepit\",\n        \"neral\",\n        \"nerds\",\n        \"nerka\",\n        \"nerks\",\n        \"nerol\",\n        \"nerts\",\n        \"nertz\",\n        \"nervy\",\n        \"nests\",\n        \"netes\",\n        \"netop\",\n        \"netts\",\n        \"netty\",\n        \"neuks\",\n        \"neume\",\n        \"neums\",\n        \"nevel\",\n        \"neves\",\n        \"nevus\",\n        \"newbs\",\n        \"newed\",\n        \"newel\",\n        \"newie\",\n        \"newsy\",\n        \"newts\",\n        \"nexts\",\n        \"nexus\",\n        \"ngaio\",\n        \"ngana\",\n        \"ngati\",\n        \"ngoma\",\n        \"ngwee\",\n        \"nicad\",\n        \"nicht\",\n        \"nicks\",\n        \"nicol\",\n        \"nidal\",\n        \"nided\",\n        \"nides\",\n        \"nidor\",\n        \"nidus\",\n        \"niefs\",\n        \"nieve\",\n        \"nifes\",\n        \"niffs\",\n        \"niffy\",\n        \"nifty\",\n        \"niger\",\n        \"nighs\",\n        \"nihil\",\n        \"nikab\",\n        \"nikah\",\n        \"nikau\",\n        \"nills\",\n        \"nimbi\",\n        \"nimbs\",\n        \"nimps\",\n        \"niner\",\n        \"nines\",\n        \"ninon\",\n        \"nipas\",\n        \"nippy\",\n        \"niqab\",\n        \"nirls\",\n        \"nirly\",\n        \"nisei\",\n        \"nisse\",\n        \"nisus\",\n        \"niter\",\n        \"nites\",\n        \"nitid\",\n        \"niton\",\n        \"nitre\",\n        \"nitro\",\n        \"nitry\",\n        \"nitty\",\n        \"nival\",\n        \"nixed\",\n        \"nixer\",\n        \"nixes\",\n        \"nixie\",\n        \"nizam\",\n        \"nkosi\",\n        \"noahs\",\n        \"nobby\",\n        \"nocks\",\n        \"nodal\",\n        \"noddy\",\n        \"nodes\",\n        \"nodus\",\n        \"noels\",\n        \"noggs\",\n        \"nohow\",\n        \"noils\",\n        \"noily\",\n        \"noint\",\n        \"noirs\",\n        \"noles\",\n        \"nolls\",\n        \"nolos\",\n        \"nomas\",\n        \"nomen\",\n        \"nomes\",\n        \"nomic\",\n        \"nomoi\",\n        \"nomos\",\n        \"nonas\",\n        \"nonce\",\n        \"nones\",\n        \"nonet\",\n        \"nongs\",\n        \"nonis\",\n        \"nonny\",\n        \"nonyl\",\n        \"noobs\",\n        \"nooit\",\n        \"nooks\",\n        \"nooky\",\n        \"noons\",\n        \"noops\",\n        \"nopal\",\n        \"noria\",\n        \"noris\",\n        \"norks\",\n        \"norma\",\n        \"norms\",\n        \"nosed\",\n        \"noser\",\n        \"noses\",\n        \"notal\",\n        \"noted\",\n        \"noter\",\n        \"notes\",\n        \"notum\",\n        \"nould\",\n        \"noule\",\n        \"nouls\",\n        \"nouns\",\n        \"nouny\",\n        \"noups\",\n        \"novae\",\n        \"novas\",\n        \"novum\",\n        \"noway\",\n        \"nowed\",\n        \"nowls\",\n        \"nowts\",\n        \"nowty\",\n        \"noxal\",\n        \"noxes\",\n        \"noyau\",\n        \"noyed\",\n        \"noyes\",\n        \"nubby\",\n        \"nubia\",\n        \"nucha\",\n        \"nuddy\",\n        \"nuder\",\n        \"nudes\",\n        \"nudie\",\n        \"nudzh\",\n        \"nuffs\",\n        \"nugae\",\n        \"nuked\",\n        \"nukes\",\n        \"nulla\",\n        \"nulls\",\n        \"numbs\",\n        \"numen\",\n        \"nummy\",\n        \"nunny\",\n        \"nurds\",\n        \"nurdy\",\n        \"nurls\",\n        \"nurrs\",\n        \"nutso\",\n        \"nutsy\",\n        \"nyaff\",\n        \"nyala\",\n        \"nying\",\n        \"nyssa\",\n        \"oaked\",\n        \"oaker\",\n        \"oakum\",\n        \"oared\",\n        \"oases\",\n        \"oasis\",\n        \"oasts\",\n        \"oaten\",\n        \"oater\",\n        \"oaths\",\n        \"oaves\",\n        \"obang\",\n        \"obeah\",\n        \"obeli\",\n        \"obeys\",\n        \"obias\",\n        \"obied\",\n        \"obiit\",\n        \"obits\",\n        \"objet\",\n        \"oboes\",\n        \"obole\",\n        \"oboli\",\n        \"obols\",\n        \"occam\",\n        \"ocher\",\n        \"oches\",\n        \"ochre\",\n        \"ochry\",\n        \"ocker\",\n        \"ocrea\",\n        \"octad\",\n        \"octan\",\n        \"octas\",\n        \"octyl\",\n        \"oculi\",\n        \"odahs\",\n        \"odals\",\n        \"odeon\",\n        \"odeum\",\n        \"odism\",\n        \"odist\",\n        \"odium\",\n        \"odors\",\n        \"odour\",\n        \"odyle\",\n        \"odyls\",\n        \"ofays\",\n        \"offed\",\n        \"offie\",\n        \"oflag\",\n        \"ofter\",\n        \"ogams\",\n        \"ogeed\",\n        \"ogees\",\n        \"oggin\",\n        \"ogham\",\n        \"ogive\",\n        \"ogled\",\n        \"ogler\",\n        \"ogles\",\n        \"ogmic\",\n        \"ogres\",\n        \"ohias\",\n        \"ohing\",\n        \"ohmic\",\n        \"ohone\",\n        \"oidia\",\n        \"oiled\",\n        \"oiler\",\n        \"oinks\",\n        \"oints\",\n        \"ojime\",\n        \"okapi\",\n        \"okays\",\n        \"okehs\",\n        \"okras\",\n        \"oktas\",\n        \"oldie\",\n        \"oleic\",\n        \"olein\",\n        \"olent\",\n        \"oleos\",\n        \"oleum\",\n        \"olios\",\n        \"ollas\",\n        \"ollav\",\n        \"oller\",\n        \"ollie\",\n        \"ology\",\n        \"olpae\",\n        \"olpes\",\n        \"omasa\",\n        \"omber\",\n        \"ombus\",\n        \"omens\",\n        \"omers\",\n        \"omits\",\n        \"omlah\",\n        \"omovs\",\n        \"omrah\",\n        \"oncer\",\n        \"onces\",\n        \"oncet\",\n        \"oncus\",\n        \"onely\",\n        \"oners\",\n        \"onery\",\n        \"onium\",\n        \"onkus\",\n        \"onlay\",\n        \"onned\",\n        \"ontic\",\n        \"oobit\",\n        \"oohed\",\n        \"oomph\",\n        \"oonts\",\n        \"ooped\",\n        \"oorie\",\n        \"ooses\",\n        \"ootid\",\n        \"oozed\",\n        \"oozes\",\n        \"opahs\",\n        \"opals\",\n        \"opens\",\n        \"opepe\",\n        \"oping\",\n        \"oppos\",\n        \"opsin\",\n        \"opted\",\n        \"opter\",\n        \"orach\",\n        \"oracy\",\n        \"orals\",\n        \"orang\",\n        \"orant\",\n        \"orate\",\n        \"orbed\",\n        \"orcas\",\n        \"orcin\",\n        \"ordos\",\n        \"oread\",\n        \"orfes\",\n        \"orgia\",\n        \"orgic\",\n        \"orgue\",\n        \"oribi\",\n        \"oriel\",\n        \"orixa\",\n        \"orles\",\n        \"orlon\",\n        \"orlop\",\n        \"ormer\",\n        \"ornis\",\n        \"orpin\",\n        \"orris\",\n        \"ortho\",\n        \"orval\",\n        \"orzos\",\n        \"oscar\",\n        \"oshac\",\n        \"osier\",\n        \"osmic\",\n        \"osmol\",\n        \"ossia\",\n        \"ostia\",\n        \"otaku\",\n        \"otary\",\n        \"ottar\",\n        \"ottos\",\n        \"oubit\",\n        \"oucht\",\n        \"ouens\",\n        \"ouija\",\n        \"oulks\",\n        \"oumas\",\n        \"oundy\",\n        \"oupas\",\n        \"ouped\",\n        \"ouphe\",\n        \"ouphs\",\n        \"ourie\",\n        \"ousel\",\n        \"ousts\",\n        \"outby\",\n        \"outed\",\n        \"outre\",\n        \"outro\",\n        \"outta\",\n        \"ouzel\",\n        \"ouzos\",\n        \"ovals\",\n        \"ovels\",\n        \"ovens\",\n        \"overs\",\n        \"ovist\",\n        \"ovoli\",\n        \"ovolo\",\n        \"ovule\",\n        \"owche\",\n        \"owies\",\n        \"owled\",\n        \"owler\",\n        \"owlet\",\n        \"owned\",\n        \"owres\",\n        \"owrie\",\n        \"owsen\",\n        \"oxbow\",\n        \"oxers\",\n        \"oxeye\",\n        \"oxids\",\n        \"oxies\",\n        \"oxime\",\n        \"oxims\",\n        \"oxlip\",\n        \"oxter\",\n        \"oyers\",\n        \"ozeki\",\n        \"ozzie\",\n        \"paals\",\n        \"paans\",\n        \"pacas\",\n        \"paced\",\n        \"pacer\",\n        \"paces\",\n        \"pacey\",\n        \"pacha\",\n        \"packs\",\n        \"pacos\",\n        \"pacta\",\n        \"pacts\",\n        \"padis\",\n        \"padle\",\n        \"padma\",\n        \"padre\",\n        \"padri\",\n        \"paean\",\n        \"paedo\",\n        \"paeon\",\n        \"paged\",\n        \"pager\",\n        \"pages\",\n        \"pagle\",\n        \"pagod\",\n        \"pagri\",\n        \"paiks\",\n        \"pails\",\n        \"pains\",\n        \"paire\",\n        \"pairs\",\n        \"paisa\",\n        \"paise\",\n        \"pakka\",\n        \"palas\",\n        \"palay\",\n        \"palea\",\n        \"paled\",\n        \"pales\",\n        \"palet\",\n        \"palis\",\n        \"palki\",\n        \"palla\",\n        \"palls\",\n        \"pally\",\n        \"palms\",\n        \"palmy\",\n        \"palpi\",\n        \"palps\",\n        \"palsa\",\n        \"pampa\",\n        \"panax\",\n        \"pance\",\n        \"panda\",\n        \"pands\",\n        \"pandy\",\n        \"paned\",\n        \"panes\",\n        \"panga\",\n        \"pangs\",\n        \"panim\",\n        \"panko\",\n        \"panne\",\n        \"panni\",\n        \"panto\",\n        \"pants\",\n        \"panty\",\n        \"paoli\",\n        \"paolo\",\n        \"papas\",\n        \"papaw\",\n        \"papes\",\n        \"pappi\",\n        \"pappy\",\n        \"parae\",\n        \"paras\",\n        \"parch\",\n        \"pardi\",\n        \"pards\",\n        \"pardy\",\n        \"pared\",\n        \"paren\",\n        \"pareo\",\n        \"pares\",\n        \"pareu\",\n        \"parev\",\n        \"parge\",\n        \"pargo\",\n        \"paris\",\n        \"parki\",\n        \"parks\",\n        \"parky\",\n        \"parle\",\n        \"parly\",\n        \"parma\",\n        \"parol\",\n        \"parps\",\n        \"parra\",\n        \"parrs\",\n        \"parti\",\n        \"parts\",\n        \"parve\",\n        \"parvo\",\n        \"paseo\",\n        \"pases\",\n        \"pasha\",\n        \"pashm\",\n        \"paska\",\n        \"paspy\",\n        \"passe\",\n        \"pasts\",\n        \"pated\",\n        \"paten\",\n        \"pater\",\n        \"pates\",\n        \"paths\",\n        \"patin\",\n        \"patka\",\n        \"patly\",\n        \"patte\",\n        \"patus\",\n        \"pauas\",\n        \"pauls\",\n        \"pavan\",\n        \"paved\",\n        \"paven\",\n        \"paver\",\n        \"paves\",\n        \"pavid\",\n        \"pavin\",\n        \"pavis\",\n        \"pawas\",\n        \"pawaw\",\n        \"pawed\",\n        \"pawer\",\n        \"pawks\",\n        \"pawky\",\n        \"pawls\",\n        \"pawns\",\n        \"paxes\",\n        \"payed\",\n        \"payor\",\n        \"paysd\",\n        \"peage\",\n        \"peags\",\n        \"peaks\",\n        \"peaky\",\n        \"peals\",\n        \"peans\",\n        \"peare\",\n        \"pears\",\n        \"peart\",\n        \"pease\",\n        \"peats\",\n        \"peaty\",\n        \"peavy\",\n        \"peaze\",\n        \"pebas\",\n        \"pechs\",\n        \"pecke\",\n        \"pecks\",\n        \"pecky\",\n        \"pedes\",\n        \"pedis\",\n        \"pedro\",\n        \"peece\",\n        \"peeks\",\n        \"peels\",\n        \"peens\",\n        \"peeoy\",\n        \"peepe\",\n        \"peeps\",\n        \"peers\",\n        \"peery\",\n        \"peeve\",\n        \"peggy\",\n        \"peghs\",\n        \"peins\",\n        \"peise\",\n        \"peize\",\n        \"pekan\",\n        \"pekes\",\n        \"pekin\",\n        \"pekoe\",\n        \"pelas\",\n        \"pelau\",\n        \"peles\",\n        \"pelfs\",\n        \"pells\",\n        \"pelma\",\n        \"pelon\",\n        \"pelta\",\n        \"pelts\",\n        \"pends\",\n        \"pendu\",\n        \"pened\",\n        \"penes\",\n        \"pengo\",\n        \"penie\",\n        \"penis\",\n        \"penks\",\n        \"penna\",\n        \"penni\",\n        \"pents\",\n        \"peons\",\n        \"peony\",\n        \"pepla\",\n        \"pepos\",\n        \"peppy\",\n        \"pepsi\",\n        \"perai\",\n        \"perce\",\n        \"percs\",\n        \"perdu\",\n        \"perdy\",\n        \"perea\",\n        \"peres\",\n        \"peris\",\n        \"perks\",\n        \"perms\",\n        \"perns\",\n        \"perog\",\n        \"perps\",\n        \"perry\",\n        \"perse\",\n        \"perst\",\n        \"perts\",\n        \"perve\",\n        \"pervo\",\n        \"pervs\",\n        \"pervy\",\n        \"pesos\",\n        \"pests\",\n        \"pesty\",\n        \"petar\",\n        \"peter\",\n        \"petit\",\n        \"petre\",\n        \"petri\",\n        \"petti\",\n        \"petto\",\n        \"pewee\",\n        \"pewit\",\n        \"peyse\",\n        \"phage\",\n        \"phang\",\n        \"phare\",\n        \"pharm\",\n        \"pheer\",\n        \"phene\",\n        \"pheon\",\n        \"phese\",\n        \"phial\",\n        \"phish\",\n        \"phizz\",\n        \"phlox\",\n        \"phoca\",\n        \"phono\",\n        \"phons\",\n        \"phots\",\n        \"phpht\",\n        \"phuts\",\n        \"phyla\",\n        \"phyle\",\n        \"piani\",\n        \"pians\",\n        \"pibal\",\n        \"pical\",\n        \"picas\",\n        \"piccy\",\n        \"picks\",\n        \"picot\",\n        \"picra\",\n        \"picul\",\n        \"piend\",\n        \"piers\",\n        \"piert\",\n        \"pieta\",\n        \"piets\",\n        \"piezo\",\n        \"pight\",\n        \"pigmy\",\n        \"piing\",\n        \"pikas\",\n        \"pikau\",\n        \"piked\",\n        \"piker\",\n        \"pikes\",\n        \"pikey\",\n        \"pikis\",\n        \"pikul\",\n        \"pilae\",\n        \"pilaf\",\n        \"pilao\",\n        \"pilar\",\n        \"pilau\",\n        \"pilaw\",\n        \"pilch\",\n        \"pilea\",\n        \"piled\",\n        \"pilei\",\n        \"piler\",\n        \"piles\",\n        \"pilis\",\n        \"pills\",\n        \"pilow\",\n        \"pilum\",\n        \"pilus\",\n        \"pimas\",\n        \"pimps\",\n        \"pinas\",\n        \"pined\",\n        \"pines\",\n        \"pingo\",\n        \"pings\",\n        \"pinko\",\n        \"pinks\",\n        \"pinna\",\n        \"pinny\",\n        \"pinon\",\n        \"pinot\",\n        \"pinta\",\n        \"pints\",\n        \"pinup\",\n        \"pions\",\n        \"piony\",\n        \"pious\",\n        \"pioye\",\n        \"pioys\",\n        \"pipal\",\n        \"pipas\",\n        \"piped\",\n        \"pipes\",\n        \"pipet\",\n        \"pipis\",\n        \"pipit\",\n        \"pippy\",\n        \"pipul\",\n        \"pirai\",\n        \"pirls\",\n        \"pirns\",\n        \"pirog\",\n        \"pisco\",\n        \"pises\",\n        \"pisky\",\n        \"pisos\",\n        \"pissy\",\n        \"piste\",\n        \"pitas\",\n        \"piths\",\n        \"piton\",\n        \"pitot\",\n        \"pitta\",\n        \"piums\",\n        \"pixes\",\n        \"pized\",\n        \"pizes\",\n        \"plaas\",\n        \"plack\",\n        \"plage\",\n        \"plans\",\n        \"plaps\",\n        \"plash\",\n        \"plasm\",\n        \"plast\",\n        \"plats\",\n        \"platt\",\n        \"platy\",\n        \"playa\",\n        \"plays\",\n        \"pleas\",\n        \"plebe\",\n        \"plebs\",\n        \"plena\",\n        \"pleon\",\n        \"plesh\",\n        \"plews\",\n        \"plica\",\n        \"plies\",\n        \"plims\",\n        \"pling\",\n        \"plink\",\n        \"ploat\",\n        \"plods\",\n        \"plong\",\n        \"plonk\",\n        \"plook\",\n        \"plops\",\n        \"plots\",\n        \"plotz\",\n        \"plouk\",\n        \"plows\",\n        \"ploye\",\n        \"ploys\",\n        \"plues\",\n        \"pluff\",\n        \"plugs\",\n        \"plums\",\n        \"plumy\",\n        \"pluot\",\n        \"pluto\",\n        \"plyer\",\n        \"poach\",\n        \"poaka\",\n        \"poake\",\n        \"poboy\",\n        \"pocks\",\n        \"pocky\",\n        \"podal\",\n        \"poddy\",\n        \"podex\",\n        \"podge\",\n        \"podgy\",\n        \"podia\",\n        \"poems\",\n        \"poeps\",\n        \"poets\",\n        \"pogey\",\n        \"pogge\",\n        \"pogos\",\n        \"pohed\",\n        \"poilu\",\n        \"poind\",\n        \"pokal\",\n        \"poked\",\n        \"pokes\",\n        \"pokey\",\n        \"pokie\",\n        \"poled\",\n        \"poler\",\n        \"poles\",\n        \"poley\",\n        \"polio\",\n        \"polis\",\n        \"polje\",\n        \"polks\",\n        \"polls\",\n        \"polly\",\n        \"polos\",\n        \"polts\",\n        \"polys\",\n        \"pombe\",\n        \"pomes\",\n        \"pommy\",\n        \"pomos\",\n        \"pomps\",\n        \"ponce\",\n        \"poncy\",\n        \"ponds\",\n        \"pones\",\n        \"poney\",\n        \"ponga\",\n        \"pongo\",\n        \"pongs\",\n        \"pongy\",\n        \"ponks\",\n        \"ponts\",\n        \"ponty\",\n        \"ponzu\",\n        \"poods\",\n        \"pooed\",\n        \"poofs\",\n        \"poofy\",\n        \"poohs\",\n        \"pooja\",\n        \"pooka\",\n        \"pooks\",\n        \"pools\",\n        \"poons\",\n        \"poops\",\n        \"poopy\",\n        \"poori\",\n        \"poort\",\n        \"poots\",\n        \"poove\",\n        \"poovy\",\n        \"popes\",\n        \"poppa\",\n        \"popsy\",\n        \"porae\",\n        \"poral\",\n        \"pored\",\n        \"porer\",\n        \"pores\",\n        \"porge\",\n        \"porgy\",\n        \"porin\",\n        \"porks\",\n        \"porky\",\n        \"porno\",\n        \"porns\",\n        \"porny\",\n        \"porta\",\n        \"ports\",\n        \"porty\",\n        \"posed\",\n        \"poses\",\n        \"posey\",\n        \"posho\",\n        \"posts\",\n        \"potae\",\n        \"potch\",\n        \"poted\",\n        \"potes\",\n        \"potin\",\n        \"potoo\",\n        \"potsy\",\n        \"potto\",\n        \"potts\",\n        \"potty\",\n        \"pouff\",\n        \"poufs\",\n        \"pouke\",\n        \"pouks\",\n        \"poule\",\n        \"poulp\",\n        \"poult\",\n        \"poupe\",\n        \"poupt\",\n        \"pours\",\n        \"pouts\",\n        \"powan\",\n        \"powin\",\n        \"pownd\",\n        \"powns\",\n        \"powny\",\n        \"powre\",\n        \"poxed\",\n        \"poxes\",\n        \"poynt\",\n        \"poyou\",\n        \"poyse\",\n        \"pozzy\",\n        \"praam\",\n        \"prads\",\n        \"prahu\",\n        \"prams\",\n        \"prana\",\n        \"prang\",\n        \"praos\",\n        \"prase\",\n        \"prate\",\n        \"prats\",\n        \"pratt\",\n        \"praty\",\n        \"praus\",\n        \"prays\",\n        \"predy\",\n        \"preed\",\n        \"prees\",\n        \"preif\",\n        \"prems\",\n        \"premy\",\n        \"prent\",\n        \"preon\",\n        \"preop\",\n        \"preps\",\n        \"presa\",\n        \"prese\",\n        \"prest\",\n        \"preve\",\n        \"prexy\",\n        \"preys\",\n        \"prial\",\n        \"pricy\",\n        \"prief\",\n        \"prier\",\n        \"pries\",\n        \"prigs\",\n        \"prill\",\n        \"prima\",\n        \"primi\",\n        \"primp\",\n        \"prims\",\n        \"primy\",\n        \"prink\",\n        \"prion\",\n        \"prise\",\n        \"priss\",\n        \"proas\",\n        \"probs\",\n        \"prods\",\n        \"proem\",\n        \"profs\",\n        \"progs\",\n        \"proin\",\n        \"proke\",\n        \"prole\",\n        \"proll\",\n        \"promo\",\n        \"proms\",\n        \"pronk\",\n        \"props\",\n        \"prore\",\n        \"proso\",\n        \"pross\",\n        \"prost\",\n        \"prosy\",\n        \"proto\",\n        \"proul\",\n        \"prows\",\n        \"proyn\",\n        \"prunt\",\n        \"pruta\",\n        \"pryer\",\n        \"pryse\",\n        \"pseud\",\n        \"pshaw\",\n        \"psion\",\n        \"psoae\",\n        \"psoai\",\n        \"psoas\",\n        \"psora\",\n        \"psych\",\n        \"psyop\",\n        \"pubco\",\n        \"pubes\",\n        \"pubis\",\n        \"pucan\",\n        \"pucer\",\n        \"puces\",\n        \"pucka\",\n        \"pucks\",\n        \"puddy\",\n        \"pudge\",\n        \"pudic\",\n        \"pudor\",\n        \"pudsy\",\n        \"pudus\",\n        \"puers\",\n        \"puffa\",\n        \"puffs\",\n        \"puggy\",\n        \"pugil\",\n        \"puhas\",\n        \"pujah\",\n        \"pujas\",\n        \"pukas\",\n        \"puked\",\n        \"puker\",\n        \"pukes\",\n        \"pukey\",\n        \"pukka\",\n        \"pukus\",\n        \"pulao\",\n        \"pulas\",\n        \"puled\",\n        \"puler\",\n        \"pules\",\n        \"pulik\",\n        \"pulis\",\n        \"pulka\",\n        \"pulks\",\n        \"pulli\",\n        \"pulls\",\n        \"pully\",\n        \"pulmo\",\n        \"pulps\",\n        \"pulus\",\n        \"pumas\",\n        \"pumie\",\n        \"pumps\",\n        \"punas\",\n        \"punce\",\n        \"punga\",\n        \"pungs\",\n        \"punji\",\n        \"punka\",\n        \"punks\",\n        \"punky\",\n        \"punny\",\n        \"punto\",\n        \"punts\",\n        \"punty\",\n        \"pupae\",\n        \"pupas\",\n        \"pupus\",\n        \"purda\",\n        \"pured\",\n        \"pures\",\n        \"purin\",\n        \"puris\",\n        \"purls\",\n        \"purpy\",\n        \"purrs\",\n        \"pursy\",\n        \"purty\",\n        \"puses\",\n        \"pusle\",\n        \"pussy\",\n        \"putid\",\n        \"puton\",\n        \"putti\",\n        \"putto\",\n        \"putts\",\n        \"puzel\",\n        \"pwned\",\n        \"pyats\",\n        \"pyets\",\n        \"pygal\",\n        \"pyins\",\n        \"pylon\",\n        \"pyned\",\n        \"pynes\",\n        \"pyoid\",\n        \"pyots\",\n        \"pyral\",\n        \"pyran\",\n        \"pyres\",\n        \"pyrex\",\n        \"pyric\",\n        \"pyros\",\n        \"pyxed\",\n        \"pyxes\",\n        \"pyxie\",\n        \"pyxis\",\n        \"pzazz\",\n        \"qadis\",\n        \"qaids\",\n        \"qajaq\",\n        \"qanat\",\n        \"qapik\",\n        \"qibla\",\n        \"qophs\",\n        \"qorma\",\n        \"quads\",\n        \"quaff\",\n        \"quags\",\n        \"quair\",\n        \"quais\",\n        \"quaky\",\n        \"quale\",\n        \"quant\",\n        \"quare\",\n        \"quass\",\n        \"quate\",\n        \"quats\",\n        \"quayd\",\n        \"quays\",\n        \"qubit\",\n        \"quean\",\n        \"queme\",\n        \"quena\",\n        \"quern\",\n        \"queyn\",\n        \"queys\",\n        \"quich\",\n        \"quids\",\n        \"quiff\",\n        \"quims\",\n        \"quina\",\n        \"quine\",\n        \"quino\",\n        \"quins\",\n        \"quint\",\n        \"quipo\",\n        \"quips\",\n        \"quipu\",\n        \"quire\",\n        \"quirt\",\n        \"quist\",\n        \"quits\",\n        \"quoad\",\n        \"quods\",\n        \"quoif\",\n        \"quoin\",\n        \"quoit\",\n        \"quoll\",\n        \"quonk\",\n        \"quops\",\n        \"qursh\",\n        \"quyte\",\n        \"rabat\",\n        \"rabic\",\n        \"rabis\",\n        \"raced\",\n        \"races\",\n        \"rache\",\n        \"racks\",\n        \"racon\",\n        \"radge\",\n        \"radix\",\n        \"radon\",\n        \"raffs\",\n        \"rafts\",\n        \"ragas\",\n        \"ragde\",\n        \"raged\",\n        \"ragee\",\n        \"rager\",\n        \"rages\",\n        \"ragga\",\n        \"raggs\",\n        \"raggy\",\n        \"ragis\",\n        \"ragus\",\n        \"rahed\",\n        \"rahui\",\n        \"raias\",\n        \"raids\",\n        \"raiks\",\n        \"raile\",\n        \"rails\",\n        \"raine\",\n        \"rains\",\n        \"raird\",\n        \"raita\",\n        \"raits\",\n        \"rajas\",\n        \"rajes\",\n        \"raked\",\n        \"rakee\",\n        \"raker\",\n        \"rakes\",\n        \"rakia\",\n        \"rakis\",\n        \"rakus\",\n        \"rales\",\n        \"ramal\",\n        \"ramee\",\n        \"ramet\",\n        \"ramie\",\n        \"ramin\",\n        \"ramis\",\n        \"rammy\",\n        \"ramps\",\n        \"ramus\",\n        \"ranas\",\n        \"rance\",\n        \"rands\",\n        \"ranee\",\n        \"ranga\",\n        \"rangi\",\n        \"rangs\",\n        \"rangy\",\n        \"ranid\",\n        \"ranis\",\n        \"ranke\",\n        \"ranks\",\n        \"rants\",\n        \"raped\",\n        \"raper\",\n        \"rapes\",\n        \"raphe\",\n        \"rappe\",\n        \"rared\",\n        \"raree\",\n        \"rares\",\n        \"rarks\",\n        \"rased\",\n        \"raser\",\n        \"rases\",\n        \"rasps\",\n        \"rasse\",\n        \"rasta\",\n        \"ratal\",\n        \"ratan\",\n        \"ratas\",\n        \"ratch\",\n        \"rated\",\n        \"ratel\",\n        \"rater\",\n        \"rates\",\n        \"ratha\",\n        \"rathe\",\n        \"raths\",\n        \"ratoo\",\n        \"ratos\",\n        \"ratus\",\n        \"rauns\",\n        \"raupo\",\n        \"raved\",\n        \"ravel\",\n        \"raver\",\n        \"raves\",\n        \"ravey\",\n        \"ravin\",\n        \"rawer\",\n        \"rawin\",\n        \"rawly\",\n        \"rawns\",\n        \"raxed\",\n        \"raxes\",\n        \"rayah\",\n        \"rayas\",\n        \"rayed\",\n        \"rayle\",\n        \"rayne\",\n        \"razed\",\n        \"razee\",\n        \"razer\",\n        \"razes\",\n        \"razoo\",\n        \"readd\",\n        \"reads\",\n        \"reais\",\n        \"reaks\",\n        \"realo\",\n        \"reals\",\n        \"reame\",\n        \"reams\",\n        \"reamy\",\n        \"reans\",\n        \"reaps\",\n        \"rears\",\n        \"reast\",\n        \"reata\",\n        \"reate\",\n        \"reave\",\n        \"rebbe\",\n        \"rebec\",\n        \"rebid\",\n        \"rebit\",\n        \"rebop\",\n        \"rebuy\",\n        \"recal\",\n        \"recce\",\n        \"recco\",\n        \"reccy\",\n        \"recit\",\n        \"recks\",\n        \"recon\",\n        \"recta\",\n        \"recti\",\n        \"recto\",\n        \"redan\",\n        \"redds\",\n        \"reddy\",\n        \"reded\",\n        \"redes\",\n        \"redia\",\n        \"redid\",\n        \"redip\",\n        \"redly\",\n        \"redon\",\n        \"redos\",\n        \"redox\",\n        \"redry\",\n        \"redub\",\n        \"redux\",\n        \"redye\",\n        \"reech\",\n        \"reede\",\n        \"reeds\",\n        \"reefs\",\n        \"reefy\",\n        \"reeks\",\n        \"reeky\",\n        \"reels\",\n        \"reens\",\n        \"reest\",\n        \"reeve\",\n        \"refed\",\n        \"refel\",\n        \"reffo\",\n        \"refis\",\n        \"refix\",\n        \"refly\",\n        \"refry\",\n        \"regar\",\n        \"reges\",\n        \"reggo\",\n        \"regie\",\n        \"regma\",\n        \"regna\",\n        \"regos\",\n        \"regur\",\n        \"rehem\",\n        \"reifs\",\n        \"reify\",\n        \"reiki\",\n        \"reiks\",\n        \"reink\",\n        \"reins\",\n        \"reird\",\n        \"reist\",\n        \"reive\",\n        \"rejig\",\n        \"rejon\",\n        \"reked\",\n        \"rekes\",\n        \"rekey\",\n        \"relet\",\n        \"relie\",\n        \"relit\",\n        \"rello\",\n        \"reman\",\n        \"remap\",\n        \"remen\",\n        \"remet\",\n        \"remex\",\n        \"remix\",\n        \"renay\",\n        \"rends\",\n        \"reney\",\n        \"renga\",\n        \"renig\",\n        \"renin\",\n        \"renne\",\n        \"renos\",\n        \"rente\",\n        \"rents\",\n        \"reoil\",\n        \"reorg\",\n        \"repeg\",\n        \"repin\",\n        \"repla\",\n        \"repos\",\n        \"repot\",\n        \"repps\",\n        \"repro\",\n        \"reran\",\n        \"rerig\",\n        \"resat\",\n        \"resaw\",\n        \"resay\",\n        \"resee\",\n        \"reses\",\n        \"resew\",\n        \"resid\",\n        \"resit\",\n        \"resod\",\n        \"resow\",\n        \"resto\",\n        \"rests\",\n        \"resty\",\n        \"resus\",\n        \"retag\",\n        \"retax\",\n        \"retem\",\n        \"retia\",\n        \"retie\",\n        \"retox\",\n        \"revet\",\n        \"revie\",\n        \"rewan\",\n        \"rewax\",\n        \"rewed\",\n        \"rewet\",\n        \"rewin\",\n        \"rewon\",\n        \"rewth\",\n        \"rexes\",\n        \"rezes\",\n        \"rheas\",\n        \"rheme\",\n        \"rheum\",\n        \"rhies\",\n        \"rhime\",\n        \"rhine\",\n        \"rhody\",\n        \"rhomb\",\n        \"rhone\",\n        \"rhumb\",\n        \"rhyne\",\n        \"rhyta\",\n        \"riads\",\n        \"rials\",\n        \"riant\",\n        \"riata\",\n        \"ribas\",\n        \"ribby\",\n        \"ribes\",\n        \"riced\",\n        \"ricer\",\n        \"rices\",\n        \"ricey\",\n        \"richt\",\n        \"ricin\",\n        \"ricks\",\n        \"rides\",\n        \"ridgy\",\n        \"ridic\",\n        \"riels\",\n        \"riems\",\n        \"rieve\",\n        \"rifer\",\n        \"riffs\",\n        \"rifte\",\n        \"rifts\",\n        \"rifty\",\n        \"riggs\",\n        \"rigol\",\n        \"riled\",\n        \"riles\",\n        \"riley\",\n        \"rille\",\n        \"rills\",\n        \"rimae\",\n        \"rimed\",\n        \"rimer\",\n        \"rimes\",\n        \"rimus\",\n        \"rinds\",\n        \"rindy\",\n        \"rines\",\n        \"rings\",\n        \"rinks\",\n        \"rioja\",\n        \"riots\",\n        \"riped\",\n        \"ripes\",\n        \"ripps\",\n        \"rises\",\n        \"rishi\",\n        \"risks\",\n        \"risps\",\n        \"risus\",\n        \"rites\",\n        \"ritts\",\n        \"ritzy\",\n        \"rivas\",\n        \"rived\",\n        \"rivel\",\n        \"riven\",\n        \"rives\",\n        \"riyal\",\n        \"rizas\",\n        \"roads\",\n        \"roams\",\n        \"roans\",\n        \"roars\",\n        \"roary\",\n        \"roate\",\n        \"robed\",\n        \"robes\",\n        \"roble\",\n        \"rocks\",\n        \"roded\",\n        \"rodes\",\n        \"roguy\",\n        \"rohes\",\n        \"roids\",\n        \"roils\",\n        \"roily\",\n        \"roins\",\n        \"roist\",\n        \"rojak\",\n        \"rojis\",\n        \"roked\",\n        \"roker\",\n        \"rokes\",\n        \"rolag\",\n        \"roles\",\n        \"rolfs\",\n        \"rolls\",\n        \"romal\",\n        \"roman\",\n        \"romeo\",\n        \"romps\",\n        \"ronde\",\n        \"rondo\",\n        \"roneo\",\n        \"rones\",\n        \"ronin\",\n        \"ronne\",\n        \"ronte\",\n        \"ronts\",\n        \"roods\",\n        \"roofs\",\n        \"roofy\",\n        \"rooks\",\n        \"rooky\",\n        \"rooms\",\n        \"roons\",\n        \"roops\",\n        \"roopy\",\n        \"roosa\",\n        \"roose\",\n        \"roots\",\n        \"rooty\",\n        \"roped\",\n        \"roper\",\n        \"ropes\",\n        \"ropey\",\n        \"roque\",\n        \"roral\",\n        \"rores\",\n        \"roric\",\n        \"rorid\",\n        \"rorie\",\n        \"rorts\",\n        \"rorty\",\n        \"rosed\",\n        \"roses\",\n        \"roset\",\n        \"roshi\",\n        \"rosin\",\n        \"rosit\",\n        \"rosti\",\n        \"rosts\",\n        \"rotal\",\n        \"rotan\",\n        \"rotas\",\n        \"rotch\",\n        \"roted\",\n        \"rotes\",\n        \"rotis\",\n        \"rotls\",\n        \"roton\",\n        \"rotos\",\n        \"rotte\",\n        \"rouen\",\n        \"roues\",\n        \"roule\",\n        \"rouls\",\n        \"roums\",\n        \"roups\",\n        \"roupy\",\n        \"roust\",\n        \"routh\",\n        \"routs\",\n        \"roved\",\n        \"roven\",\n        \"roves\",\n        \"rowan\",\n        \"rowed\",\n        \"rowel\",\n        \"rowen\",\n        \"rowie\",\n        \"rowme\",\n        \"rownd\",\n        \"rowth\",\n        \"rowts\",\n        \"royne\",\n        \"royst\",\n        \"rozet\",\n        \"rozit\",\n        \"ruana\",\n        \"rubai\",\n        \"rubby\",\n        \"rubel\",\n        \"rubes\",\n        \"rubin\",\n        \"ruble\",\n        \"rubli\",\n        \"rubus\",\n        \"ruche\",\n        \"rucks\",\n        \"rudas\",\n        \"rudds\",\n        \"rudes\",\n        \"rudie\",\n        \"rudis\",\n        \"rueda\",\n        \"ruers\",\n        \"ruffe\",\n        \"ruffs\",\n        \"rugae\",\n        \"rugal\",\n        \"ruggy\",\n        \"ruing\",\n        \"ruins\",\n        \"rukhs\",\n        \"ruled\",\n        \"rules\",\n        \"rumal\",\n        \"rumbo\",\n        \"rumen\",\n        \"rumes\",\n        \"rumly\",\n        \"rummy\",\n        \"rumpo\",\n        \"rumps\",\n        \"rumpy\",\n        \"runch\",\n        \"runds\",\n        \"runed\",\n        \"runes\",\n        \"rungs\",\n        \"runic\",\n        \"runny\",\n        \"runts\",\n        \"runty\",\n        \"rupia\",\n        \"rurps\",\n        \"rurus\",\n        \"rusas\",\n        \"ruses\",\n        \"rushy\",\n        \"rusks\",\n        \"rusma\",\n        \"russe\",\n        \"rusts\",\n        \"ruths\",\n        \"rutin\",\n        \"rutty\",\n        \"ryals\",\n        \"rybat\",\n        \"ryked\",\n        \"rykes\",\n        \"rymme\",\n        \"rynds\",\n        \"ryots\",\n        \"ryper\",\n        \"saags\",\n        \"sabal\",\n        \"sabed\",\n        \"saber\",\n        \"sabes\",\n        \"sabha\",\n        \"sabin\",\n        \"sabir\",\n        \"sable\",\n        \"sabot\",\n        \"sabra\",\n        \"sabre\",\n        \"sacks\",\n        \"sacra\",\n        \"saddo\",\n        \"sades\",\n        \"sadhe\",\n        \"sadhu\",\n        \"sadis\",\n        \"sados\",\n        \"sadza\",\n        \"safed\",\n        \"safes\",\n        \"sagas\",\n        \"sager\",\n        \"sages\",\n        \"saggy\",\n        \"sagos\",\n        \"sagum\",\n        \"saheb\",\n        \"sahib\",\n        \"saice\",\n        \"saick\",\n        \"saics\",\n        \"saids\",\n        \"saiga\",\n        \"sails\",\n        \"saims\",\n        \"saine\",\n        \"sains\",\n        \"sairs\",\n        \"saist\",\n        \"saith\",\n        \"sajou\",\n        \"sakai\",\n        \"saker\",\n        \"sakes\",\n        \"sakia\",\n        \"sakis\",\n        \"sakti\",\n        \"salal\",\n        \"salat\",\n        \"salep\",\n        \"sales\",\n        \"salet\",\n        \"salic\",\n        \"salix\",\n        \"salle\",\n        \"salmi\",\n        \"salol\",\n        \"salop\",\n        \"salpa\",\n        \"salps\",\n        \"salse\",\n        \"salto\",\n        \"salts\",\n        \"salue\",\n        \"salut\",\n        \"saman\",\n        \"samas\",\n        \"samba\",\n        \"sambo\",\n        \"samek\",\n        \"samel\",\n        \"samen\",\n        \"sames\",\n        \"samey\",\n        \"samfu\",\n        \"sammy\",\n        \"sampi\",\n        \"samps\",\n        \"sands\",\n        \"saned\",\n        \"sanes\",\n        \"sanga\",\n        \"sangh\",\n        \"sango\",\n        \"sangs\",\n        \"sanko\",\n        \"sansa\",\n        \"santo\",\n        \"sants\",\n        \"saola\",\n        \"sapan\",\n        \"sapid\",\n        \"sapor\",\n        \"saran\",\n        \"sards\",\n        \"sared\",\n        \"saree\",\n        \"sarge\",\n        \"sargo\",\n        \"sarin\",\n        \"saris\",\n        \"sarks\",\n        \"sarky\",\n        \"sarod\",\n        \"saros\",\n        \"sarus\",\n        \"saser\",\n        \"sasin\",\n        \"sasse\",\n        \"satai\",\n        \"satay\",\n        \"sated\",\n        \"satem\",\n        \"sates\",\n        \"satis\",\n        \"sauba\",\n        \"sauch\",\n        \"saugh\",\n        \"sauls\",\n        \"sault\",\n        \"saunt\",\n        \"saury\",\n        \"sauts\",\n        \"saved\",\n        \"saver\",\n        \"saves\",\n        \"savey\",\n        \"savin\",\n        \"sawah\",\n        \"sawed\",\n        \"sawer\",\n        \"saxes\",\n        \"sayed\",\n        \"sayer\",\n        \"sayid\",\n        \"sayne\",\n        \"sayon\",\n        \"sayst\",\n        \"sazes\",\n        \"scabs\",\n        \"scads\",\n        \"scaff\",\n        \"scags\",\n        \"scail\",\n        \"scala\",\n        \"scall\",\n        \"scams\",\n        \"scand\",\n        \"scans\",\n        \"scapa\",\n        \"scape\",\n        \"scapi\",\n        \"scarp\",\n        \"scars\",\n        \"scart\",\n        \"scath\",\n        \"scats\",\n        \"scatt\",\n        \"scaud\",\n        \"scaup\",\n        \"scaur\",\n        \"scaws\",\n        \"sceat\",\n        \"scena\",\n        \"scend\",\n        \"schav\",\n        \"schmo\",\n        \"schul\",\n        \"schwa\",\n        \"sclim\",\n        \"scody\",\n        \"scogs\",\n        \"scoog\",\n        \"scoot\",\n        \"scopa\",\n        \"scops\",\n        \"scots\",\n        \"scoug\",\n        \"scoup\",\n        \"scowp\",\n        \"scows\",\n        \"scrab\",\n        \"scrae\",\n        \"scrag\",\n        \"scran\",\n        \"scrat\",\n        \"scraw\",\n        \"scray\",\n        \"scrim\",\n        \"scrip\",\n        \"scrob\",\n        \"scrod\",\n        \"scrog\",\n        \"scrow\",\n        \"scudi\",\n        \"scudo\",\n        \"scuds\",\n        \"scuff\",\n        \"scuft\",\n        \"scugs\",\n        \"sculk\",\n        \"scull\",\n        \"sculp\",\n        \"sculs\",\n        \"scums\",\n        \"scups\",\n        \"scurf\",\n        \"scurs\",\n        \"scuse\",\n        \"scuta\",\n        \"scute\",\n        \"scuts\",\n        \"scuzz\",\n        \"scyes\",\n        \"sdayn\",\n        \"sdein\",\n        \"seals\",\n        \"seame\",\n        \"seams\",\n        \"seamy\",\n        \"seans\",\n        \"seare\",\n        \"sears\",\n        \"sease\",\n        \"seats\",\n        \"seaze\",\n        \"sebum\",\n        \"secco\",\n        \"sechs\",\n        \"sects\",\n        \"seder\",\n        \"sedes\",\n        \"sedge\",\n        \"sedgy\",\n        \"sedum\",\n        \"seeds\",\n        \"seeks\",\n        \"seeld\",\n        \"seels\",\n        \"seely\",\n        \"seems\",\n        \"seeps\",\n        \"seepy\",\n        \"seers\",\n        \"sefer\",\n        \"segar\",\n        \"segni\",\n        \"segno\",\n        \"segol\",\n        \"segos\",\n        \"sehri\",\n        \"seifs\",\n        \"seils\",\n        \"seine\",\n        \"seirs\",\n        \"seise\",\n        \"seism\",\n        \"seity\",\n        \"seiza\",\n        \"sekos\",\n        \"sekts\",\n        \"selah\",\n        \"seles\",\n        \"selfs\",\n        \"sella\",\n        \"selle\",\n        \"sells\",\n        \"selva\",\n        \"semee\",\n        \"semes\",\n        \"semie\",\n        \"semis\",\n        \"senas\",\n        \"sends\",\n        \"senes\",\n        \"sengi\",\n        \"senna\",\n        \"senor\",\n        \"sensa\",\n        \"sensi\",\n        \"sente\",\n        \"senti\",\n        \"sents\",\n        \"senvy\",\n        \"senza\",\n        \"sepad\",\n        \"sepal\",\n        \"sepic\",\n        \"sepoy\",\n        \"septa\",\n        \"septs\",\n        \"serac\",\n        \"serai\",\n        \"seral\",\n        \"sered\",\n        \"serer\",\n        \"seres\",\n        \"serfs\",\n        \"serge\",\n        \"seric\",\n        \"serin\",\n        \"serks\",\n        \"seron\",\n        \"serow\",\n        \"serra\",\n        \"serre\",\n        \"serrs\",\n        \"serry\",\n        \"servo\",\n        \"sesey\",\n        \"sessa\",\n        \"setae\",\n        \"setal\",\n        \"seton\",\n        \"setts\",\n        \"sewan\",\n        \"sewar\",\n        \"sewed\",\n        \"sewel\",\n        \"sewen\",\n        \"sewin\",\n        \"sexed\",\n        \"sexer\",\n        \"sexes\",\n        \"sexto\",\n        \"sexts\",\n        \"seyen\",\n        \"shads\",\n        \"shags\",\n        \"shahs\",\n        \"shako\",\n        \"shakt\",\n        \"shalm\",\n        \"shaly\",\n        \"shama\",\n        \"shams\",\n        \"shand\",\n        \"shans\",\n        \"shaps\",\n        \"sharn\",\n        \"shash\",\n        \"shaul\",\n        \"shawm\",\n        \"shawn\",\n        \"shaws\",\n        \"shaya\",\n        \"shays\",\n        \"shchi\",\n        \"sheaf\",\n        \"sheal\",\n        \"sheas\",\n        \"sheds\",\n        \"sheel\",\n        \"shend\",\n        \"shent\",\n        \"sheol\",\n        \"sherd\",\n        \"shere\",\n        \"shero\",\n        \"shets\",\n        \"sheva\",\n        \"shewn\",\n        \"shews\",\n        \"shiai\",\n        \"shiel\",\n        \"shier\",\n        \"shies\",\n        \"shill\",\n        \"shily\",\n        \"shims\",\n        \"shins\",\n        \"ships\",\n        \"shirr\",\n        \"shirs\",\n        \"shish\",\n        \"shiso\",\n        \"shist\",\n        \"shite\",\n        \"shits\",\n        \"shiur\",\n        \"shiva\",\n        \"shive\",\n        \"shivs\",\n        \"shlep\",\n        \"shlub\",\n        \"shmek\",\n        \"shmoe\",\n        \"shoat\",\n        \"shoed\",\n        \"shoer\",\n        \"shoes\",\n        \"shogi\",\n        \"shogs\",\n        \"shoji\",\n        \"shojo\",\n        \"shola\",\n        \"shool\",\n        \"shoon\",\n        \"shoos\",\n        \"shope\",\n        \"shops\",\n        \"shorl\",\n        \"shote\",\n        \"shots\",\n        \"shott\",\n        \"showd\",\n        \"shows\",\n        \"shoyu\",\n        \"shred\",\n        \"shris\",\n        \"shrow\",\n        \"shtik\",\n        \"shtum\",\n        \"shtup\",\n        \"shule\",\n        \"shuln\",\n        \"shuls\",\n        \"shuns\",\n        \"shura\",\n        \"shute\",\n        \"shuts\",\n        \"shwas\",\n        \"shyer\",\n        \"sials\",\n        \"sibbs\",\n        \"sibyl\",\n        \"sices\",\n        \"sicht\",\n        \"sicko\",\n        \"sicks\",\n        \"sicky\",\n        \"sidas\",\n        \"sided\",\n        \"sider\",\n        \"sides\",\n        \"sidha\",\n        \"sidhe\",\n        \"sidle\",\n        \"sield\",\n        \"siens\",\n        \"sient\",\n        \"sieth\",\n        \"sieur\",\n        \"sifts\",\n        \"sighs\",\n        \"sigil\",\n        \"sigla\",\n        \"signa\",\n        \"signs\",\n        \"sijos\",\n        \"sikas\",\n        \"siker\",\n        \"sikes\",\n        \"silds\",\n        \"siled\",\n        \"silen\",\n        \"siler\",\n        \"siles\",\n        \"silex\",\n        \"silks\",\n        \"sills\",\n        \"silos\",\n        \"silts\",\n        \"silty\",\n        \"silva\",\n        \"simar\",\n        \"simas\",\n        \"simba\",\n        \"simis\",\n        \"simps\",\n        \"simul\",\n        \"sinds\",\n        \"sined\",\n        \"sines\",\n        \"sings\",\n        \"sinhs\",\n        \"sinks\",\n        \"sinky\",\n        \"sinus\",\n        \"siped\",\n        \"sipes\",\n        \"sippy\",\n        \"sired\",\n        \"siree\",\n        \"sires\",\n        \"sirih\",\n        \"siris\",\n        \"siroc\",\n        \"sirra\",\n        \"sirup\",\n        \"sisal\",\n        \"sises\",\n        \"sista\",\n        \"sists\",\n        \"sitar\",\n        \"sited\",\n        \"sites\",\n        \"sithe\",\n        \"sitka\",\n        \"situp\",\n        \"situs\",\n        \"siver\",\n        \"sixer\",\n        \"sixes\",\n        \"sixmo\",\n        \"sixte\",\n        \"sizar\",\n        \"sized\",\n        \"sizel\",\n        \"sizer\",\n        \"sizes\",\n        \"skags\",\n        \"skail\",\n        \"skald\",\n        \"skank\",\n        \"skart\",\n        \"skats\",\n        \"skatt\",\n        \"skaws\",\n        \"skean\",\n        \"skear\",\n        \"skeds\",\n        \"skeed\",\n        \"skeef\",\n        \"skeen\",\n        \"skeer\",\n        \"skees\",\n        \"skeet\",\n        \"skegg\",\n        \"skegs\",\n        \"skein\",\n        \"skelf\",\n        \"skell\",\n        \"skelm\",\n        \"skelp\",\n        \"skene\",\n        \"skens\",\n        \"skeos\",\n        \"skeps\",\n        \"skers\",\n        \"skets\",\n        \"skews\",\n        \"skids\",\n        \"skied\",\n        \"skies\",\n        \"skiey\",\n        \"skimo\",\n        \"skims\",\n        \"skink\",\n        \"skins\",\n        \"skint\",\n        \"skios\",\n        \"skips\",\n        \"skirl\",\n        \"skirr\",\n        \"skite\",\n        \"skits\",\n        \"skive\",\n        \"skivy\",\n        \"sklim\",\n        \"skoal\",\n        \"skody\",\n        \"skoff\",\n        \"skogs\",\n        \"skols\",\n        \"skool\",\n        \"skort\",\n        \"skosh\",\n        \"skran\",\n        \"skrik\",\n        \"skuas\",\n        \"skugs\",\n        \"skyed\",\n        \"skyer\",\n        \"skyey\",\n        \"skyfs\",\n        \"skyre\",\n        \"skyrs\",\n        \"skyte\",\n        \"slabs\",\n        \"slade\",\n        \"slaes\",\n        \"slags\",\n        \"slaid\",\n        \"slake\",\n        \"slams\",\n        \"slane\",\n        \"slank\",\n        \"slaps\",\n        \"slart\",\n        \"slats\",\n        \"slaty\",\n        \"slaws\",\n        \"slays\",\n        \"slebs\",\n        \"sleds\",\n        \"sleer\",\n        \"slews\",\n        \"sleys\",\n        \"slier\",\n        \"slily\",\n        \"slims\",\n        \"slipe\",\n        \"slips\",\n        \"slipt\",\n        \"slish\",\n        \"slits\",\n        \"slive\",\n        \"sloan\",\n        \"slobs\",\n        \"sloes\",\n        \"slogs\",\n        \"sloid\",\n        \"slojd\",\n        \"slomo\",\n        \"sloom\",\n        \"sloot\",\n        \"slops\",\n        \"slopy\",\n        \"slorm\",\n        \"slots\",\n        \"slove\",\n        \"slows\",\n        \"sloyd\",\n        \"slubb\",\n        \"slubs\",\n        \"slued\",\n        \"slues\",\n        \"sluff\",\n        \"slugs\",\n        \"sluit\",\n        \"slums\",\n        \"slurb\",\n        \"slurs\",\n        \"sluse\",\n        \"sluts\",\n        \"slyer\",\n        \"slype\",\n        \"smaak\",\n        \"smaik\",\n        \"smalm\",\n        \"smalt\",\n        \"smarm\",\n        \"smaze\",\n        \"smeek\",\n        \"smees\",\n        \"smeik\",\n        \"smeke\",\n        \"smerk\",\n        \"smews\",\n        \"smirr\",\n        \"smirs\",\n        \"smits\",\n        \"smogs\",\n        \"smoko\",\n        \"smolt\",\n        \"smoor\",\n        \"smoot\",\n        \"smore\",\n        \"smorg\",\n        \"smout\",\n        \"smowt\",\n        \"smugs\",\n        \"smurs\",\n        \"smush\",\n        \"smuts\",\n        \"snabs\",\n        \"snafu\",\n        \"snags\",\n        \"snaps\",\n        \"snarf\",\n        \"snark\",\n        \"snars\",\n        \"snary\",\n        \"snash\",\n        \"snath\",\n        \"snaws\",\n        \"snead\",\n        \"sneap\",\n        \"snebs\",\n        \"sneck\",\n        \"sneds\",\n        \"sneed\",\n        \"snees\",\n        \"snell\",\n        \"snibs\",\n        \"snick\",\n        \"snies\",\n        \"snift\",\n        \"snigs\",\n        \"snips\",\n        \"snipy\",\n        \"snirt\",\n        \"snits\",\n        \"snobs\",\n        \"snods\",\n        \"snoek\",\n        \"snoep\",\n        \"snogs\",\n        \"snoke\",\n        \"snood\",\n        \"snook\",\n        \"snool\",\n        \"snoot\",\n        \"snots\",\n        \"snowk\",\n        \"snows\",\n        \"snubs\",\n        \"snugs\",\n        \"snush\",\n        \"snyes\",\n        \"soaks\",\n        \"soaps\",\n        \"soare\",\n        \"soars\",\n        \"soave\",\n        \"sobas\",\n        \"socas\",\n        \"soces\",\n        \"socko\",\n        \"socks\",\n        \"socle\",\n        \"sodas\",\n        \"soddy\",\n        \"sodic\",\n        \"sodom\",\n        \"sofar\",\n        \"sofas\",\n        \"softa\",\n        \"softs\",\n        \"softy\",\n        \"soger\",\n        \"sohur\",\n        \"soils\",\n        \"soily\",\n        \"sojas\",\n        \"sojus\",\n        \"sokah\",\n        \"soken\",\n        \"sokes\",\n        \"sokol\",\n        \"solah\",\n        \"solan\",\n        \"solas\",\n        \"solde\",\n        \"soldi\",\n        \"soldo\",\n        \"solds\",\n        \"soled\",\n        \"solei\",\n        \"soler\",\n        \"soles\",\n        \"solon\",\n        \"solos\",\n        \"solum\",\n        \"solus\",\n        \"soman\",\n        \"somas\",\n        \"sonce\",\n        \"sonde\",\n        \"sones\",\n        \"songs\",\n        \"sonly\",\n        \"sonne\",\n        \"sonny\",\n        \"sonse\",\n        \"sonsy\",\n        \"sooey\",\n        \"sooks\",\n        \"sooky\",\n        \"soole\",\n        \"sools\",\n        \"sooms\",\n        \"soops\",\n        \"soote\",\n        \"soots\",\n        \"sophs\",\n        \"sophy\",\n        \"sopor\",\n        \"soppy\",\n        \"sopra\",\n        \"soral\",\n        \"soras\",\n        \"sorbo\",\n        \"sorbs\",\n        \"sorda\",\n        \"sordo\",\n        \"sords\",\n        \"sored\",\n        \"soree\",\n        \"sorel\",\n        \"sorer\",\n        \"sores\",\n        \"sorex\",\n        \"sorgo\",\n        \"sorns\",\n        \"sorra\",\n        \"sorta\",\n        \"sorts\",\n        \"sorus\",\n        \"soths\",\n        \"sotol\",\n        \"souce\",\n        \"souct\",\n        \"sough\",\n        \"souks\",\n        \"souls\",\n        \"soums\",\n        \"soups\",\n        \"soupy\",\n        \"sours\",\n        \"souse\",\n        \"souts\",\n        \"sowar\",\n        \"sowce\",\n        \"sowed\",\n        \"sowff\",\n        \"sowfs\",\n        \"sowle\",\n        \"sowls\",\n        \"sowms\",\n        \"sownd\",\n        \"sowne\",\n        \"sowps\",\n        \"sowse\",\n        \"sowth\",\n        \"soyas\",\n        \"soyle\",\n        \"soyuz\",\n        \"sozin\",\n        \"spacy\",\n        \"spado\",\n        \"spaed\",\n        \"spaer\",\n        \"spaes\",\n        \"spags\",\n        \"spahi\",\n        \"spail\",\n        \"spain\",\n        \"spait\",\n        \"spake\",\n        \"spald\",\n        \"spale\",\n        \"spall\",\n        \"spalt\",\n        \"spams\",\n        \"spane\",\n        \"spang\",\n        \"spans\",\n        \"spard\",\n        \"spars\",\n        \"spart\",\n        \"spate\",\n        \"spats\",\n        \"spaul\",\n        \"spawl\",\n        \"spaws\",\n        \"spayd\",\n        \"spays\",\n        \"spaza\",\n        \"spazz\",\n        \"speal\",\n        \"spean\",\n        \"speat\",\n        \"specs\",\n        \"spect\",\n        \"speel\",\n        \"speer\",\n        \"speil\",\n        \"speir\",\n        \"speks\",\n        \"speld\",\n        \"spelk\",\n        \"speos\",\n        \"spets\",\n        \"speug\",\n        \"spews\",\n        \"spewy\",\n        \"spial\",\n        \"spica\",\n        \"spick\",\n        \"spics\",\n        \"spide\",\n        \"spier\",\n        \"spies\",\n        \"spiff\",\n        \"spifs\",\n        \"spiks\",\n        \"spile\",\n        \"spims\",\n        \"spina\",\n        \"spink\",\n        \"spins\",\n        \"spirt\",\n        \"spiry\",\n        \"spits\",\n        \"spitz\",\n        \"spivs\",\n        \"splay\",\n        \"splog\",\n        \"spode\",\n        \"spods\",\n        \"spoom\",\n        \"spoor\",\n        \"spoot\",\n        \"spork\",\n        \"sposh\",\n        \"spots\",\n        \"sprad\",\n        \"sprag\",\n        \"sprat\",\n        \"spred\",\n        \"sprew\",\n        \"sprit\",\n        \"sprod\",\n        \"sprog\",\n        \"sprue\",\n        \"sprug\",\n        \"spuds\",\n        \"spued\",\n        \"spuer\",\n        \"spues\",\n        \"spugs\",\n        \"spule\",\n        \"spume\",\n        \"spumy\",\n        \"spurs\",\n        \"sputa\",\n        \"spyal\",\n        \"spyre\",\n        \"squab\",\n        \"squaw\",\n        \"squeg\",\n        \"squid\",\n        \"squit\",\n        \"squiz\",\n        \"stabs\",\n        \"stade\",\n        \"stags\",\n        \"stagy\",\n        \"staig\",\n        \"stane\",\n        \"stang\",\n        \"staph\",\n        \"staps\",\n        \"starn\",\n        \"starr\",\n        \"stars\",\n        \"stats\",\n        \"staun\",\n        \"staws\",\n        \"stays\",\n        \"stean\",\n        \"stear\",\n        \"stedd\",\n        \"stede\",\n        \"steds\",\n        \"steek\",\n        \"steem\",\n        \"steen\",\n        \"steil\",\n        \"stela\",\n        \"stele\",\n        \"stell\",\n        \"steme\",\n        \"stems\",\n        \"stend\",\n        \"steno\",\n        \"stens\",\n        \"stent\",\n        \"steps\",\n        \"stept\",\n        \"stere\",\n        \"stets\",\n        \"stews\",\n        \"stewy\",\n        \"steys\",\n        \"stich\",\n        \"stied\",\n        \"sties\",\n        \"stilb\",\n        \"stile\",\n        \"stime\",\n        \"stims\",\n        \"stimy\",\n        \"stipa\",\n        \"stipe\",\n        \"stire\",\n        \"stirk\",\n        \"stirp\",\n        \"stirs\",\n        \"stive\",\n        \"stivy\",\n        \"stoae\",\n        \"stoai\",\n        \"stoas\",\n        \"stoat\",\n        \"stobs\",\n        \"stoep\",\n        \"stogy\",\n        \"stoit\",\n        \"stoln\",\n        \"stoma\",\n        \"stond\",\n        \"stong\",\n        \"stonk\",\n        \"stonn\",\n        \"stook\",\n        \"stoor\",\n        \"stope\",\n        \"stops\",\n        \"stopt\",\n        \"stoss\",\n        \"stots\",\n        \"stott\",\n        \"stoun\",\n        \"stoup\",\n        \"stour\",\n        \"stown\",\n        \"stowp\",\n        \"stows\",\n        \"strad\",\n        \"strae\",\n        \"strag\",\n        \"strak\",\n        \"strep\",\n        \"strew\",\n        \"stria\",\n        \"strig\",\n        \"strim\",\n        \"strop\",\n        \"strow\",\n        \"stroy\",\n        \"strum\",\n        \"stubs\",\n        \"stude\",\n        \"studs\",\n        \"stull\",\n        \"stulm\",\n        \"stumm\",\n        \"stums\",\n        \"stuns\",\n        \"stupa\",\n        \"stupe\",\n        \"sture\",\n        \"sturt\",\n        \"styed\",\n        \"styes\",\n        \"styli\",\n        \"stylo\",\n        \"styme\",\n        \"stymy\",\n        \"styre\",\n        \"styte\",\n        \"subah\",\n        \"subas\",\n        \"subby\",\n        \"suber\",\n        \"subha\",\n        \"succi\",\n        \"sucks\",\n        \"sucky\",\n        \"sucre\",\n        \"sudds\",\n        \"sudor\",\n        \"sudsy\",\n        \"suede\",\n        \"suent\",\n        \"suers\",\n        \"suete\",\n        \"suets\",\n        \"suety\",\n        \"sugan\",\n        \"sughs\",\n        \"sugos\",\n        \"suhur\",\n        \"suids\",\n        \"suint\",\n        \"suits\",\n        \"sujee\",\n        \"sukhs\",\n        \"sukuk\",\n        \"sulci\",\n        \"sulfa\",\n        \"sulfo\",\n        \"sulks\",\n        \"sulph\",\n        \"sulus\",\n        \"sumis\",\n        \"summa\",\n        \"sumos\",\n        \"sumph\",\n        \"sumps\",\n        \"sunis\",\n        \"sunks\",\n        \"sunna\",\n        \"sunns\",\n        \"sunup\",\n        \"supes\",\n        \"supra\",\n        \"surah\",\n        \"sural\",\n        \"suras\",\n        \"surat\",\n        \"surds\",\n        \"sured\",\n        \"sures\",\n        \"surfs\",\n        \"surfy\",\n        \"surgy\",\n        \"surra\",\n        \"sused\",\n        \"suses\",\n        \"susus\",\n        \"sutor\",\n        \"sutra\",\n        \"sutta\",\n        \"swabs\",\n        \"swack\",\n        \"swads\",\n        \"swage\",\n        \"swags\",\n        \"swail\",\n        \"swain\",\n        \"swale\",\n        \"swaly\",\n        \"swamy\",\n        \"swang\",\n        \"swank\",\n        \"swans\",\n        \"swaps\",\n        \"swapt\",\n        \"sward\",\n        \"sware\",\n        \"swarf\",\n        \"swart\",\n        \"swats\",\n        \"swayl\",\n        \"sways\",\n        \"sweal\",\n        \"swede\",\n        \"sweed\",\n        \"sweel\",\n        \"sweer\",\n        \"swees\",\n        \"sweir\",\n        \"swelt\",\n        \"swerf\",\n        \"sweys\",\n        \"swies\",\n        \"swigs\",\n        \"swile\",\n        \"swims\",\n        \"swink\",\n        \"swipe\",\n        \"swire\",\n        \"swiss\",\n        \"swith\",\n        \"swits\",\n        \"swive\",\n        \"swizz\",\n        \"swobs\",\n        \"swole\",\n        \"swoln\",\n        \"swops\",\n        \"swopt\",\n        \"swots\",\n        \"swoun\",\n        \"sybbe\",\n        \"sybil\",\n        \"syboe\",\n        \"sybow\",\n        \"sycee\",\n        \"syces\",\n        \"sycon\",\n        \"syens\",\n        \"syker\",\n        \"sykes\",\n        \"sylis\",\n        \"sylph\",\n        \"sylva\",\n        \"symar\",\n        \"synch\",\n        \"syncs\",\n        \"synds\",\n        \"syned\",\n        \"synes\",\n        \"synth\",\n        \"syped\",\n        \"sypes\",\n        \"syphs\",\n        \"syrah\",\n        \"syren\",\n        \"sysop\",\n        \"sythe\",\n        \"syver\",\n        \"taals\",\n        \"taata\",\n        \"taber\",\n        \"tabes\",\n        \"tabid\",\n        \"tabis\",\n        \"tabla\",\n        \"tabor\",\n        \"tabun\",\n        \"tabus\",\n        \"tacan\",\n        \"taces\",\n        \"tacet\",\n        \"tache\",\n        \"tacho\",\n        \"tachs\",\n        \"tacks\",\n        \"tacos\",\n        \"tacts\",\n        \"taels\",\n        \"tafia\",\n        \"taggy\",\n        \"tagma\",\n        \"tahas\",\n        \"tahrs\",\n        \"taiga\",\n        \"taigs\",\n        \"taiko\",\n        \"tails\",\n        \"tains\",\n        \"taira\",\n        \"taish\",\n        \"taits\",\n        \"tajes\",\n        \"takas\",\n        \"takes\",\n        \"takhi\",\n        \"takin\",\n        \"takis\",\n        \"takky\",\n        \"talak\",\n        \"talaq\",\n        \"talar\",\n        \"talas\",\n        \"talcs\",\n        \"talcy\",\n        \"talea\",\n        \"taler\",\n        \"tales\",\n        \"talks\",\n        \"talky\",\n        \"talls\",\n        \"talma\",\n        \"talpa\",\n        \"taluk\",\n        \"talus\",\n        \"tamal\",\n        \"tamed\",\n        \"tames\",\n        \"tamin\",\n        \"tamis\",\n        \"tammy\",\n        \"tamps\",\n        \"tanas\",\n        \"tanga\",\n        \"tangi\",\n        \"tangs\",\n        \"tanhs\",\n        \"tanka\",\n        \"tanks\",\n        \"tanky\",\n        \"tanna\",\n        \"tansy\",\n        \"tanti\",\n        \"tanto\",\n        \"tanty\",\n        \"tapas\",\n        \"taped\",\n        \"tapen\",\n        \"tapes\",\n        \"tapet\",\n        \"tapis\",\n        \"tappa\",\n        \"tapus\",\n        \"taras\",\n        \"tardo\",\n        \"tared\",\n        \"tares\",\n        \"targa\",\n        \"targe\",\n        \"tarns\",\n        \"taroc\",\n        \"tarok\",\n        \"taros\",\n        \"tarps\",\n        \"tarre\",\n        \"tarry\",\n        \"tarsi\",\n        \"tarts\",\n        \"tarty\",\n        \"tasar\",\n        \"tased\",\n        \"taser\",\n        \"tases\",\n        \"tasks\",\n        \"tassa\",\n        \"tasse\",\n        \"tasso\",\n        \"tatar\",\n        \"tater\",\n        \"tates\",\n        \"taths\",\n        \"tatie\",\n        \"tatou\",\n        \"tatts\",\n        \"tatus\",\n        \"taube\",\n        \"tauld\",\n        \"tauon\",\n        \"taupe\",\n        \"tauts\",\n        \"tavah\",\n        \"tavas\",\n        \"taver\",\n        \"tawai\",\n        \"tawas\",\n        \"tawed\",\n        \"tawer\",\n        \"tawie\",\n        \"tawse\",\n        \"tawts\",\n        \"taxed\",\n        \"taxer\",\n        \"taxes\",\n        \"taxis\",\n        \"taxol\",\n        \"taxon\",\n        \"taxor\",\n        \"taxus\",\n        \"tayra\",\n        \"tazza\",\n        \"tazze\",\n        \"teade\",\n        \"teads\",\n        \"teaed\",\n        \"teaks\",\n        \"teals\",\n        \"teams\",\n        \"tears\",\n        \"teats\",\n        \"teaze\",\n        \"techs\",\n        \"techy\",\n        \"tecta\",\n        \"teels\",\n        \"teems\",\n        \"teend\",\n        \"teene\",\n        \"teens\",\n        \"teeny\",\n        \"teers\",\n        \"teffs\",\n        \"teggs\",\n        \"tegua\",\n        \"tegus\",\n        \"tehrs\",\n        \"teiid\",\n        \"teils\",\n        \"teind\",\n        \"teins\",\n        \"telae\",\n        \"telco\",\n        \"teles\",\n        \"telex\",\n        \"telia\",\n        \"telic\",\n        \"tells\",\n        \"telly\",\n        \"teloi\",\n        \"telos\",\n        \"temed\",\n        \"temes\",\n        \"tempi\",\n        \"temps\",\n        \"tempt\",\n        \"temse\",\n        \"tench\",\n        \"tends\",\n        \"tendu\",\n        \"tenes\",\n        \"tenge\",\n        \"tenia\",\n        \"tenne\",\n        \"tenno\",\n        \"tenny\",\n        \"tenon\",\n        \"tents\",\n        \"tenty\",\n        \"tenue\",\n        \"tepal\",\n        \"tepas\",\n        \"tepoy\",\n        \"terai\",\n        \"teras\",\n        \"terce\",\n        \"terek\",\n        \"teres\",\n        \"terfe\",\n        \"terfs\",\n        \"terga\",\n        \"terms\",\n        \"terne\",\n        \"terns\",\n        \"terry\",\n        \"terts\",\n        \"tesla\",\n        \"testa\",\n        \"teste\",\n        \"tests\",\n        \"tetes\",\n        \"teths\",\n        \"tetra\",\n        \"tetri\",\n        \"teuch\",\n        \"teugh\",\n        \"tewed\",\n        \"tewel\",\n        \"tewit\",\n        \"texas\",\n        \"texes\",\n        \"texts\",\n        \"thack\",\n        \"thagi\",\n        \"thaim\",\n        \"thale\",\n        \"thali\",\n        \"thana\",\n        \"thane\",\n        \"thang\",\n        \"thans\",\n        \"thanx\",\n        \"tharm\",\n        \"thars\",\n        \"thaws\",\n        \"thawy\",\n        \"thebe\",\n        \"theca\",\n        \"theed\",\n        \"theek\",\n        \"thees\",\n        \"thegn\",\n        \"theic\",\n        \"thein\",\n        \"thelf\",\n        \"thema\",\n        \"thens\",\n        \"theow\",\n        \"therm\",\n        \"thesp\",\n        \"thete\",\n        \"thews\",\n        \"thewy\",\n        \"thigs\",\n        \"thilk\",\n        \"thill\",\n        \"thine\",\n        \"thins\",\n        \"thiol\",\n        \"thirl\",\n        \"thoft\",\n        \"thole\",\n        \"tholi\",\n        \"thoro\",\n        \"thorp\",\n        \"thous\",\n        \"thowl\",\n        \"thrae\",\n        \"thraw\",\n        \"thrid\",\n        \"thrip\",\n        \"throe\",\n        \"thuds\",\n        \"thugs\",\n        \"thuja\",\n        \"thunk\",\n        \"thurl\",\n        \"thuya\",\n        \"thymi\",\n        \"thymy\",\n        \"tians\",\n        \"tiars\",\n        \"tical\",\n        \"ticca\",\n        \"ticed\",\n        \"tices\",\n        \"tichy\",\n        \"ticks\",\n        \"ticky\",\n        \"tiddy\",\n        \"tided\",\n        \"tides\",\n        \"tiers\",\n        \"tiffs\",\n        \"tifos\",\n        \"tifts\",\n        \"tiges\",\n        \"tigon\",\n        \"tikas\",\n        \"tikes\",\n        \"tikis\",\n        \"tikka\",\n        \"tilak\",\n        \"tiled\",\n        \"tiler\",\n        \"tiles\",\n        \"tills\",\n        \"tilly\",\n        \"tilth\",\n        \"tilts\",\n        \"timbo\",\n        \"timed\",\n        \"times\",\n        \"timon\",\n        \"timps\",\n        \"tinas\",\n        \"tinct\",\n        \"tinds\",\n        \"tinea\",\n        \"tined\",\n        \"tines\",\n        \"tinge\",\n        \"tings\",\n        \"tinks\",\n        \"tinny\",\n        \"tints\",\n        \"tinty\",\n        \"tipis\",\n        \"tippy\",\n        \"tired\",\n        \"tires\",\n        \"tirls\",\n        \"tiros\",\n        \"tirrs\",\n        \"titch\",\n        \"titer\",\n        \"titis\",\n        \"titre\",\n        \"titty\",\n        \"titup\",\n        \"tiyin\",\n        \"tiyns\",\n        \"tizes\",\n        \"tizzy\",\n        \"toads\",\n        \"toady\",\n        \"toaze\",\n        \"tocks\",\n        \"tocky\",\n        \"tocos\",\n        \"todde\",\n        \"toeas\",\n        \"toffs\",\n        \"toffy\",\n        \"tofts\",\n        \"tofus\",\n        \"togae\",\n        \"togas\",\n        \"toged\",\n        \"toges\",\n        \"togue\",\n        \"tohos\",\n        \"toile\",\n        \"toils\",\n        \"toing\",\n        \"toise\",\n        \"toits\",\n        \"tokay\",\n        \"toked\",\n        \"toker\",\n        \"tokes\",\n        \"tokos\",\n        \"tolan\",\n        \"tolar\",\n        \"tolas\",\n        \"toled\",\n        \"toles\",\n        \"tolls\",\n        \"tolly\",\n        \"tolts\",\n        \"tolus\",\n        \"tolyl\",\n        \"toman\",\n        \"tombs\",\n        \"tomes\",\n        \"tomia\",\n        \"tommy\",\n        \"tomos\",\n        \"tondi\",\n        \"tondo\",\n        \"toned\",\n        \"toner\",\n        \"tones\",\n        \"toney\",\n        \"tongs\",\n        \"tonka\",\n        \"tonks\",\n        \"tonne\",\n        \"tonus\",\n        \"tools\",\n        \"tooms\",\n        \"toons\",\n        \"toots\",\n        \"toped\",\n        \"topee\",\n        \"topek\",\n        \"toper\",\n        \"topes\",\n        \"tophe\",\n        \"tophi\",\n        \"tophs\",\n        \"topis\",\n        \"topoi\",\n        \"topos\",\n        \"toppy\",\n        \"toque\",\n        \"torah\",\n        \"toran\",\n        \"toras\",\n        \"torcs\",\n        \"tores\",\n        \"toric\",\n        \"torii\",\n        \"toros\",\n        \"torot\",\n        \"torrs\",\n        \"torse\",\n        \"torsi\",\n        \"torsk\",\n        \"torta\",\n        \"torte\",\n        \"torts\",\n        \"tosas\",\n        \"tosed\",\n        \"toses\",\n        \"toshy\",\n        \"tossy\",\n        \"toted\",\n        \"toter\",\n        \"totes\",\n        \"totty\",\n        \"touks\",\n        \"touns\",\n        \"tours\",\n        \"touse\",\n        \"tousy\",\n        \"touts\",\n        \"touze\",\n        \"touzy\",\n        \"towed\",\n        \"towie\",\n        \"towns\",\n        \"towny\",\n        \"towse\",\n        \"towsy\",\n        \"towts\",\n        \"towze\",\n        \"towzy\",\n        \"toyed\",\n        \"toyer\",\n        \"toyon\",\n        \"toyos\",\n        \"tozed\",\n        \"tozes\",\n        \"tozie\",\n        \"trabs\",\n        \"trads\",\n        \"tragi\",\n        \"traik\",\n        \"trams\",\n        \"trank\",\n        \"tranq\",\n        \"trans\",\n        \"trant\",\n        \"trape\",\n        \"traps\",\n        \"trapt\",\n        \"trass\",\n        \"trats\",\n        \"tratt\",\n        \"trave\",\n        \"trayf\",\n        \"trays\",\n        \"treck\",\n        \"treed\",\n        \"treen\",\n        \"trees\",\n        \"trefa\",\n        \"treif\",\n        \"treks\",\n        \"trema\",\n        \"trems\",\n        \"tress\",\n        \"trest\",\n        \"trets\",\n        \"trews\",\n        \"treyf\",\n        \"treys\",\n        \"triac\",\n        \"tride\",\n        \"trier\",\n        \"tries\",\n        \"triff\",\n        \"trigo\",\n        \"trigs\",\n        \"trike\",\n        \"trild\",\n        \"trill\",\n        \"trims\",\n        \"trine\",\n        \"trins\",\n        \"triol\",\n        \"trior\",\n        \"trios\",\n        \"trips\",\n        \"tripy\",\n        \"trist\",\n        \"troad\",\n        \"troak\",\n        \"troat\",\n        \"trock\",\n        \"trode\",\n        \"trods\",\n        \"trogs\",\n        \"trois\",\n        \"troke\",\n        \"tromp\",\n        \"trona\",\n        \"tronc\",\n        \"trone\",\n        \"tronk\",\n        \"trons\",\n        \"trooz\",\n        \"troth\",\n        \"trots\",\n        \"trows\",\n        \"troys\",\n        \"trued\",\n        \"trues\",\n        \"trugo\",\n        \"trugs\",\n        \"trull\",\n        \"tryer\",\n        \"tryke\",\n        \"tryma\",\n        \"tryps\",\n        \"tsade\",\n        \"tsadi\",\n        \"tsars\",\n        \"tsked\",\n        \"tsuba\",\n        \"tsubo\",\n        \"tuans\",\n        \"tuart\",\n        \"tuath\",\n        \"tubae\",\n        \"tubar\",\n        \"tubas\",\n        \"tubby\",\n        \"tubed\",\n        \"tubes\",\n        \"tucks\",\n        \"tufas\",\n        \"tuffe\",\n        \"tuffs\",\n        \"tufts\",\n        \"tufty\",\n        \"tugra\",\n        \"tuile\",\n        \"tuina\",\n        \"tuism\",\n        \"tuktu\",\n        \"tules\",\n        \"tulpa\",\n        \"tulsi\",\n        \"tumid\",\n        \"tummy\",\n        \"tumps\",\n        \"tumpy\",\n        \"tunas\",\n        \"tunds\",\n        \"tuned\",\n        \"tuner\",\n        \"tunes\",\n        \"tungs\",\n        \"tunny\",\n        \"tupek\",\n        \"tupik\",\n        \"tuple\",\n        \"tuque\",\n        \"turds\",\n        \"turfs\",\n        \"turfy\",\n        \"turks\",\n        \"turme\",\n        \"turms\",\n        \"turns\",\n        \"turnt\",\n        \"turps\",\n        \"turrs\",\n        \"tushy\",\n        \"tusks\",\n        \"tusky\",\n        \"tutee\",\n        \"tutti\",\n        \"tutty\",\n        \"tutus\",\n        \"tuxes\",\n        \"tuyer\",\n        \"twaes\",\n        \"twain\",\n        \"twals\",\n        \"twank\",\n        \"twats\",\n        \"tways\",\n        \"tweel\",\n        \"tween\",\n        \"tweep\",\n        \"tweer\",\n        \"twerk\",\n        \"twerp\",\n        \"twier\",\n        \"twigs\",\n        \"twill\",\n        \"twilt\",\n        \"twink\",\n        \"twins\",\n        \"twiny\",\n        \"twire\",\n        \"twirp\",\n        \"twite\",\n        \"twits\",\n        \"twoer\",\n        \"twyer\",\n        \"tyees\",\n        \"tyers\",\n        \"tyiyn\",\n        \"tykes\",\n        \"tyler\",\n        \"tymps\",\n        \"tynde\",\n        \"tyned\",\n        \"tynes\",\n        \"typal\",\n        \"typed\",\n        \"types\",\n        \"typey\",\n        \"typic\",\n        \"typos\",\n        \"typps\",\n        \"typto\",\n        \"tyran\",\n        \"tyred\",\n        \"tyres\",\n        \"tyros\",\n        \"tythe\",\n        \"tzars\",\n        \"udals\",\n        \"udons\",\n        \"ugali\",\n        \"ugged\",\n        \"uhlan\",\n        \"uhuru\",\n        \"ukase\",\n        \"ulama\",\n        \"ulans\",\n        \"ulema\",\n        \"ulmin\",\n        \"ulnad\",\n        \"ulnae\",\n        \"ulnar\",\n        \"ulnas\",\n        \"ulpan\",\n        \"ulvas\",\n        \"ulyie\",\n        \"ulzie\",\n        \"umami\",\n        \"umbel\",\n        \"umber\",\n        \"umble\",\n        \"umbos\",\n        \"umbre\",\n        \"umiac\",\n        \"umiak\",\n        \"umiaq\",\n        \"ummah\",\n        \"ummas\",\n        \"ummed\",\n        \"umped\",\n        \"umphs\",\n        \"umpie\",\n        \"umpty\",\n        \"umrah\",\n        \"umras\",\n        \"unais\",\n        \"unapt\",\n        \"unarm\",\n        \"unary\",\n        \"unaus\",\n        \"unbag\",\n        \"unban\",\n        \"unbar\",\n        \"unbed\",\n        \"unbid\",\n        \"unbox\",\n        \"uncap\",\n        \"unces\",\n        \"uncia\",\n        \"uncos\",\n        \"uncoy\",\n        \"uncus\",\n        \"undam\",\n        \"undee\",\n        \"undos\",\n        \"undug\",\n        \"uneth\",\n        \"unfix\",\n        \"ungag\",\n        \"unget\",\n        \"ungod\",\n        \"ungot\",\n        \"ungum\",\n        \"unhat\",\n        \"unhip\",\n        \"unica\",\n        \"units\",\n        \"unjam\",\n        \"unked\",\n        \"unket\",\n        \"unkid\",\n        \"unlaw\",\n        \"unlay\",\n        \"unled\",\n        \"unlet\",\n        \"unlid\",\n        \"unman\",\n        \"unmew\",\n        \"unmix\",\n        \"unpay\",\n        \"unpeg\",\n        \"unpen\",\n        \"unpin\",\n        \"unred\",\n        \"unrid\",\n        \"unrig\",\n        \"unrip\",\n        \"unsaw\",\n        \"unsay\",\n        \"unsee\",\n        \"unsew\",\n        \"unsex\",\n        \"unsod\",\n        \"untax\",\n        \"untin\",\n        \"unwet\",\n        \"unwit\",\n        \"unwon\",\n        \"upbow\",\n        \"upbye\",\n        \"updos\",\n        \"updry\",\n        \"upend\",\n        \"upjet\",\n        \"uplay\",\n        \"upled\",\n        \"uplit\",\n        \"upped\",\n        \"upran\",\n        \"uprun\",\n        \"upsee\",\n        \"upsey\",\n        \"uptak\",\n        \"upter\",\n        \"uptie\",\n        \"uraei\",\n        \"urali\",\n        \"uraos\",\n        \"urare\",\n        \"urari\",\n        \"urase\",\n        \"urate\",\n        \"urbex\",\n        \"urbia\",\n        \"urdee\",\n        \"ureal\",\n        \"ureas\",\n        \"uredo\",\n        \"ureic\",\n        \"urena\",\n        \"urent\",\n        \"urged\",\n        \"urger\",\n        \"urges\",\n        \"urial\",\n        \"urite\",\n        \"urman\",\n        \"urnal\",\n        \"urned\",\n        \"urped\",\n        \"ursae\",\n        \"ursid\",\n        \"urson\",\n        \"urubu\",\n        \"urvas\",\n        \"users\",\n        \"usnea\",\n        \"usque\",\n        \"usure\",\n        \"usury\",\n        \"uteri\",\n        \"uveal\",\n        \"uveas\",\n        \"uvula\",\n        \"vacua\",\n        \"vaded\",\n        \"vades\",\n        \"vagal\",\n        \"vagus\",\n        \"vails\",\n        \"vaire\",\n        \"vairs\",\n        \"vairy\",\n        \"vakas\",\n        \"vakil\",\n        \"vales\",\n        \"valis\",\n        \"valse\",\n        \"vamps\",\n        \"vampy\",\n        \"vanda\",\n        \"vaned\",\n        \"vanes\",\n        \"vangs\",\n        \"vants\",\n        \"vaped\",\n        \"vaper\",\n        \"vapes\",\n        \"varan\",\n        \"varas\",\n        \"vardy\",\n        \"varec\",\n        \"vares\",\n        \"varia\",\n        \"varix\",\n        \"varna\",\n        \"varus\",\n        \"varve\",\n        \"vasal\",\n        \"vases\",\n        \"vasts\",\n        \"vasty\",\n        \"vatic\",\n        \"vatus\",\n        \"vauch\",\n        \"vaute\",\n        \"vauts\",\n        \"vawte\",\n        \"vaxes\",\n        \"veale\",\n        \"veals\",\n        \"vealy\",\n        \"veena\",\n        \"veeps\",\n        \"veers\",\n        \"veery\",\n        \"vegas\",\n        \"veges\",\n        \"vegie\",\n        \"vegos\",\n        \"vehme\",\n        \"veils\",\n        \"veily\",\n        \"veins\",\n        \"veiny\",\n        \"velar\",\n        \"velds\",\n        \"veldt\",\n        \"veles\",\n        \"vells\",\n        \"velum\",\n        \"venae\",\n        \"venal\",\n        \"vends\",\n        \"vendu\",\n        \"veney\",\n        \"venge\",\n        \"venin\",\n        \"vents\",\n        \"venus\",\n        \"verbs\",\n        \"verra\",\n        \"verry\",\n        \"verst\",\n        \"verts\",\n        \"vertu\",\n        \"vespa\",\n        \"vesta\",\n        \"vests\",\n        \"vetch\",\n        \"vexed\",\n        \"vexer\",\n        \"vexes\",\n        \"vexil\",\n        \"vezir\",\n        \"vials\",\n        \"viand\",\n        \"vibes\",\n        \"vibex\",\n        \"vibey\",\n        \"viced\",\n        \"vices\",\n        \"vichy\",\n        \"viers\",\n        \"views\",\n        \"viewy\",\n        \"vifda\",\n        \"viffs\",\n        \"vigas\",\n        \"vigia\",\n        \"vilde\",\n        \"viler\",\n        \"villi\",\n        \"vills\",\n        \"vimen\",\n        \"vinal\",\n        \"vinas\",\n        \"vinca\",\n        \"vined\",\n        \"viner\",\n        \"vines\",\n        \"vinew\",\n        \"vinic\",\n        \"vinos\",\n        \"vints\",\n        \"viold\",\n        \"viols\",\n        \"vired\",\n        \"vireo\",\n        \"vires\",\n        \"virga\",\n        \"virge\",\n        \"virid\",\n        \"virls\",\n        \"virtu\",\n        \"visas\",\n        \"vised\",\n        \"vises\",\n        \"visie\",\n        \"visne\",\n        \"vison\",\n        \"visto\",\n        \"vitae\",\n        \"vitas\",\n        \"vitex\",\n        \"vitro\",\n        \"vitta\",\n        \"vivas\",\n        \"vivat\",\n        \"vivda\",\n        \"viver\",\n        \"vives\",\n        \"vizir\",\n        \"vizor\",\n        \"vleis\",\n        \"vlies\",\n        \"vlogs\",\n        \"voars\",\n        \"vocab\",\n        \"voces\",\n        \"voddy\",\n        \"vodou\",\n        \"vodun\",\n        \"voema\",\n        \"vogie\",\n        \"voids\",\n        \"voile\",\n        \"voips\",\n        \"volae\",\n        \"volar\",\n        \"voled\",\n        \"voles\",\n        \"volet\",\n        \"volks\",\n        \"volta\",\n        \"volte\",\n        \"volti\",\n        \"volts\",\n        \"volva\",\n        \"volve\",\n        \"vomer\",\n        \"voted\",\n        \"votes\",\n        \"vouge\",\n        \"voulu\",\n        \"vowed\",\n        \"vower\",\n        \"voxel\",\n        \"vozhd\",\n        \"vraic\",\n        \"vrils\",\n        \"vroom\",\n        \"vrous\",\n        \"vrouw\",\n        \"vrows\",\n        \"vuggs\",\n        \"vuggy\",\n        \"vughs\",\n        \"vughy\",\n        \"vulgo\",\n        \"vulns\",\n        \"vulva\",\n        \"vutty\",\n        \"waacs\",\n        \"wacke\",\n        \"wacko\",\n        \"wacks\",\n        \"wadds\",\n        \"waddy\",\n        \"waded\",\n        \"wader\",\n        \"wades\",\n        \"wadge\",\n        \"wadis\",\n        \"wadts\",\n        \"waffs\",\n        \"wafts\",\n        \"waged\",\n        \"wages\",\n        \"wagga\",\n        \"wagyu\",\n        \"wahoo\",\n        \"waide\",\n        \"waifs\",\n        \"waift\",\n        \"wails\",\n        \"wains\",\n        \"wairs\",\n        \"waite\",\n        \"waits\",\n        \"wakas\",\n        \"waked\",\n        \"waken\",\n        \"waker\",\n        \"wakes\",\n        \"wakfs\",\n        \"waldo\",\n        \"walds\",\n        \"waled\",\n        \"waler\",\n        \"wales\",\n        \"walie\",\n        \"walis\",\n        \"walks\",\n        \"walla\",\n        \"walls\",\n        \"wally\",\n        \"walty\",\n        \"wamed\",\n        \"wames\",\n        \"wamus\",\n        \"wands\",\n        \"waned\",\n        \"wanes\",\n        \"waney\",\n        \"wangs\",\n        \"wanks\",\n        \"wanky\",\n        \"wanle\",\n        \"wanly\",\n        \"wanna\",\n        \"wants\",\n        \"wanty\",\n        \"wanze\",\n        \"waqfs\",\n        \"warbs\",\n        \"warby\",\n        \"wards\",\n        \"wared\",\n        \"wares\",\n        \"warez\",\n        \"warks\",\n        \"warms\",\n        \"warns\",\n        \"warps\",\n        \"warre\",\n        \"warst\",\n        \"warts\",\n        \"wases\",\n        \"washy\",\n        \"wasms\",\n        \"wasps\",\n        \"waspy\",\n        \"wasts\",\n        \"watap\",\n        \"watts\",\n        \"wauff\",\n        \"waugh\",\n        \"wauks\",\n        \"waulk\",\n        \"wauls\",\n        \"waurs\",\n        \"waved\",\n        \"waves\",\n        \"wavey\",\n        \"wawas\",\n        \"wawes\",\n        \"wawls\",\n        \"waxed\",\n        \"waxer\",\n        \"waxes\",\n        \"wayed\",\n        \"wazir\",\n        \"wazoo\",\n        \"weald\",\n        \"weals\",\n        \"weamb\",\n        \"weans\",\n        \"wears\",\n        \"webby\",\n        \"weber\",\n        \"wecht\",\n        \"wedel\",\n        \"wedgy\",\n        \"weeds\",\n        \"weeke\",\n        \"weeks\",\n        \"weels\",\n        \"weems\",\n        \"weens\",\n        \"weeny\",\n        \"weeps\",\n        \"weepy\",\n        \"weest\",\n        \"weete\",\n        \"weets\",\n        \"wefte\",\n        \"wefts\",\n        \"weids\",\n        \"weils\",\n        \"weirs\",\n        \"weise\",\n        \"weize\",\n        \"wekas\",\n        \"welds\",\n        \"welke\",\n        \"welks\",\n        \"welkt\",\n        \"wells\",\n        \"welly\",\n        \"welts\",\n        \"wembs\",\n        \"wends\",\n        \"wenge\",\n        \"wenny\",\n        \"wents\",\n        \"weros\",\n        \"wersh\",\n        \"wests\",\n        \"wetas\",\n        \"wetly\",\n        \"wexed\",\n        \"wexes\",\n        \"whamo\",\n        \"whams\",\n        \"whang\",\n        \"whaps\",\n        \"whare\",\n        \"whata\",\n        \"whats\",\n        \"whaup\",\n        \"whaur\",\n        \"wheal\",\n        \"whear\",\n        \"wheen\",\n        \"wheep\",\n        \"wheft\",\n        \"whelk\",\n        \"whelm\",\n        \"whens\",\n        \"whets\",\n        \"whews\",\n        \"wheys\",\n        \"whids\",\n        \"whift\",\n        \"whigs\",\n        \"whilk\",\n        \"whims\",\n        \"whins\",\n        \"whios\",\n        \"whips\",\n        \"whipt\",\n        \"whirr\",\n        \"whirs\",\n        \"whish\",\n        \"whiss\",\n        \"whist\",\n        \"whits\",\n        \"whity\",\n        \"whizz\",\n        \"whomp\",\n        \"whoof\",\n        \"whoot\",\n        \"whops\",\n        \"whore\",\n        \"whorl\",\n        \"whort\",\n        \"whoso\",\n        \"whows\",\n        \"whump\",\n        \"whups\",\n        \"whyda\",\n        \"wicca\",\n        \"wicks\",\n        \"wicky\",\n        \"widdy\",\n        \"wides\",\n        \"wiels\",\n        \"wifed\",\n        \"wifes\",\n        \"wifey\",\n        \"wifie\",\n        \"wifty\",\n        \"wigan\",\n        \"wigga\",\n        \"wiggy\",\n        \"wikis\",\n        \"wilco\",\n        \"wilds\",\n        \"wiled\",\n        \"wiles\",\n        \"wilga\",\n        \"wilis\",\n        \"wilja\",\n        \"wills\",\n        \"wilts\",\n        \"wimps\",\n        \"winds\",\n        \"wined\",\n        \"wines\",\n        \"winey\",\n        \"winge\",\n        \"wings\",\n        \"wingy\",\n        \"winks\",\n        \"winna\",\n        \"winns\",\n        \"winos\",\n        \"winze\",\n        \"wiped\",\n        \"wiper\",\n        \"wipes\",\n        \"wired\",\n        \"wirer\",\n        \"wires\",\n        \"wirra\",\n        \"wised\",\n        \"wises\",\n        \"wisha\",\n        \"wisht\",\n        \"wisps\",\n        \"wists\",\n        \"witan\",\n        \"wited\",\n        \"wites\",\n        \"withe\",\n        \"withs\",\n        \"withy\",\n        \"wived\",\n        \"wiver\",\n        \"wives\",\n        \"wizen\",\n        \"wizes\",\n        \"woads\",\n        \"woald\",\n        \"wocks\",\n        \"wodge\",\n        \"woful\",\n        \"wojus\",\n        \"woker\",\n        \"wokka\",\n        \"wolds\",\n        \"wolfs\",\n        \"wolly\",\n        \"wolve\",\n        \"wombs\",\n        \"womby\",\n        \"womyn\",\n        \"wonga\",\n        \"wongi\",\n        \"wonks\",\n        \"wonky\",\n        \"wonts\",\n        \"woods\",\n        \"wooed\",\n        \"woofs\",\n        \"woofy\",\n        \"woold\",\n        \"wools\",\n        \"woons\",\n        \"woops\",\n        \"woopy\",\n        \"woose\",\n        \"woosh\",\n        \"wootz\",\n        \"words\",\n        \"works\",\n        \"worms\",\n        \"wormy\",\n        \"worts\",\n        \"wowed\",\n        \"wowee\",\n        \"woxen\",\n        \"wrang\",\n        \"wraps\",\n        \"wrapt\",\n        \"wrast\",\n        \"wrate\",\n        \"wrawl\",\n        \"wrens\",\n        \"wrick\",\n        \"wried\",\n        \"wrier\",\n        \"wries\",\n        \"writs\",\n        \"wroke\",\n        \"wroot\",\n        \"wroth\",\n        \"wryer\",\n        \"wuddy\",\n        \"wudus\",\n        \"wulls\",\n        \"wurst\",\n        \"wuses\",\n        \"wushu\",\n        \"wussy\",\n        \"wuxia\",\n        \"wyled\",\n        \"wyles\",\n        \"wynds\",\n        \"wynns\",\n        \"wyted\",\n        \"wytes\",\n        \"xebec\",\n        \"xenia\",\n        \"xenic\",\n        \"xenon\",\n        \"xeric\",\n        \"xerox\",\n        \"xerus\",\n        \"xoana\",\n        \"xrays\",\n        \"xylan\",\n        \"xylem\",\n        \"xylic\",\n        \"xylol\",\n        \"xylyl\",\n        \"xysti\",\n        \"xysts\",\n        \"yaars\",\n        \"yabas\",\n        \"yabba\",\n        \"yabby\",\n        \"yacca\",\n        \"yacka\",\n        \"yacks\",\n        \"yaffs\",\n        \"yager\",\n        \"yages\",\n        \"yagis\",\n        \"yahoo\",\n        \"yaird\",\n        \"yakka\",\n        \"yakow\",\n        \"yales\",\n        \"yamen\",\n        \"yampy\",\n        \"yamun\",\n        \"yangs\",\n        \"yanks\",\n        \"yapok\",\n        \"yapon\",\n        \"yapps\",\n        \"yappy\",\n        \"yarak\",\n        \"yarco\",\n        \"yards\",\n        \"yarer\",\n        \"yarfa\",\n        \"yarks\",\n        \"yarns\",\n        \"yarrs\",\n        \"yarta\",\n        \"yarto\",\n        \"yates\",\n        \"yauds\",\n        \"yauld\",\n        \"yaups\",\n        \"yawed\",\n        \"yawey\",\n        \"yawls\",\n        \"yawns\",\n        \"yawny\",\n        \"yawps\",\n        \"ybore\",\n        \"yclad\",\n        \"ycled\",\n        \"ycond\",\n        \"ydrad\",\n        \"ydred\",\n        \"yeads\",\n        \"yeahs\",\n        \"yealm\",\n        \"yeans\",\n        \"yeard\",\n        \"years\",\n        \"yecch\",\n        \"yechs\",\n        \"yechy\",\n        \"yedes\",\n        \"yeeds\",\n        \"yeesh\",\n        \"yeggs\",\n        \"yelks\",\n        \"yells\",\n        \"yelms\",\n        \"yelps\",\n        \"yelts\",\n        \"yenta\",\n        \"yente\",\n        \"yerba\",\n        \"yerds\",\n        \"yerks\",\n        \"yeses\",\n        \"yesks\",\n        \"yests\",\n        \"yesty\",\n        \"yetis\",\n        \"yetts\",\n        \"yeuks\",\n        \"yeuky\",\n        \"yeven\",\n        \"yeves\",\n        \"yewen\",\n        \"yexed\",\n        \"yexes\",\n        \"yfere\",\n        \"yiked\",\n        \"yikes\",\n        \"yills\",\n        \"yince\",\n        \"yipes\",\n        \"yippy\",\n        \"yirds\",\n        \"yirks\",\n        \"yirrs\",\n        \"yirth\",\n        \"yites\",\n        \"yitie\",\n        \"ylems\",\n        \"ylike\",\n        \"ylkes\",\n        \"ymolt\",\n        \"ympes\",\n        \"yobbo\",\n        \"yobby\",\n        \"yocks\",\n        \"yodel\",\n        \"yodhs\",\n        \"yodle\",\n        \"yogas\",\n        \"yogee\",\n        \"yoghs\",\n        \"yogic\",\n        \"yogin\",\n        \"yogis\",\n        \"yoick\",\n        \"yojan\",\n        \"yoked\",\n        \"yokel\",\n        \"yoker\",\n        \"yokes\",\n        \"yokul\",\n        \"yolks\",\n        \"yolky\",\n        \"yomim\",\n        \"yomps\",\n        \"yonic\",\n        \"yonis\",\n        \"yonks\",\n        \"yoofs\",\n        \"yoops\",\n        \"yores\",\n        \"yorks\",\n        \"yorps\",\n        \"youks\",\n        \"yourn\",\n        \"yours\",\n        \"yourt\",\n        \"youse\",\n        \"yowed\",\n        \"yowes\",\n        \"yowie\",\n        \"yowls\",\n        \"yowza\",\n        \"yrapt\",\n        \"yrent\",\n        \"yrivd\",\n        \"yrneh\",\n        \"ysame\",\n        \"ytost\",\n        \"yuans\",\n        \"yucas\",\n        \"yucca\",\n        \"yucch\",\n        \"yucko\",\n        \"yucks\",\n        \"yucky\",\n        \"yufts\",\n        \"yugas\",\n        \"yuked\",\n        \"yukes\",\n        \"yukky\",\n        \"yukos\",\n        \"yulan\",\n        \"yules\",\n        \"yummo\",\n        \"yummy\",\n        \"yumps\",\n        \"yupon\",\n        \"yuppy\",\n        \"yurta\",\n        \"yurts\",\n        \"yuzus\",\n        \"zabra\",\n        \"zacks\",\n        \"zaida\",\n        \"zaidy\",\n        \"zaire\",\n        \"zakat\",\n        \"zaman\",\n        \"zambo\",\n        \"zamia\",\n        \"zanja\",\n        \"zante\",\n        \"zanza\",\n        \"zanze\",\n        \"zappy\",\n        \"zarfs\",\n        \"zaris\",\n        \"zatis\",\n        \"zaxes\",\n        \"zayin\",\n        \"zazen\",\n        \"zeals\",\n        \"zebec\",\n        \"zebub\",\n        \"zebus\",\n        \"zedas\",\n        \"zeins\",\n        \"zendo\",\n        \"zerda\",\n        \"zerks\",\n        \"zeros\",\n        \"zests\",\n        \"zetas\",\n        \"zexes\",\n        \"zezes\",\n        \"zhomo\",\n        \"zibet\",\n        \"ziffs\",\n        \"zigan\",\n        \"zilas\",\n        \"zilch\",\n        \"zilla\",\n        \"zills\",\n        \"zimbi\",\n        \"zimbs\",\n        \"zinco\",\n        \"zincs\",\n        \"zincy\",\n        \"zineb\",\n        \"zines\",\n        \"zings\",\n        \"zingy\",\n        \"zinke\",\n        \"zinky\",\n        \"zippo\",\n        \"zippy\",\n        \"ziram\",\n        \"zitis\",\n        \"zizel\",\n        \"zizit\",\n        \"zlote\",\n        \"zloty\",\n        \"zoaea\",\n        \"zobos\",\n        \"zobus\",\n        \"zocco\",\n        \"zoeae\",\n        \"zoeal\",\n        \"zoeas\",\n        \"zoism\",\n        \"zoist\",\n        \"zombi\",\n        \"zonae\",\n        \"zonda\",\n        \"zoned\",\n        \"zoner\",\n        \"zones\",\n        \"zonks\",\n        \"zooea\",\n        \"zooey\",\n        \"zooid\",\n        \"zooks\",\n        \"zooms\",\n        \"zoons\",\n        \"zooty\",\n        \"zoppa\",\n        \"zoppo\",\n        \"zoril\",\n        \"zoris\",\n        \"zorro\",\n        \"zouks\",\n        \"zowee\",\n        \"zowie\",\n        \"zulus\",\n        \"zupan\",\n        \"zupas\",\n        \"zuppa\",\n        \"zurfs\",\n        \"zuzim\",\n        \"zygal\",\n        \"zygon\",\n        \"zymes\",\n        \"zymic\"\n    ]\n};\nexport default words;\n","import seedrandom from \"seedrandom\";\nimport { GameMode } from \"./enums\";\nimport wordList from \"./words_5\";\nexport const ROWS = 6;\nexport const COLS = 5;\nexport const words = Object.assign(Object.assign({}, wordList), { contains: (word) => {\n        return wordList.words.includes(word) || wordList.valid.includes(word);\n    } });\nexport function checkHardMode(boardState, evaluations, row) {\n    for (let i = 0; i < COLS; ++i) {\n        if (evaluations[row - 1][i] === \"correct\" && boardState[row - 1][i] !== boardState[row][i]) {\n            return { pos: i, char: boardState[row - 1][i], type: \"correct\" };\n        }\n    }\n    for (let i = 0; i < COLS; ++i) {\n        if (evaluations[row - 1][i] === \"present\" && !boardState[row].includes(boardState[row - 1][i])) {\n            return { pos: i, char: boardState[row - 1][i], type: \"present\" };\n        }\n    }\n    return { pos: -1, char: \"\", type: \"absent\" };\n}\nexport function getRowData(n, boardState, evaluations) {\n    const wordData = {\n        // letters not contained\n        not: [],\n        // for letters contained in the word that are not the same as any that are in the correct place\n        contained: new Set(),\n        letters: Array.from({ length: COLS }, () => ({ val: null, not: new Set() })),\n    };\n    for (let row = 0; row < n; ++row) {\n        for (let col = 0; col < COLS; ++col)\n            if (evaluations[row][col] === \"present\") {\n                wordData.contained.add(boardState[row][col]);\n                wordData.letters[col].not.add(boardState[row][col]);\n            }\n            else if (evaluations[row][col] === \"correct\") {\n                wordData.contained.delete(boardState[row][col]);\n                wordData.letters[col].val = boardState[row][col];\n            }\n            else {\n                wordData.not.push(boardState[row][col]);\n            }\n    }\n    let exp = \"\";\n    for (let i = 0; i < COLS; ++i) {\n        exp += wordData.letters[i].val\n            ? wordData.letters[i].val\n            : `[^${[...wordData.not, ...wordData.letters[i].not].join(\" \")}]`;\n    }\n    return (word) => {\n        if (new RegExp(exp).test(word)) {\n            for (const char of wordData.contained) {\n                if (!word.includes(char))\n                    return false;\n            }\n            return true;\n        }\n        return false;\n    };\n}\nexport function getState(word, guess) {\n    const charArr = word.split(\"\");\n    const result = Array(COLS).fill(\"absent\");\n    for (let i = 0; i < word.length; ++i) {\n        if (charArr[i] === guess.charAt(i)) {\n            result[i] = \"correct\";\n            charArr[i] = \"$\";\n        }\n    }\n    // Now look for letters in wrong position.\n    // Replace letter with $ in the charArr whenever we find one\n    // to avoid multiple counting\n    for (let i = 0; i < word.length; ++i) {\n        if (charArr.includes(guess.charAt(i)) && result[i] !== \"correct\") {\n            result[i] = \"present\";\n            charArr[charArr.indexOf(guess.charAt(i))] = \"$\";\n        }\n    }\n    return result; //result.map((e, i) => charArr.includes(guess[i]) && e !== \"correct\" ? \"present\" : e);\n}\nexport function contractNum(n) {\n    switch (n % 10) {\n        case 1: return `${n}st`;\n        case 2: return `${n}nd`;\n        case 3: return `${n}rd`;\n        default: return `${n}th`;\n    }\n}\nexport const keys = [\"qwertyuiop\", \"asdfghjkl\", \"zxcvbnm\"];\nexport function newSeed() {\n    const today = new Date();\n    return new Date(today.getFullYear(), today.getMonth(), today.getDate()).valueOf();\n}\nexport const modeData = {\n    default: GameMode.daily,\n    modes: [\n        {\n            name: \"Daily\",\n            unit: 86400000,\n            start: 1642370400000,\n            seed: newSeed(),\n            historical: false,\n            streak: true,\n        }\n    ]\n};\nexport function getWordNumber() {\n    const numbleOneDate = new Date(2022, 2, 21, 0, 0, 0, 0).setHours(0, 0, 0, 0);\n    const now = new Date().setHours(0, 0, 0, 0);\n    const msInDay = 86400000;\n    return Math.floor((now - numbleOneDate) / msInDay); //% WORDS.length\n    //\treturn Math.round((modeData.modes[mode].seed - modeData.modes[mode].start) / modeData.modes[mode].unit) + 1;\n}\n//export function seededRandomInt() { //min: number, max: number, seed: number) {\n//const rng = seedrandom(`${seed}`);\n//return Math.floor(min + (max - min) * rng());\n//    const numbleOneDate = new Date(2022,0,12,0,0,0,0).setHours(0,0,0,0)\n//    const now = new Date().setHours(0,0,0,0)\n//    const msInDay = 86400000\n//    return Math.floor((now - numbleOneDate) / msInDay) //% WORDS.length\n//}\nexport const DELAY_INCREMENT = 150;\nexport const PRAISE = [\n    \"Genius\", \"Magnificent\", \"Impressive\", \"Splendid\", \"Great\", \"Phew\"\n];\nexport function createNewGame(mode) {\n    return {\n        gameStatus: \"IN_PROGRESS\",\n        guesses: 0,\n        time: modeData.modes[mode].seed,\n        wordNumber: getWordNumber(),\n        validHard: true,\n        boardState: Array(ROWS).fill(\"\"),\n        evaluations: Array.from({ length: ROWS }, () => (Array(COLS).fill(\"nil\"))),\n        timeStart: 0,\n        timeEnd: 0,\n    };\n}\nexport function createDefaultStats(mode) {\n    const urlStats = new URLSearchParams(window.location.search);\n    const stats = {\n        gamesPlayed: 0,\n        lastGame: 0,\n        guesses: {\n            fail: 0,\n            1: 0,\n            2: 0,\n            3: 0,\n            4: 0,\n            5: 0,\n            6: 0,\n        },\n        currentStreak: 0,\n        maxStreak: 0,\n    };\n    return stats;\n}\n;\nexport function createLetterStates() {\n    return {\n        a: \"nil\",\n        b: \"nil\",\n        c: \"nil\",\n        d: \"nil\",\n        e: \"nil\",\n        f: \"nil\",\n        g: \"nil\",\n        h: \"nil\",\n        i: \"nil\",\n        j: \"nil\",\n        k: \"nil\",\n        l: \"nil\",\n        m: \"nil\",\n        n: \"nil\",\n        o: \"nil\",\n        p: \"nil\",\n        q: \"nil\",\n        r: \"nil\",\n        s: \"nil\",\n        t: \"nil\",\n        u: \"nil\",\n        v: \"nil\",\n        w: \"nil\",\n        x: \"nil\",\n        y: \"nil\",\n        z: \"nil\",\n    };\n}\nexport const definitions = new Map();\n","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { is_function, assign } from '../internal/index.mjs';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut } = {}) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n    let len = node.getTotalLength();\n    const style = getComputedStyle(node);\n    if (style.strokeLinecap !== 'butt') {\n        len += parseInt(style.strokeWidth);\n    }\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from \"svelte/store\";\nimport { createLetterStates } from \"./utils\";\nexport const mode = writable();\nexport const letterStates = writable(createLetterStates());\nexport const darkTheme = writable(false);\nexport const colorBlindTheme = writable(false);\nexport const hardMode = writable(false);\nexport const username = writable(null);\n","<script lang=\"ts\">\n\texport let onClick = () => {};\n</script>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" on:click={onClick}>\n\t<slot />\n</svg>\n\n<style lang=\"scss\">\n\tsvg {\n\t\tcursor: pointer;\n\t\twidth: 24px;\n\t\tmargin: 0px 0px 0px 5px;\n        padding: 0px;\n\t\t:global(path) {\n\t\t\tfill: var(--icon-color);\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher, getContext } from \"svelte\";\n\timport { scale, fade } from \"svelte/transition\";\n\timport { mode } from \"../stores\";\n\timport { modeData } from \"../utils\";\n\timport GameIcon from \"./GameIcon.svelte\";\n\timport type { Toaster } from \"./widgets\";\n\n\texport let showStats: boolean;\n//\texport let tutorial: boolean;\n\texport let showRefresh: boolean;\n    export let mobileNavOpened: boolean;\n\n//\texport let toaster = getContext<Toaster>(\"toaster\");\n\n\tconst dispatch = createEventDispatcher();\n\tmode.subscribe((m) => {\n\t\tif (modeData.modes[m].unit - (new Date().valueOf() - modeData.modes[m].seed) > 0) {\n\t\t\tshowRefresh = false;\n\t\t}\n\t});\n    \n    mobileNavOpened = false;\n    const toggleMobileNav = () => mobileNavOpened = !mobileNavOpened;\n</script>\n\n<header>    \n    <nav class:dropdown-opened={mobileNavOpened}>\n        <img src=\"img/Newton_Wordmark_Black2.png\" class=\"logo\" alt=\"Newton logo\" />\n        <div class=\"dropdown-link-outer\">\n        <div class=\"dropdown-link-inner\">\n\t\t  <GameIcon onClick={() => {toggleMobileNav; dispatch(\"tutorial\")}}>\n\t\t\t<path\n\t\t\t\td=\"M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z\"\n\t\t\t/>\n\t\t  </GameIcon>\n\t\t  {#if showRefresh}\n            <GameIcon onClick={() => dispatch(\"reload\")}>\n\t\t\t\t<path\n\t\t\t\t\ttransition:fade={{ duration: 200 }}\n\t\t\t\t\td=\"M4.609 12c0-4.082 3.309-7.391 7.391-7.391a7.39 7.39 0 0 1 6.523 3.912l-1.653 1.567H22v-5.13l-1.572 1.659C18.652 3.841 15.542 2 12 2 6.477 2 2 6.477 2 12s4.477 10 10 10c4.589 0 8.453-3.09 9.631-7.301l-2.512-.703c-.871 3.113-3.73 5.395-7.119 5.395-4.082 0-7.391-3.309-7.391-7.391z\"\n\t\t\t\t/>\n\t\t\t</GameIcon>\n\t\t  {/if}\n\t\t  {#if showStats}\n\t\t\t<GameIcon onClick={() => dispatch(\"stats\")}>\n\t\t\t\t<path\n\t\t\t\t\ttransition:fade={{ duration: 200 }}\n\t\t\t\t\td=\"M16,11V3H8v6H2v12h20V11H16z M10,5h4v14h-4V5z M4,11h4v8H4V11z M20,19h-4v-6h4V19z\"\n\t\t\t\t/>\n\t\t\t</GameIcon>\n\t\t  {/if}\n\t\t  <GameIcon onClick={() => dispatch(\"settings\")}>\n\t\t\t<path\n\t\t\t\td=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"\n\t\t\t/>\n\t\t  </GameIcon>\n\t   </div>\n       </div>\n    </nav>\n    <div class=\"h1-outer\">\n        <h1>\n\t\tn-erdle\n\t   </h1>\n    </div>\n</header>\n\n<style lang=\"scss\">\n\n\theader {\n\t\tposition: relative;\n\t\tfont-weight: 700;\n\t\ttext-transform: uppercase;\n\t\tletter-spacing: 0.2rem;\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\t//background-color: #000;\n        border-bottom: 1px solid var(--border-primary);\n\t\twidth: 100%;\n        margin: 0px auto;\n\t\theight: var(--header-height);\n\t}\n    \n    nav {\n        display: flex;\n        align-items: center;\n\t\tjustify-content: space-between;\n        max-width: 1400px;\n        width: 100%;\n        padding: 20px;\n        margin: auto;\n    }\n    .logo {\n        height: 31px;\n        margin-right: auto; \n        filter: var(--logo-invert); \n    }\n    .dropdown-link-outer {\n\t\theight: 100%;\n\t\tz-index: 1;\n\t\tdisplay: flex;\n        margin-left: auto;\n    }\n    .dropdown-link-inner {\n\t\theight: 100%;\n\t\tz-index: 1;\n\t\tdisplay: flex;\n    }\n    \n    .h1-outer {\n\t\tposition: absolute;\n\t\twidth: 100%;\n        display: flex;\n    }\n    h1 {\n\t\tfont-size: var(--fs-huge);\n        line-height: 0.8;\n        font-weight: 700;\n\t\ttext-align: center;\n        width: fit-content;\n        margin: 0px auto;\n        color: var(--color-mint);\n    }\n    @supports (background-clip: text) {\n        h1 {\n            background-image: linear-gradient(90deg, rgb(0,212,140), rgb(195,240,0));\n            background-clip: text;\n            color: transparent;\n        }\n    }\n    @supports (-webkit-background-clip: text) {\n        h1 {\n            background-image: linear-gradient(90deg, rgb(0,212,140), rgb(195,240,0));\n            -webkit-background-clip: text;\n            color: transparent;\n        }\n    }\n    \n    @media (max-width: 700px) { \n         nav {\n            position: absolute;\n            top: 0px;\n            left: 0px;\n            height: calc(var(--header-height) * 0.5);\n            margin: 0px auto;       \n            padding: 10px;\n        }\n        .logo {\n            height: 18px;\n        }\n        .h1-outer {\n            position: absolute;\n            top: calc(var(--header-height) * 0.5);\n            left: 0px;\n            height: fit-content;\n            margin: 0px auto;\n            padding-bottom: 10px;\n        }\n        h1 {\n            font-size: calc((var(--header-height) * 0.6) - 8px);\n            line-height: calc((var(--header-height) * 0.5) - 8px);\n        }\n    }\n</style>\n","<script lang=\"ts\">\n\timport { onDestroy } from \"svelte\";\n\n\timport { mode } from \"../../stores\";\n\n\timport { DELAY_INCREMENT, ROWS } from \"../../utils\";\n\n\texport let value = \"\";\n\texport let state: LetterState;\n\texport let position = 0;\n\texport function bounce() {\n\t\tsetTimeout(() => (animation = \"bounce\"), (ROWS + position) * DELAY_INCREMENT);\n\t}\n\tlet s: string;\n\tlet pop = false;\n\tlet animation = \"\";\n\n\t// ensure all animations play\n\tconst unsub = mode.subscribe(() => {\n\t\tanimation = \"\";\n\t\ts = \"nil\";\n\t\tsetTimeout(() => (s = \"\"), 10);\n\t});\n\t// prevent pop animation from playing at the beginning\n\tsetTimeout(() => (pop = true), 200);\n\n\tonDestroy(unsub);\n</script>\n\n<div\n\tdata-animation={animation}\n\tclass:value\n\tclass:pop\n\tclass=\"tile {state} {s}\"\n\tstyle=\"transition-delay: {position * DELAY_INCREMENT}ms\"\n>\n\t<div class=\"front\">{value}</div>\n\t<div class=\"back\">{value}</div>\n</div>\n\n<style lang=\"scss\">\n\t:not(.pop),\n\t:global(.complete) .value {\n\t\tscale: 1 !important;\n\t\topacity: 1 !important;\n\t}\n\t.value {\n\t\tanimation: pop 0.1s;\n\t\t.front {\n\t\t\tborder-color: var(--border-primary);\n\t\t}\n\t}\n\t.tile {\n        width: 100%;\n        height: 100%;\n        font-size: 100%;\n        font-family: var(--tile-font);\n\t\tfont-weight: bold;\n\t\ttext-transform: uppercase;\n\t\tposition: relative;\n\t\ttransform-style: preserve-3d;\n\t\t&[data-animation=\"bounce\"] {\n\t\t\tanimation: bounce 1s;\n\t\t}\n\t}\n\t.back,\n\t.front {\n        width: 100%;\n        height: 100%;\n\t\tdisplay: inline-flex;\n        justify-content: center;\n        align-items: center;\n        text-align: center;\n        vertical-align: middle;\n\t\tplace-items: center;\n\t\tposition: absolute;\n\t\tinset: 0;\n\t\tbackface-visibility: hidden;\n\t\t-webkit-backface-visibility: hidden;\n\t\ttransition: transform 0s ease-in-out;\n\t}\n\t.front {\n\t\tborder: 2px solid var(--border-primary);\n/*\t\ttransform: rotateY(0deg);*/\n        transform: rotate3d(-1, 1, 0, 0deg);\n    }\n\t.back {\n\t\tbackground: var(--color-absent);\n/*\t\ttransform: rotateY(180deg);*/\n        transform: rotate3d(-1, 1, 0, 180deg);\n\t}\n\t.correct .back {\n\t\tbackground: var(--color-correct);\n\t}\n\t.present .back {\n\t\tbackground: var(--color-present);\n\t}\n\t:global(.complete) .tile:not(.nil) .front {\n\t\ttransition-delay: inherit !important;\n\t\ttransition-duration: 0.8s;\n/*\t\ttransform: rotateY(180deg);*/\n        transform: rotate3d(-1, 1, 0, 180deg);\n\t}\n\t:global(.complete) .tile:not(.nil) .back {\n\t\ttransition-delay: inherit !important;\n\t\ttransition-duration: 0.8s;\n/*\t\ttransform: rotateY(0deg);*/\n        transform: rotate3d(-1, 1, 0, 0deg);\n\t}\n\t@keyframes pop {\n\t\tfrom {\n\t\t\tscale: 0.8;\n\t\t\topacity: 0;\n\t\t}\n\n\t\t40% {\n\t\t\tscale: 1.1;\n\t\t\topacity: 1;\n\t\t}\n\t}\n\t@keyframes bounce {\n\t\t0%,\n\t\t20% {\n\t\t\ttransform: translateY(0);\n\t\t}\n\t\t40% {\n\t\t\ttransform: translateY(-30px);\n\t\t}\n\t\t50% {\n\t\t\ttransform: translateY(5px);\n\t\t}\n\t\t60% {\n\t\t\ttransform: translateY(-15px);\n\t\t}\n\t\t80% {\n\t\t\ttransform: translateY(2px);\n\t\t}\n\t\t100% {\n\t\t\ttransform: translateY(0);\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\timport { COLS } from \"../../utils\";\n\n\timport Tile from \"./Tile.svelte\";\n\texport let guesses: number;\n\texport let num: number;\n\texport let value = \"\";\n\texport let evaluation: LetterState[];\n    \n\texport function shake() {\n\t\tanimation = \"shake\";\n\t}\n\texport function bounce() {\n\t\ttiles.forEach((e) => e.bounce());\n\t}\n\tconst dispatch = createEventDispatcher();\n\tlet animation = \"\";\n\tlet tiles: Tile[] = [];\n</script>\n\n<div\n\tclass=\"board-row\"\n\ton:animationend={() => (animation = \"\")}\n\tdata-animation={animation}\n\tclass:complete={guesses > num}\n>\n\t{#each Array(COLS) as _, i}\n\t\t<Tile bind:this={tiles[i]} state={evaluation[i]} value={value.charAt(i)} position={i+num} />\n\t{/each}\n</div>\n\n<style lang=\"scss\">\n\t.board-row {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat(var(--cols), 1fr);\n\t\tgrid-gap: 5px;\n\t\tfont-size: 2.4rem;\n        line-height: 2.4rem;\n\t\t&[data-animation=\"shake\"] {\n\t\t\tanimation: shake 0.6s;\n\t\t}\n\t}\n    @media (max-height: 600px) {\n        .board-row {\n            font-size: 2em;\n            line-height: 2em;\n        }\n    }\n    @media (max-height: 450px) {\n        .board-row {\n            font-size: 1.5em;\n            line-height: 1.5em;\n        }\n    }\n    \n    \n    \n    \n\t@keyframes shake {\n\t\t10%,\n\t\t90% {\n\t\t\ttransform: translateX(-1px);\n\t\t}\n\n\t\t20%,\n\t\t80% {\n\t\t\ttransform: translateX(2px);\n\t\t}\n\n\t\t30%,\n\t\t50%,\n\t\t70% {\n\t\t\ttransform: translateX(-4px);\n\t\t}\n\n\t\t40%,\n\t\t60% {\n\t\t\ttransform: translateX(4px);\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { getRowData, words, ROWS, COLS } from \"../../utils\";\n\n\timport Row from \"./Row.svelte\";\n//\timport ContextMenu from \"../widgets/ContextMenu.svelte\";\n\n\texport let value: string[];\n//\texport let board: GameBoard;\n//  export let boardState: string[];\n    export let evaluations: LetterState[][];\n\texport let guesses: number;\n\texport function shake(row: number) {\n\t\trows[row].shake();\n\t}\n\texport function bounce(row: number) {\n\t\trows[row].bounce();\n\t}\n\texport function hideCtx(e?: MouseEvent) {\n\t\tif (!e || !e.defaultPrevented) showCtx = false;\n\t}\n\tlet rows: Row[] = [];\n\tlet showCtx = false;\n\tlet pAns = 0;\n\tlet pSols = 0;\n\tlet x = 0;\n\tlet y = 0;\n\tlet word = \"\";\n    let innerHeight;\n\n\tfunction context(cx: number, cy: number, num: number, val: string) {\n\t\tif (guesses >= num) {\n\t\t\tx = cx;\n\t\t\ty = cy;\n\t\t\tshowCtx = true;\n\t\t\tword = guesses > num ? val : \"\";\n\n\t\t\tconst match = getRowData(num, boardState, evaluations);\n\t\t\tpAns = words.words.filter((w) => match(w)).length;\n\t\t\tpSols = pAns + words.valid.filter((w) => match(w)).length;\n\t\t}\n\t}\n</script>\n<svelte:window bind:innerHeight={innerHeight} />\n\n<div class=\"board\" id=\"boardid\" style=\"width: {COLS * Math.floor(Math.min(Math.floor(innerHeight*(4/7)),420)/ROWS)}px; height: {Math.min(Math.floor(innerHeight*(4/7)),420)}px;\">\n\t{#each value as _, i}\n\t\t<Row\n\t\t\tnum={i}\n\t\t\t{guesses}\n\t\t\tbind:this={rows[i]}\n\t\t\tbind:value={value[i]}\n\t\t\tevaluation={evaluations[i]}\n\t\t\ton:ctx={(e) => context(e.detail.x, e.detail.y, i, value[i])}\n\t\t/>\n\t{/each}\n</div>\n\n<style>\n\t.board {\n\t\tdisplay: grid;\n\t\tgrid-template-rows: repeat(var(--rows), 1fr);\n\t\tgrid-gap: 5.5px;\n\t\tflex-grow: 1;\n\t\tpadding: 10px 5px;\n\t\tposition: relative;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\n\texport let letter: string;\n\texport let state: LetterState = \"nil\";\n\n\tconst dispatch = createEventDispatcher();\n</script>\n\n<div class={state} class:big={letter.length !== 1} on:click={() => dispatch(\"keystroke\", letter)}>\n\t{letter}<slot />\n</div>\n\n<style>\n\tdiv {\n\t\tfont-size: var(--fs-medium);\n\t\tfont-weight: 700;\n\t\ttext-transform: uppercase;\n\t\tborder-radius: 6px;\n\t\theight: 58px;\n        margin: 0px 4px 0px 0px;\n\t\tbackground: var(--key-bg);\n\t\tcursor: pointer;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\t\tflex: 1;\n\t\ttransition: background-color 0.3s ease-in-out;\n\t}\n\t:global(.guesses) div {\n\t\ttransition-delay: 1s;\n\t}\n\t:global(.guesses .preventChange) div {\n\t\ttransition-duration: 0.15s;\n\t\ttransition-delay: 0s;\n\t\tbackground: var(--key-bg) !important;\n\t}\n\t.big {\n\t\tfont-size: var(--fs-tiny);\n\t\tflex-grow: 1.5;\n\t}\n\t.absent {\n\t\tbackground: var(--color-absent);\n\t}\n\t.present {\n\t\tbackground: var(--color-present);\n\t}\n\t.correct {\n\t\tbackground: var(--color-correct);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher, onDestroy, onMount } from \"svelte/internal\";\n\timport { letterStates, mode } from \"../../stores\";\n\timport { COLS, keys } from \"../../utils\";\n\timport Key from \"./Key.svelte\";\n\n\texport let value = \"\";\n\texport let disabled = false;\n\tlet preventChange = true;\n\n\tconst dispatch = createEventDispatcher();\n\n\tfunction appendValue(char: string) {\n\t\tif (!disabled && value.length < COLS) {\n\t\t\tdispatch(\"keystroke\", char);\n\t\t\tvalue += char;\n\t\t}\n\t}\n\tfunction backspaceValue() {\n\t\tif (!disabled) {\n\t\t\tvalue = value.slice(0, value.length - 1);\n\t\t}\n\t}\n\tfunction handleKeystroke(e: KeyboardEvent) {\n\t\tif (!disabled && !e.ctrlKey && !e.altKey && !e.metaKey) {\n\t\t\tif (e.key && /^[a-z]$/.test(e.key.toLowerCase())) {\n\t\t\t\treturn appendValue(e.key.toLowerCase());\n\t\t\t}\n\t\t\tif (e.key === \"Backspace\") return backspaceValue();\n\n\t\t\tif (e.key === \"Enter\") return dispatch(\"submitWord\");\n\t\t}\n\t\tif (e.key === \"Escape\") dispatch(\"esc\");\n\t}\n\n\t// Ensure keys change on load instead of loading their state color & change the color of all the keys to neutral, then to their correct color on mode change\n\tconst unsub = mode.subscribe(() => {\n\t\tpreventChange = true;\n\t\tsetTimeout(() => (preventChange = false), 200);\n\t});\n\tonDestroy(unsub);\n</script>\n\n<svelte:body on:keydown={handleKeystroke} />\n\n<div class:preventChange class=\"keyboard\">\n\t<div class=\"row\">\n\t\t{#each keys[0] as letter}\n\t\t\t<Key\n\t\t\t\t{letter}\n\t\t\t\ton:keystroke={(e) => appendValue(e.detail)}\n\t\t\t\tstate={$letterStates[letter]}\n\t\t\t/>\n\t\t{/each}\n\t</div>\n\t<div class=\"row\">\n\t\t{#each keys[1] as letter}\n\t\t\t<Key\n\t\t\t\t{letter}\n\t\t\t\ton:keystroke={(e) => appendValue(e.detail)}\n\t\t\t\tstate={$letterStates[letter]}\n\t\t\t/>\n\t\t{/each}\n\t</div>\n\t<div class=\"row\">\n\t\t<Key letter=\"\" on:keystroke={() => !disabled && dispatch(\"submitWord\")}>\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                <path \n                    d=\"M21 2a3 3 0 0 1 3 3v7.6a3 3 0 0 1-3 3H3.413l4.695 4.692a1 1 0 0 1-1.416 1.416l-6.4-6.4a1 1 0 0 1 0-1.416l6.4-6.4a1 1 0 1 1 1.416 1.416L3.413 13.6H21.5a1 1 0 0 0 .5-.5V4.6a.5.5 0 0 0-.5-.5h-4a1 1 0 0 1 0-2z\"\n                />\n\t\t\t</svg>\n        </Key>\n\t\t{#each keys[2] as letter}\n\t\t\t<Key\n\t\t\t\t{letter}\n\t\t\t\ton:keystroke={(e) => appendValue(e.detail)}\n\t\t\t\tstate={$letterStates[letter]}\n\t\t\t/>\n\t\t{/each}\n\t\t<Key letter=\"\" on:keystroke={backspaceValue}>\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t\t\t<path\n\t\t\t\t\td=\"M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H7.07L2.4 12l4.66-7H22v14zm-11.59-2L14 13.41 17.59 17 19 15.59 15.41 12 19 8.41 17.59 7 14 10.59 10.41 7 9 8.41 12.59 12 9 15.59z\"\n\t\t\t\t/>\n\t\t\t</svg>\n\t\t</Key>\n\t</div>\n</div>\n\n<style>\n\t.keyboard {\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tmargin-bottom: 2px;\n\t}\n\t.row {\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tmargin: 0 auto 4px;\n\t\tpadding: 0 4px;\n        touch-action: manipulation;\n\t}\n\t.row:nth-of-type(2) {\n\t\tpadding: 0 30px;\n\t}\n\tsvg {\n\t\tfill: var(--fg-primary);\n\t\twidth: 24px;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n    import { username } from \"../stores\";\n\timport GameIcon from \"./GameIcon.svelte\";\n\n\texport let visible = false;\n\n\tconst dispatch = createEventDispatcher();\n\n\tfunction close() {\n        if ($username) {\n\t\t  visible = false;\n\t\t  dispatch(\"close\");\n        }\n    }\n</script>\n\n\n\t<div class:visible class=\"overlay\" on:click|self={close}>\n\t\t<div class=\"modal\">\n            {#if ($username)}\n\t\t\t<div class=\"exit\" on:click={close}>\n\t\t\t\t<GameIcon>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n\t\t\t\t\t/>\n\t\t\t\t</GameIcon>\n\t\t\t</div>\n            {/if}\n\t\t\t<slot />\n\t\t</div>\n\t</div>\n\n\n<style lang=\"scss\">\n\t.overlay.visible,\n\t.visible .modal {\n\t\topacity: 1;\n\t\tvisibility: visible;\n\t}\n\t.exit {\n\t\tposition: absolute;\n\t\ttop: var(--modal-padding);\n\t\tright: var(--modal-padding);\n\t}\n\t/* regular modal */\n\t.overlay {\n\t\ttransition: all 0.2s ease;\n\t\tfont-size: var(--fs-small);\n\t\tvisibility: hidden;\n\t\tposition: absolute;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n\t\tz-index: 10;\n\t\topacity: 0;\n        background: #0008;\n        overflow-y: hidden;        \n        justify-content: center;\n        align-items: center;\n\t}\n\t.modal {\n\t\tposition: relative;\n\t\tbackground: var(--bg-tertiary);\n\t\tmax-width: var(--game-width);\n/*\t\theight: min-content;*/\n\t\tmax-height: 80%;\n\t\twidth: 100%;\n\t\toverflow-y: auto;\n\t\tborder-radius: 0px;\n\t\tborder: 1px solid var(--bg-secondary);\n\t\t--modal-padding: 16px;\n\t\tpadding: var(--modal-padding);\n\t\tpadding-top: calc(2 * var(--modal-padding));\n\t\tmargin: 10% auto;\n\t\ttransition: all 0.3s ease;\n\t\t> :global(*:not(h3)) {\n\t\t\tmargin-bottom: 15px;\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\nexport let visible = true;\n\nconst dispatch = createEventDispatcher();\n\n    \n</script>\n<div class=\"form-outer\" class:visible>\n<!--<h3>Enter the competition</h3>-->\n<div>\n    <form on:submit|preventDefault={() => dispatch(\"tryagain\")}>\n    <button type=\"submit\" class=\"btn btn-primary\">Try sending again</button>\n    </form>\n    </div>\n</div>\n<style>\n\t.form-outer.visible {\n\t\tdisplay: flex;\n\t}\n\t.form-outer {\n\t\tdisplay: none;\n\t}\n    .btn {\n        border-radius: 4pt;\n    }\n</style>\n","<script lang=\"ts\">\n\texport let visible = true;\n</script>\n\n<div class=\"sep\" class:visible>\n\t<div>\n\t\t<slot name=\"1\" />\n\t</div>\n\t<div>\n\t\t<slot name=\"2\" />\n\t</div>\n</div>\n\n<style>\n\t.sep.visible {\n\t\tdisplay: flex;\n\t}\n\t.sep {\n\t\tdisplay: none;\n\t}\n\t.sep :first-child {\n\t\tborder-right: 1px solid var(--fg-primary);\n\t}\n\t.sep div {\n\t\tflex: 1;\n\t\tdisplay: grid;\n\t\tplace-items: center;\n\t}\n</style>\n","<script>\n  export let href;\n  export let label = '';\n  export let fill = true;\n  export let ariaLabel = '';\n  let classes = '';\n\n  export { classes as class };\n</script>\n\n<style>\n.ssbc-button__link,\n.ssbc-button__icon {\n  display: inline-block;\n}\n\n.ssbc-button__link {\n  text-decoration: none;\n  color: #fff;\n}\n\n.ssbc-button {\n  transition: 25ms ease-out;\n  padding: 0.75em;\n}\n\n.ssbc-button__icon :global(svg) {\n  width: 1em;\n  height: 1em;\n  margin: 0;\n  vertical-align: middle;\n}\n\n.ssbc-button__icon--fill {\n  fill: #fff;\n  stroke: none;\n}\n\n.ssbc-button__icon--outline {\n  fill: none;\n  stroke: #fff;\n}\n</style>\n\n<a class=\"ssbc-button__link\" {href} target=\"_blank\" rel=\"noopener\" aria-label={ariaLabel}>\n  <div class=\"ssbc-button {classes}\">\n    <div aria-hidden=\"true\" class=\"ssbc-button__icon\" class:ssbc-button__icon--fill={fill} class:ssbc-button__icon--outline={!fill}>\n      <slot></slot>\n    </div>\n    {label}\n  </div>\n</a>","<script>\n  export let text;\n  export let ariaLabel = 'Share on WhatsApp';\n  let classes = '';\n\n  export { classes as class };\n\n  import ShareButton from './ShareButton.svelte';\n  let href;\n  \n  $: href = encodeURI(`whatsapp://send?text=${text}`);\n</script>\n\n<style>\n:global(.ssbc-button--whatsapp) {\n  background-color: #25D366;\n}\n\n:global(.ssbc-button--whatsapp:active),\n:global(.ssbc-button--whatsapp:hover) {\n  background-color: #1DA851;\n}\n</style>\n\n<ShareButton class=\"ssbc-button--whatsapp {classes}\" {...$$restProps} {ariaLabel} {href}>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <path d=\"M20.1 3.9C17.9 1.7 15 .5 12 .5 5.8.5.7 5.6.7 11.9c0 2 .5 3.9 1.5 5.6L.6 23.4l6-1.6c1.6.9 3.5 1.3 5.4 1.3 6.3 0 11.4-5.1 11.4-11.4-.1-2.8-1.2-5.7-3.3-7.8zM12 21.4c-1.7 0-3.3-.5-4.8-1.3l-.4-.2-3.5 1 1-3.4L4 17c-1-1.5-1.4-3.2-1.4-5.1 0-5.2 4.2-9.4 9.4-9.4 2.5 0 4.9 1 6.7 2.8 1.8 1.8 2.8 4.2 2.8 6.7-.1 5.2-4.3 9.4-9.5 9.4zm5.1-7.1c-.3-.1-1.7-.9-1.9-1-.3-.1-.5-.1-.7.1-.2.3-.8 1-.9 1.1-.2.2-.3.2-.6.1s-1.2-.5-2.3-1.4c-.9-.8-1.4-1.7-1.6-2-.2-.3 0-.5.1-.6s.3-.3.4-.5c.2-.1.3-.3.4-.5.1-.2 0-.4 0-.5C10 9 9.3 7.6 9 7c-.1-.4-.4-.3-.5-.3h-.6s-.4.1-.7.3c-.3.3-1 1-1 2.4s1 2.8 1.1 3c.1.2 2 3.1 4.9 4.3.7.3 1.2.5 1.6.6.7.2 1.3.2 1.8.1.6-.1 1.7-.7 1.9-1.3.2-.7.2-1.2.2-1.3-.1-.3-.3-.4-.6-.5z\"/>\n  </svg>\n</ShareButton>","<script>\n  export let text;\n  export let url;\n  export let ariaLabel = 'Share on Twitter';\n  let classes = '';\n\n  export { classes as class };\n\n  import ShareButton from './ShareButton.svelte';\n  let href;\n\n  $: href = encodeURI(`https://twitter.com/intent/tweet/?text=${text}&url=${url}`);\n</script>\n\n<style>\n:global(.ssbc-button--twitter) {\n  background-color: #55acee;\n}\n\n:global(.ssbc-button--twitter:active),\n:global(.ssbc-button--twitter:hover) {\n  background-color: #2795e9;\n}\n</style>\n\n<ShareButton class=\"ssbc-button--twitter {classes}\" {...$$restProps} {ariaLabel} {href}>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <path d=\"M23.44 4.83c-.8.37-1.5.38-2.22.02.93-.56.98-.96 1.32-2.02-.88.52-1.86.9-2.9 1.1-.82-.88-2-1.43-3.3-1.43-2.5 0-4.55 2.04-4.55 4.54 0 .36.03.7.1 1.04-3.77-.2-7.12-2-9.36-4.75-.4.67-.6 1.45-.6 2.3 0 1.56.8 2.95 2 3.77-.74-.03-1.44-.23-2.05-.57v.06c0 2.2 1.56 4.03 3.64 4.44-.67.2-1.37.2-2.06.08.58 1.8 2.26 3.12 4.25 3.16C5.78 18.1 3.37 18.74 1 18.46c2 1.3 4.4 2.04 6.97 2.04 8.35 0 12.92-6.92 12.92-12.93 0-.2 0-.4-.02-.6.9-.63 1.96-1.22 2.56-2.14z\"/>\n  </svg>\n</ShareButton>","<script lang=\"ts\">\n\timport type Toaster from \"./Toaster.svelte\";\n\n\timport { mode } from \"../../stores\";\n\timport { modeData, ROWS } from \"../../utils\";\n\timport { getContext } from \"svelte\";\n    import { WhatsApp, Twitter } from \"./sharebuttons\";\n\n\texport let state: GameState;\n\tconst toaster = getContext<Toaster>(\"toaster\");\n    const url =\"https://n-erdle.github.io\";\n\n\t$: stats = `N-erdle ${(state.wordNumber+1) % 3} ${\n\t\t(state.gameStatus === 'WIN') ? state.guesses : \"X\"\n\t}/${state.boardState.length}\\n\\n${state.evaluations\n\t\t.slice(0, state.guesses)\n\t\t.map((r) => r.map((l) => l === \"absent\" ? \"⬜\" : (l === \"correct\" ? \"🟩\" : \"🟨\")).join(\"\"))\n\t\t.join(\"\\n\")}\\n`;\n    \n\n</script>\n<h3>share</h3>\n<div class=\"sharecontainer\">\n    <Twitter class=\"share-button\" text=\"{stats}\" {url} />\n    <WhatsApp class=\"share-button\" text=\"{stats} {url}\" />\n    <div class=\"copybutton\"\n        on:click={() => {\n            navigator.clipboard.writeText(stats.concat(url));\n\t\t    toaster.pop(\"Copied to clipboard\");    \n        }}\n    >\n\t   <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" viewBox=\"0 0 24 24\" width=\"16\">\n\t\t<path\n\t\t\tfill=\"white\"\n\t\t\td=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92c0-1.61-1.31-2.92-2.92-2.92zM18 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM6 13c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm12 7.02c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z\"\n\t\t/>\n\t   </svg>\n       Copy\n    </div>\n</div>\n\n<style>\n    h3 {\n\t\tmargin-bottom: 10px;\n\t}\n    .sharecontainer {\n        display: grid; \n        grid-template-columns: 37.5px 37.5px 75px;\n        grid-gap: 10px;\n        justify-content: center;\n        width: 100%;\n    }\n\t.copybutton {\n        color: white;\n\t\tfont-weight: 500;\n\t\tbackground: var(--color-correct);\n\t\tborder-radius: 13px;\n\t\theight: 100%;\n\t\tdisplay: flex;\n        height: 40px;\n\t\twidth: 75px;\n        justify-content: center;\n        align-items: center;\n        text-align: center;\n        vertical-align: middle;\n\t\tgap: 5px;\n\t\tcursor: pointer;\n\t}\n    @media (max-width: 500px) {\n        .sharecontainer {\n            grid-gap: 5px;\n        }\n        .copybutton {\n            width: 70px;\n        }\n\n    }\n\tdiv:hover {\n\t\topacity: 0.9;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { COLS, ROWS } from \"../../utils\";\n\timport { username } from \"../../stores\";\n\timport { Tile } from \"../board\";\n\texport let visible: boolean;\n    \n    let rowWidth = 44*COLS-4;\n    \n    function isBlank(str) {\n        return (!str || /^\\s*$/.test(str));\n    }\n    \n    function setUsername(e) {\n\n        const form = document.querySelector('form');\n        const submitResponse = document.querySelector('#response');\n\n        // Capture the form data\n        let data = { };\n        Array.from(form).map(input => (data[input.id] = input.value));\n\n\n        if(isBlank(data.username))\n            submitResponse.innerHTML = 'Usernames cannot be blank!'\n        else {\n            $username = data.username;\n            submitResponse.innerHTML = 'Welcome {$username}!';\n        }\n    };\n</script>\n\n<h3>Welcome\n{#if ($username)}\n    {$username}!\n{:else}\n    to N-erdle!\n{/if}\n</h3> \n<div>On each day of ALS Building Infrastructure Week, there will be a power & utilities-themed word to guess – the person who can get all three in the fewest guesses will win a special prize…</div>\n\n{#if (!($username) || ($username === \"\"))}\n<h3>Sign up</h3>\n<p>To get started, choose a username (this will be used to identify the winner). If you have played before, use the same username here!</p>\n<div>\n    <form on:submit|preventDefault={setUsername}>\n    <div class=\"form-group\">\n        <label for=\"name\">Username</label>\n        <input type=\"text\" id=\"username\"  placeholder=\"Username\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n    </form>\n    <h4 id=\"response\">&nbsp;</h4>\n</div>\n\n{:else}\n<h3>how to play</h3>\n\n<div>Guess the <strong>N-ERDLE</strong> in {ROWS} tries.</div>\n<div>Each guess must be a valid {COLS}-letter word. Press enter to submit a guess. The colour of the tiles will then change as follows.\n</div>\n<div class:complete={visible} class=\"examples\" style=\"--tutorial-row-width: {rowWidth}px; --cols: {COLS}\">\n\t<div><strong>Examples</strong></div>\n\t<div class=\"row\">\n\t\t<Tile value=\"a\" state=\"correct\" />\n\t\t<Tile value=\"l\" state=\"nil\" />\n\t\t<Tile value=\"l\" state=\"nil\" />\n\t\t<Tile value=\"0\" state=\"nil\" />\n\t\t<Tile value=\"y\" state=\"nil\" />\n\t</div>\n\t<div>The letter <strong>A</strong> is in the word and in the correct spot.</div>\n\t<div class=\"row\">\n\t\t<Tile value=\"p\" state=\"nil\" />\n\t\t<Tile value=\"i\" state=\"present\" />\n\t\t<Tile value=\"p\" state=\"nil\" />\n\t\t<Tile value=\"e\" state=\"nil\" />\n\t\t<Tile value=\"s\" state=\"nil\" />\n\t</div>\n\t<div>The letter <strong>I</strong> is in the word but in the wrong spot.</div>\n\t<div class=\"row\">\n\t\t<Tile value=\"w\" state=\"nil\" />\n\t\t<Tile value=\"a\" state=\"nil\" />\n\t\t<Tile value=\"t\" state=\"nil\" />\n\t\t<Tile value=\"e\" state=\"absent\" />\n\t\t<Tile value=\"r\" state=\"nil\" />\n\t</div>\n\t<div>The letter <strong>E</strong> is not in the word in any spot.</div>\n</div>\n<div>A new N-ERDLE will be available at midnight each day!</div>\n{/if}\n\n<style lang=\"scss\">\n\tdiv {\n\t\tmargin: 10px 0;\n        font-stretch: 100%;\n        font-weight: 400;\n\t}\n\t.examples {\n\t\tborder-top: 1px solid var(--border-primary);\n\t\tborder-bottom: 1px solid var(--border-primary);\n\t\t:global(.row > *) {\n\t\t\theight: 100%;\n\t\t}\n\t\t&:not(.complete) :global(.row .back) {\n\t\t\ttransition-delay: 0.3s;\n\t\t}\n\t}\n\t.row {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat(var(--cols), 1fr);\n\t\theight: 40px;\n        width: var(--tutorial-row-width);\n\t\tgrid-gap: 5px;\n        font-size: 1.8em;\n        line-height: 1.4em;\n        vertical-align: middle;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher, onDestroy } from \"svelte\";\n\n\timport { blur } from \"svelte/transition\";\n\timport type { GameMode } from \"../../enums\";\n\timport { mode } from \"../../stores\";\n\timport { modeData, getWordNumber } from \"../../utils\";\n\n\tconst dispatch = createEventDispatcher();\n\n\tconst HOUR = 3600000;\n\tconst MINUTE = 60000;\n\tconst SECOND = 1000;\n\tlet ms = 1000;\n\n\tlet countDown: number;\n\n\texport function reset(m: GameMode) {\n\t\tclearInterval(countDown);\n\t\tms = modeData.modes[m].unit - (new Date().valueOf() - modeData.modes[m].seed);\n\t\tif (ms < 0) dispatch(\"timeup\");\n\t\tcountDown = setInterval(() => {\n\t\t\tms = modeData.modes[m].unit - (new Date().valueOf() - modeData.modes[m].seed);\n\t\t\tif (ms < 0) {\n\t\t\t\tclearInterval(countDown);\n\t\t\t\tdispatch(\"timeup\");\n\t\t\t}\n\t\t}, SECOND);\n\t}\n\t$: reset($mode);\n</script>\n{#if getWordNumber() < 2}\n<h3>Next n-erdle</h3>\n<div class=\"container\">\n\t{#if ms > 0}\n\t\t<div transition:blur class=\"timer\">\n\t\t\t{`${Math.floor(ms / HOUR)}`.padStart(2, \"0\")}:{`${Math.floor(\n\t\t\t\t(ms % HOUR) / MINUTE\n\t\t\t)}`.padStart(2, \"0\")}:{`${Math.floor((ms % MINUTE) / SECOND)}`.padStart(2, \"0\")}\n\t\t</div>\n\t{:else}\n\t\t<div transition:blur class=\"button\" on:click={() => dispatch(\"reload\")}>\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t\t\t<path\n\t\t\t\t\td=\"M4.609 12c0-4.082 3.309-7.391 7.391-7.391a7.39 7.39 0 0 1 6.523 3.912l-1.653 1.567H22v-5.13l-1.572 1.659C18.652 3.841 15.542 2 12 2 6.477 2 2 6.477 2 12s4.477 10 10 10c4.589 0 8.453-3.09 9.631-7.301l-2.512-.703c-.871 3.113-3.73 5.395-7.119 5.395-4.082 0-7.391-3.309-7.391-7.391z\"\n\t\t\t\t/>\n\t\t\t</svg>\n\t\t</div>\n\t{/if}\n</div>\n{:else}\n<h3>Thanks for playing!</h3>\n{/if}\n<style>\n\th3 {\n\t\tmargin-bottom: 10px;\n\t}\n\t.container {\n\t\theight: 45px;\n\t\tmin-width: 70%;\n\t\tposition: relative;\n\t}\n\t.timer {\n\t\tposition: absolute;\n\t\tinset: 0;\n\t\tfont-size: var(--fs-large);\n\t\ttext-align: center;\n\t}\n    @media (max-width: 500px) {\n        .timer {\n            font-size: var(--fs-medium);\n        }\n    }\n\t.button {\n\t\theight: 36px;\n        width: 36px;\n\t\tpadding: 4px;\n\t\tbackground: var(--color-correct);\n\t\tborder-radius: 4px;\n\t\tcursor: pointer;\n\t\tmargin: auto;\n\t}\n\tsvg {\n\t\tfill: white;\n\t\theight: 100%;\n\t}\n\t.button:hover {\n\t\topacity: 0.9;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { fade } from \"svelte/transition\";\n\n\texport function pop(text: string, duration = 1) {\n\t\ttoast = [text, ...toast];\n\t\tsetTimeout(() => (toast = toast.slice(0, toast.length - 1)), duration * 5000);\n\t}\n\tlet toast: string[] = [];\n</script>\n\n<div class=\"toast\">\n\t{#each toast as slice}\n\t\t<div class=\"slice\" out:fade={{ duration: 200 }}>{slice}</div>\n\t{/each}\n</div>\n\n<style>\n\t.toast {\n\t\ttop: 10%;\n\t\tleft: 50%;\n\t\ttransform: translateX(-50%);\n\t\tposition: absolute;\n\t\tz-index: 20;\n\t\tfont-weight: bold;\n\t}\n\t.slice {\n\t\tcolor: var(--bg-primary);\n\t\tbackground: var(--fg-primary);\n\t\tpadding: 16px;\n\t\tmargin: 16px auto;\n\t\tborder-radius: 4px;\n\t\twidth: fit-content;\n\t}\n</style>\n","<script lang=\"ts\">\n\texport let guesses = 0;\n\texport let distribution: Guesses;\n\texport let active: boolean;\n\n\t$: max = Math.max(...Object.values(distribution));\n</script>\n\n<h3>guess distribution</h3>\n<div class=\"container\">\n\t{#each Object.entries(distribution) as guess, i (guess[0])}\n\t\t{#if !isNaN(parseInt(guess[0]))}\n\t\t\t<div class=\"graph\">\n\t\t\t\t<span class=\"guess\">{guess[0]}</span>\n\t\t\t\t<div\n\t\t\t\t\tclass=\"bar\"\n\t\t\t\t\tclass:this={parseInt(guess[0]) === guesses && !active}\n\t\t\t\t\tstyle=\"width: {(guess[1] / max) * 100}%;\"\n\t\t\t\t>\n\t\t\t\t\t{guess[1]}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t{/if}\n\t{/each}\n</div>\n\n<style>\n\t.guess {\n\t\tdisplay: grid;\n\t\tplace-items: center;\n\t}\n\t.container {\n\t\twidth: 80%;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: 4px;\n\t}\n\t.graph {\n\t\theight: 20px;\n\t\tdisplay: flex;\n\t\tgap: 4px;\n\t}\n\t.bar {\n\t\tmin-width: 7%;\n\t\ttransition: width 0.3s ease-out;\n\t\tbackground: var(--color-absent);\n\t\tcolor: white;\n\t\tfont-weight: bold;\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t\talign-items: center;\n\t\tpadding-right: 8px;\n\t}\n\t.bar.this {\n\t\tbackground: var(--color-correct);\n\t}\n</style>\n","<script lang=\"ts\">\n\texport let value: boolean;\n\texport let disabled = false;\n</script>\n\n<div on:click={(e) => !disabled && (value = !value)} class:checked={value} {disabled} />\n\n<style lang=\"scss\">\n\tdiv[disabled=\"true\"] {\n\t\topacity: 0.5;\n\t\tcursor: unset;\n\t}\n\tdiv {\n\t\twidth: 32px;\n\t\theight: 20px;\n\t\tborder-radius: 10px;\n\t\tbackground: var(--fg-secondary);\n\t\tposition: relative;\n\t\tcursor: pointer;\n\t\ttransition: background-color 0.3s ease;\n\t\t&::before {\n\t\t\tcontent: \"\";\n\t\t\tposition: absolute;\n\t\t\twidth: 16px;\n\t\t\theight: 16px;\n\t\t\tbackground: white;\n\t\t\tborder-radius: 50%;\n\t\t\tmargin: 2px;\n\t\t\tleft: 0;\n\t\t\ttransition: left 0.3s ease;\n\t\t}\n\t}\n\t.checked {\n\t\tbackground: var(--color-correct);\n\t\t&::before {\n\t\t\tleft: 12px;\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\timport Switch from \"./Switch.svelte\";\n\texport let value: any;\n\texport let type: SettingType;\n//\texport let options: (string | number)[] = [];\n\texport let disabled = false;\n\tconst types = {\n\t\tswitch: Switch,\n\t};\n</script>\n\n<div class=\"setting\">\n\t<div>\n\t\t<div class=\"title\"><slot name=\"title\" /></div>\n\t\t<div class=\"desc\"><slot name=\"desc\" /></div>\n\t</div>\n\t<svelte:component this={types[type]} bind:value {disabled} />\n</div>\n\n<style>\n\t.setting {\n\t\t/* border-bottom: 1px solid var(--border-primary); */\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t}\n\t.title {\n\t\tfont-size: var(--fs-medium);\n\t\tfont-weight: 500;\n\t}\n\t.desc {\n\t\tfont-size: var(--fs-tiny);\n\t\tcolor: var(--fg-secondary);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { getContext, onMount } from \"svelte\";\n\n\timport { mode, darkTheme, colorBlindTheme } from \"../../stores\";\n\timport { modeData } from \"../../utils\";\n\timport { Toaster } from \"../widgets\";\n\timport Setting from \"./Setting.svelte\";\n\n\texport let visible: boolean;\n\texport let wordNumber: number;\n\tlet tip = 0;\n\n\t$: if (visible) tip = Math.floor(10 * Math.random());\n\n\tconst toaster = getContext<Toaster>(\"toaster\");\n\n\tlet root: HTMLElement;\n\tonMount(() => {\n\t\troot = document.body;//documentElement;\n\t});\n\t$: {\n\t\tif (root) {\n\t\t\t$darkTheme ? root.classList.remove(\"light\") : root.classList.add(\"light\");\n\t\t\t$colorBlindTheme\n\t\t\t\t? root.classList.add(\"colorblind\")\n\t\t\t\t: root.classList.remove(\"colorblind\");\n            localStorage.setItem(\"darkTheme\",$darkTheme)\n            localStorage.setItem(\"colorBlindTheme\",$colorBlindTheme)\n\t\t}\n\t}\n</script>\n\n<!-- not currently supported, see https://github.com/sveltejs/svelte/issues/3105 -->\n<!-- <svelte:body class:light={!$darkTheme} class:colorblind={$colorBlindTheme} /> -->\n<div class=\"outer\">\n\t<div class=\"settings-top\">\n\t\t<h3>settings</h3>\n\t\t<Setting type=\"switch\" bind:value={$darkTheme}>\n\t\t\t<span slot=\"title\">Dark Theme</span>\n\t\t</Setting>\n\t\t<Setting type=\"switch\" bind:value={$colorBlindTheme}>\n\t\t\t<span slot=\"title\">Colour Blind Mode</span>\n\t\t\t<span slot=\"desc\">High contrast colours</span>\n\t\t</Setting>\n        <div style=\"display: flex; justify-content: space-between; align-items: center;\">\n            <div>\n\t\t\t<div style=\"font-size: var(--fs-medium); font-weight: 500;\">\n                Clear all game data\n            </div>\n\t\t\t<div style=\"font-size: var(--fs-tiny); color: var(--fg-secondary);\">Resets all data, including game statistics</div>   \n            </div>\n        <div class=\"warningbutton\"><span \n            on:click={() => {\n                if (confirm(\"This will delete everything and cannot be undone. Are you sure?\")) {\n                    localStorage.clear();\n                    toaster.pop(\"Data deleted! Reloading...\");\n                    setTimeout(() => (location.reload()), 3000);\n                }\n            }}\n        >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-exclamation-triangle\" viewBox=\"0 0 16 16\">\n                    <path d=\"M7.938 2.016A.13.13 0 0 1 8.002 2a.13.13 0 0 1 .063.016.146.146 0 0 1 .054.057l6.857 11.667c.036.06.035.124.002.183a.163.163 0 0 1-.054.06.116.116 0 0 1-.066.017H1.146a.115.115 0 0 1-.066-.017.163.163 0 0 1-.054-.06.176.176 0 0 1 .002-.183L7.884 2.073a.147.147 0 0 1 .054-.057zm1.044-.45a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566z\"/>\n                    <path d=\"M7.002 12a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 5.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995z\"/>\n            </svg>\n            Delete\n        </span></div>\n    </div>\n\t</div>\n    <div class=\"footer\">\n        <div>Developed by <a href=\"https://github.com/rbrignall\" target=\"_blank\">rbrignall</a></div>\n        <div class=\"word\">\n            Game #{(((wordNumber % 3) + 3) % 3)+1}\n        </div>\n    </div>\n</div>\n\n<style>\n\t.outer {\n/*\t\theight: 100%;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n        justify-content: space-between;*/\n        position: relative;\n    }\n\t.footer {\n\t\tcolor: var(--fg-secondary);\n\t\tfont-size: var(--fs-tiny);\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: flex-end;\n\t\ttext-align: end;\n        width: 100%;\n        padding: 0px 0px;\n\t}\n    .settings-top {\n        padding: 0px 0px 30px 0px;\n    }\n\t:global(.settings-top > div) {\n\t\tpadding: 16px 0;\n\t\tborder-bottom: 1px solid var(--border-primary);\n\t}\n    .warningbutton {\n        color: var(--fg-primary);\n        cursor: pointer; \n        border: 1px solid var(--fg-primary); \n        border-radius: 3px; \n        padding: 3px; \n        font-size: var(--fs-medium);\n        font-weight: 400;\n    }\n    .warningbutton:hover {\n        color: var(--bg-primary);\n        background-color: var(--fg-primary);\n    }\n</style>\n","<script lang=\"ts\">\n\timport Header from \"./Header.svelte\";\n\timport { Board } from \"./board\";\n\timport Keyboard from \"./keyboard\";\n\timport Modal from \"./Modal.svelte\";\n\timport { onMount, setContext } from \"svelte\";\n\timport Settings from \"./settings\";\n\timport {\n\t\tShare,\n\t\tSeparator,\n//\t\tDefinition,\n\t\tTutorial,\n\t\tStatistics,\n\t\tDistribution,\n\t\tTimer,\n\t\tToaster,\n        Form,\n\t} from \"./widgets\";\n\timport {\n\t\tcontractNum,\n\t\tDELAY_INCREMENT,\n\t\tPRAISE,\n\t\tgetState,\n\t\tmodeData,\n\t\tcheckHardMode,\n\t\tROWS,\n\t\tCOLS,\n\t\tnewSeed,\n\t\tcreateNewGame,\n        getWordNumber,\n\t\tcreateLetterStates,\n\t\twords,\n\t} from \"../utils\";\n\timport { letterStates, hardMode, mode, username } from \"../stores\";\n\n\texport let word: string;\n\texport let stats: Stats;\n\texport let game: GameState;\n\texport let toaster: Toaster;\n\n\tsetContext(\"toaster\", toaster);\n\n\t// implement transition delay on keys\n\tconst delay = DELAY_INCREMENT * ROWS + 800;\n\n\tlet showTutorial = false; \n\tlet showSettings = false;\n\tlet showStats = false;\n\tlet showRefresh = false;\n    let showForm = false;\n    \n\tlet board: Board;\n\tlet timer: Timer;\n    \n    \n    /////////////////////////////////\n    function sendResult() {\n\n        //const form = document.querySelector('form');\n        const formURL = 'https://h9l4dxhaad.execute-api.eu-west-2.amazonaws.com/Prod/submitForm';\n        const submitResponse = document.querySelector('#response');\n        // Capture the form data\n        let data = {\n            username: $username,\n            word_number: game.wordNumber, \n            num_guesses: (game.gameStatus === \"WIN\" ? game.guesses : \"X\"),\n            time_in_secs: (game.timeEnd - game.timeStart) / 1000\n        };\n        //Array.from(form).map(input => (data[input.id] = input.value));\n        console.log('Sending: ', JSON.stringify(data));\n        submitResponse.innerHTML = 'Entering your result into the competition...'\n\n        // Create the AJAX request\n        var xhr = new XMLHttpRequest();\n        xhr.open(\"POST\", formURL, true);\n        xhr.setRequestHeader('Accept', 'application/json; charset=utf-8');\n        xhr.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\n\n        // Send the collected data as JSON\n        /////////////////////////////////////\n        // Reinstate this line to activate email!\n        xhr.send(JSON.stringify(data));\n        /////////////////////////////////////\n        xhr.onloadend = response => {\n            if (response.target.status === 200) {\n                //form.reset();\n                submitResponse.innerHTML = 'Competition entry sent!';\n                showForm = false;\n            } else {\n                submitResponse.innerHTML = 'Error sending your result!';\n                showForm = true;\n                console.error(JSON.parse(response));\n            }\n        };    \n    };\n    \n    \n    \n    function updateKey(e,i) {\n        var temp = $letterStates[game.boardState[game.guesses][i]] \n        switch(temp) {\n            // Always update key if currently \"nil\" or \"absent\" \n            case \"nil\":\n            case \"absent\":\n                $letterStates[game.boardState[game.guesses][i]] = e;\n                break;\n            // Only update key when currently \"present\" if upgraded to \"correct\" \n            case \"present\":\n                $letterStates[game.boardState[game.guesses][i]] = (e === \"correct\" ? e : temp);\n                break;\n            // Letter was correct: leave alone\n            default:\n                $letterStates[game.boardState[game.guesses][i]] = temp;\n        }\n    }\n    \n\tfunction submitWord() {\n\t\tif (game.boardState[game.guesses].length !== COLS) {\n\t\t\ttoaster.pop(\"Not enough letters\");\n\t\t\tboard.shake(game.guesses);\n\t\t} else if (words.contains(game.boardState[game.guesses])) {\n\t\t\tif (game.guesses > 0) {\n\t\t\t\tconst hm = checkHardMode(game.boardState, game.evaluations, game.guesses);\n\t\t\t\tif ($hardMode) {\n\t\t\t\t\tif (hm.type === \"correct\") {\n\t\t\t\t\t\ttoaster.pop(\n\t\t\t\t\t\t\t`${contractNum(hm.pos + 1)} letter must be ${hm.char.toUpperCase()}`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tboard.shake(game.guesses);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else if (hm.type === \"present\") {\n\t\t\t\t\t\ttoaster.pop(`Guess must contain ${hm.char.toUpperCase()}`);\n\t\t\t\t\t\tboard.shake(game.guesses);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else if (hm.type !== \"absent\") {\n\t\t\t\t\tgame.validHard = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst state = getState(word, game.boardState[game.guesses]);\n\t\t\tgame.evaluations[game.guesses] = state;\n\t\t\tstate.forEach((e, i) => (updateKey(e,i)));\n\t\t\t++game.guesses;\n\t\t\tif (game.boardState[game.guesses - 1] === word) win();\n\t\t\telse if (game.guesses === ROWS) lose();\n\t\t} else {\n\t\t\ttoaster.pop(\"Not in word list\");\n\t\t\tboard.shake(game.guesses);\n\t\t}\n\t}\n\n\tfunction win() {\n\t\tboard.bounce(game.guesses - 1);\n        game.gameStatus = \"WIN\";\n        game.timeEnd = Date.now();\n\t\tsetTimeout(() => toaster.pop(PRAISE[game.guesses - 1]), DELAY_INCREMENT * ROWS);\n\t\tsetTimeout(() => (showStats = true), delay * 1.4);\n\t\tif (!modeData.modes[$mode].historical) {\n\t\t\t++stats.guesses[game.guesses];\n\t\t\t++stats.gamesPlayed;\n\t\t\tif (\"currentStreak\" in stats) {\n\t\t\t\tstats.currentStreak =\n\t\t\t\t\tmodeData.modes[$mode].seed - stats.lastGame > modeData.modes[$mode].unit\n\t\t\t\t\t\t? 1\n\t\t\t\t\t\t: stats.currentStreak + 1;\n\t\t\t\tif (stats.currentStreak > stats.maxStreak) stats.maxStreak = stats.currentStreak;\n\t\t\t}\n\t\t\tstats.lastGame = modeData.modes[$mode].seed;\n\t\t\tlocalStorage.setItem(`statistics`, JSON.stringify(stats));\n\t\t}\n        sendResult();\n\t}\n\n\tfunction lose() {\n//\t\t++game.guesses;\n        game.gameStatus = \"FAIL\";\n        game.timeEnd = Date.now();\n        setTimeout(() => toaster.pop(word.toUpperCase()), DELAY_INCREMENT * ROWS);\n\t\tsetTimeout(() => (showStats = true), delay);\n\t\tif (!modeData.modes[$mode].historical) {\n\t\t\t++stats.guesses.fail;\n\t\t\t++stats.gamesPlayed;\n\t\t\tif (\"currentStreak\" in stats) stats.currentStreak = 0;\n\t\t\tstats.lastGame = modeData.modes[$mode].seed;\n\t\t\tlocalStorage.setItem(`statistics`, JSON.stringify(stats));\n\t\t}\n        sendResult();        \n\t}\n\n\tfunction reload() {\n        if(getWordNumber() > 1)\n            location.reload();            \n\t\tmodeData.modes[$mode].seed = newSeed();\n\t\tgame = createNewGame($mode);\n        word = words.words[((getWordNumber() % words.words.length) + words.words.length) % words.words.length]\n        $letterStates = createLetterStates();\n\t\tshowStats = false;\n\t\tshowRefresh = false;\n\t\ttimer.reset($mode);\n\t}\n\n\tonMount(() => {\n        if (stats.gamesPlayed === 0 || !($username)) {\n            setTimeout(() => (showTutorial = true), delay);\n        } else if (!(game.gameStatus === \"IN_PROGRESS\")) \n            setTimeout(() => (showStats = true), delay);\n\t});\n\t// $: toaster.pop(word);\n</script>\n\n<svelte:body on:click={board.hideCtx} on:contextmenu={board.hideCtx} />\n\n\t<Header\n\t\tbind:showRefresh\n\t\tshowStats={stats.gamesPlayed > 0 || (modeData.modes[$mode].historical && !(game.gameStatus === \"IN_PROGRESS\"))}\n\t\ton:stats={() => (showStats = true)}\n\t\ton:tutorial={() => (showTutorial = true)}\n\t\ton:settings={() => (showSettings = true)}\n\t\ton:reload={reload}\n\t/>\n<main class:guesses={game.guesses !== 0} style=\"--rows: {ROWS}; --cols: {COLS}\">\n    <div>\n\t<Board\n\t\tbind:this={board}\n\t\tbind:value={game.boardState}\n\t\tevaluations={game.evaluations}\n\t\tguesses={game.guesses}\n\t/>\n    </div>\n\t<Keyboard\n\t\ton:keystroke={() => {\n\t\t\tboard.hideCtx();\n\t\t}}\n\t\tbind:value={game.boardState[game.guesses === ROWS ? 0 : game.guesses]}\n\t\ton:submitWord={submitWord}\n\t\ton:esc={() => {\n\t\t\tshowTutorial = false;\n\t\t\tshowStats = false;\n\t\t\tshowSettings = false;\n\t\t}}\n\t\tdisabled={!(game.gameStatus === \"IN_PROGRESS\" && ($username))}\n\t/>\n</main>\n\n<Modal\n\tbind:visible={showTutorial}\n>\n\t<Tutorial visible={showTutorial} />\n</Modal>\n\n\n\n<Modal bind:visible={showStats}>\n<!--\t\t<Statistics data={stats} /> -->\n<!-- !(game.gameStatus === \"IN_PROGRESS\")} -->\n    <h4 id=\"response\">&nbsp;</h4>\n    <Form \n        visible={showForm} \n        on:tryagain={sendResult}\n    />\n\n    <Distribution distribution={stats.guesses} guesses={game.guesses} active={game.gameStatus===\"IN_PROGRESS\"} />\n\t<Separator visible={!(game.gameStatus === \"IN_PROGRESS\")}>\n\t\t<Timer\n\t\t\tslot=\"1\"\n\t\t\tbind:this={timer}\n\t\t\ton:timeup={() => (showRefresh = true)}\n\t\t\ton:reload={reload}\n\t\t/>\n\t\t<Share slot=\"2\" state={game} />\n\t</Separator>\n</Modal>\n\n<Modal bind:visible={showSettings}>\n\t<Settings visible={showSettings} wordNumber={game.wordNumber} />\n</Modal>\n\n<style>\n\tmain {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\theight: calc(100% - var(--header-height));\n\t\tmax-width: var(--game-width);\n\t\tmargin: 0px auto;\n\t\tposition: relative;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport {\n\t\tmodeData,\n\t\tcreateDefaultStats,\n\t\tcreateNewGame,\n\t\tcreateLetterStates,\n\t\tROWS,\n\t\tgetWordNumber,\n\t\twords,\n\t} from \"./utils\";\n\timport Game from \"./components/Game.svelte\";\n    //import GameOver from \".components/GameOver.svelte\";\n\timport { letterStates, hardMode, mode, \n            darkTheme, colorBlindTheme,\n            username\n    } from \"./stores\";\n\timport { GameMode } from \"./enums\";\n\timport { Toaster } from \"./components/widgets\";\n\timport { onMount, setContext } from \"svelte\";\n\n\n\tlet stats: Stats;\n\tlet word: string;\n\tlet state: GameState;\n\n\n    // Settings separated out:\n    darkTheme.set(JSON.parse(localStorage.getItem(\"darkTheme\")) as boolean || true);\n    colorBlindTheme.set(JSON.parse(localStorage.getItem(\"colorBlindTheme\")) as boolean || false);\n    hardMode.set(JSON.parse(localStorage.getItem(\"hardMode\")) as boolean || false);\n    username.set(JSON.parse(localStorage.getItem(\"username\")) as string || null);\n    \n    darkTheme.subscribe(s => localStorage.setItem(\"darkTheme\",s));\n    colorBlindTheme.subscribe(s => localStorage.setItem(\"colorBlindTheme\",s));\n    hardMode.subscribe(s => localStorage.setItem(\"hardMode\",s));\n    username.subscribe(s => localStorage.setItem(\"username\",JSON.stringify(s)));\n\n\tconst modeVal: GameMode = modeData.default;\n\tmode.set(modeVal);\n    \n\n\tmode.subscribe((m) => {\n\t\tlocalStorage.setItem(\"mode\", `${m}`);\n        \n        // Grab statistics. CreateDefaultStats looks for URL data\n\t\tstats = (JSON.parse(localStorage.getItem(\"statistics\")) as Stats) || createDefaultStats(m);\n\n        word = words.words[((getWordNumber() % words.words.length) + words.words.length) % words.words.length];\n\t\tlet temp: GameState;\n        temp = JSON.parse(localStorage.getItem(\"gameState\"));\n        if (!temp || getWordNumber() > temp.wordNumber) {\n            state = createNewGame(m);\n        } else {\n            // This is for backwards compatibility, can be removed in a day\n            if (!temp.wordNumber) {\n\t\t\t\ttemp.wordNumber = getWordNumber();\n            }\n            // TODO: Add checks for missing items in temp (e.g. evaluation being null)\n            state = temp;\n\t\t}\n\t\t// Set the letter states when data for a new game mode is loaded so the keyboard is correct\n\t\tconst letters = createLetterStates();\n\t\tfor (let row = 0; row < ROWS; ++row) {\n\t\t\tfor (let col = 0; col < state.boardState[row].length; ++col) {\n\t\t\t\tletters[state.boardState[row][col]] = state.evaluations[row][col];\n\t\t\t}\n\t\t}\n\t\tletterStates.set(letters);\n\t});\n\n\t$: saveState(state);\n\tfunction saveState(state: GameState) {\n        if (!(state.boardState[0]===\"\") && state.timeStart === 0)\n            state.timeStart = Date.now();\n        localStorage.setItem(\"gameState\", JSON.stringify(state));\n\t}\n\tlet toaster: Toaster;\n</script>\n\n<Toaster bind:this={toaster} />\n{#if (toaster && getWordNumber() < 3)}\n\t<Game {stats} {word} {toaster} bind:game={state} />\n{:else if toaster}\n<div class=\"gameover\">\n    <img src=\"img/Newton_Wordmark_Black2.png\" height=\"30px\" alt=\"Newton logo\" />\n</div>\n    <div class=\"goodbye\">Thanks for playing!</div>\n{/if}\n\n<style>\n    .gameover {\n        padding: 20px;\n        margin-right: auto; \n        filter: var(--logo-invert); \n    }\n    .goodbye {\n        padding: 20px;\n    }\n</style>","import App from \"./App.svelte\";\nexport default new App({\n    target: document.body,\n    // props: {}\n});\n"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","exclude_internal_props","props","result","compute_rest_props","keys","rest","Set","has","null_to_empty","value","set_store_value","ret","set","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","run_tasks","task","c","delete","f","size","loop","promise","Promise","fulfill","add","abort","append","target","node","appendChild","get_root_for_style","document","root","getRootNode","ownerDocument","host","append_empty_stylesheet","style_element","element","style","head","append_stylesheet","sheet","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","name","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_style","key","important","removeProperty","setProperty","toggle_class","toggle","classList","custom_event","type","detail","bubbles","e","createEvent","initCustomEvent","managed_styles","Map","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","t","rule","str","hash","charCodeAt","doc","stylesheet","rules","get","info","create_style_information","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","get_current_component","Error","onMount","on_mount","onDestroy","createEventDispatcher","getContext","context","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","add_flush_callback","seen_callbacks","flushidx","flush","saved_component","update","pop","fragment","before_update","after_update","wait","then","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_bidirectional_transition","params","intro","config","running_program","pending_program","animation_name","clear_animation","init","program","abs","start","end","group","go","easing","tick","css","globals","globalThis","global","destroy_block","lookup","get_spread_update","levels","updates","to_null_out","accounted_for","n","get_spread_object","spread_props","bind","index","bound","create_component","mount_component","customElement","m","new_on_destroy","map","destroy_component","make_dirty","fill","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","skip_bound","ready","hydrate","nodes","Array","from","childNodes","children","l","SvelteComponent","$destroy","$on","splice","$set","$$props","obj","$$set","module","define","Alea","seed","me","mash","String","h","s0","s1","s2","copy","impl","opts","xg","state","prng","int32","double","quick","exports","amd","alea","XorGen","strseed","y","z","w","xor128","v","xorwow","X","j","xorshift7","limit","xor4096","floor","tychei","pool","math","nodecrypto","width","startdenom","pow","significance","overflow","mask","seedrandom","shortseed","mixkey","flatten","entropy","tostring","out","randomBytes","Uint8Array","crypto","msCrypto","getRandomValues","browser","navigator","plugins","screen","autoseed","arc4","ARC4","g","S","pass","is_math_call","keylen","s","count","depth","prop","typ","smear","stringseed","fromCharCode","apply","random","require","ex","self","GameMode","require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","sr","require$$6","words","valid","wordList","contains","word","includes","newSeed","today","getFullYear","getMonth","getDate","valueOf","modeData","default","daily","modes","unit","historical","streak","getWordNumber","numbleOneDate","setHours","DELAY_INCREMENT","PRAISE","createNewGame","mode","gameStatus","guesses","time","wordNumber","validHard","boardState","evaluations","timeStart","timeEnd","cubicInOut","blur","amount","opacity","getComputedStyle","target_opacity","od","_t","u","fade","linear","subscriber_queue","writable","stop","subscribers","new_value","run_queue","subscriber","invalidate","letterStates","q","darkTheme","colorBlindTheme","hardMode","username","onClick","element_src","url","href","showStats","showRefresh","mobileNavOpened","position","setTimeout","charAt","num","evaluation","tiles","bounce","min","innerHeight","rows","pAns","cx","cy","val","match","wordData","not","contained","letters","row","col","exp","RegExp","test","char","getRowData","shake","defaultPrevented","letter","disabled","preventChange","appendValue","backspaceValue","ctrlKey","altKey","metaKey","toLowerCase","visible","$username","label","ariaLabel","classes","encodeURI","toaster","stats","clipboard","writeText","concat","form","querySelector","submitResponse","input","id","innerHTML","HOUR","padStart","MINUTE","SECOND","countDown","ms","reset","clearInterval","setInterval","$mode","running","start_time","end_time","toast","parseInt","isNaN","entries","old_blocks","get_key","dynamic","list","destroy","create_each_block","get_context","old_indexes","new_blocks","new_lookup","deltas","child_ctx","will_move","did_move","first","new_block","old_block","new_key","old_key","distribution","values","types","switch","Switch","body","$darkTheme","remove","$colorBlindTheme","localStorage","setItem","confirm","location","reload","gamesPlayed","hideCtx","game","board","timer","showTutorial","showSettings","showForm","sendResult","word_number","num_guesses","time_in_secs","console","log","JSON","stringify","xhr","XMLHttpRequest","open","setRequestHeader","send","onloadend","response","status","error","parse","hm","pos","checkHardMode","$hardMode","contractNum","toUpperCase","guess","charArr","getState","temp","$letterStates","updateKey","currentStreak","lastGame","maxStreak","win","fail","lose","getItem","modeVal","URLSearchParams","search","saveState"],"mappings":"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"}